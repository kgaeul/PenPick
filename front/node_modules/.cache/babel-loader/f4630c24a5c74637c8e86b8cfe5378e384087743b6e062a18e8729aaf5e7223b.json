{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst errors = require('../errors.js');\n\n// define base database object class; instances of this class are never\n// instantiated; instead, classes subclassed from this one will be\n// instantiated; a cache of these classes are maintained on each connection\nclass DbObjectImpl {\n  constructor(objType) {\n    this._objType = objType;\n  }\n\n  //---------------------------------------------------------------------------\n  // append()\n  //\n  // Appends an element to the collection.\n  //---------------------------------------------------------------------------\n  append() {\n    errors.throwNotImplemented(\"appending element to collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // copy()\n  //\n  // Creates and returns a copy of the object.\n  //---------------------------------------------------------------------------\n  copy() {\n    errors.throwNotImplemented(\"copying an object\");\n  }\n\n  //---------------------------------------------------------------------------\n  // deleteElement()\n  //\n  // Deletes an element from a collection.\n  //---------------------------------------------------------------------------\n  deleteElement() {\n    errors.throwNotImplemented(\"deleting an element from a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getElement()\n  //\n  // Returns an element from the collection.\n  //---------------------------------------------------------------------------\n  getElement() {\n    errors.throwNotImplemented(\"getting an element from a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getFirstIndex()\n  //\n  // Returns the first index in a collection.\n  //---------------------------------------------------------------------------\n  getFirstIndex() {\n    errors.throwNotImplemented(\"getting the first index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getKeys()\n  //\n  // Returns the keys of the collection in a JavaScript array.\n  //---------------------------------------------------------------------------\n  getKeys() {\n    errors.throwNotImplemented(\"returning the keys of a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getLastIndex()\n  //\n  // Returns the last index in a collection.\n  //---------------------------------------------------------------------------\n  getLastIndex() {\n    errors.throwNotImplemented(\"getting the last index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getNextIndex()\n  //\n  // Returns the next index in a collection.\n  //---------------------------------------------------------------------------\n  getNextIndex() {\n    errors.throwNotImplemented(\"getting the next index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getPrevIndex()\n  //\n  // Returns the previous index in a collection.\n  //---------------------------------------------------------------------------\n  getPrevIndex() {\n    errors.throwNotImplemented(\"getting the previous index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getValues()\n  //\n  // Returns the values of the collection in a JavaScript array.\n  //---------------------------------------------------------------------------\n  getValues() {\n    errors.throwNotImplemented(\"getting the values in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // hasElement()\n  //\n  // Returns whether an element exists at the given index.\n  //---------------------------------------------------------------------------\n  hasElement() {\n    errors.throwNotImplemented(\"getting if value exists in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // setElement()\n  //\n  // Sets the element at the given index in the collection.\n  //---------------------------------------------------------------------------\n  setElement() {\n    errors.throwNotImplemented(\"setting an element in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // trim()\n  //\n  // Trim the specified number of elements from the end of the collection.\n  //---------------------------------------------------------------------------\n  trim() {\n    errors.throwNotImplemented(\"trimming elements from a collection\");\n  }\n}\nmodule.exports = DbObjectImpl;","map":{"version":3,"names":["errors","require","DbObjectImpl","constructor","objType","_objType","append","throwNotImplemented","copy","deleteElement","getElement","getFirstIndex","getKeys","getLastIndex","getNextIndex","getPrevIndex","getValues","hasElement","setElement","trim","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/impl/dbObject.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst errors = require('../errors.js');\n\n// define base database object class; instances of this class are never\n// instantiated; instead, classes subclassed from this one will be\n// instantiated; a cache of these classes are maintained on each connection\nclass DbObjectImpl {\n\n  constructor(objType) {\n    this._objType = objType;\n  }\n\n  //---------------------------------------------------------------------------\n  // append()\n  //\n  // Appends an element to the collection.\n  //---------------------------------------------------------------------------\n  append() {\n    errors.throwNotImplemented(\"appending element to collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // copy()\n  //\n  // Creates and returns a copy of the object.\n  //---------------------------------------------------------------------------\n  copy() {\n    errors.throwNotImplemented(\"copying an object\");\n  }\n\n  //---------------------------------------------------------------------------\n  // deleteElement()\n  //\n  // Deletes an element from a collection.\n  //---------------------------------------------------------------------------\n  deleteElement() {\n    errors.throwNotImplemented(\"deleting an element from a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getElement()\n  //\n  // Returns an element from the collection.\n  //---------------------------------------------------------------------------\n  getElement() {\n    errors.throwNotImplemented(\"getting an element from a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getFirstIndex()\n  //\n  // Returns the first index in a collection.\n  //---------------------------------------------------------------------------\n  getFirstIndex() {\n    errors.throwNotImplemented(\"getting the first index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getKeys()\n  //\n  // Returns the keys of the collection in a JavaScript array.\n  //---------------------------------------------------------------------------\n  getKeys() {\n    errors.throwNotImplemented(\"returning the keys of a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getLastIndex()\n  //\n  // Returns the last index in a collection.\n  //---------------------------------------------------------------------------\n  getLastIndex() {\n    errors.throwNotImplemented(\"getting the last index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getNextIndex()\n  //\n  // Returns the next index in a collection.\n  //---------------------------------------------------------------------------\n  getNextIndex() {\n    errors.throwNotImplemented(\"getting the next index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getPrevIndex()\n  //\n  // Returns the previous index in a collection.\n  //---------------------------------------------------------------------------\n  getPrevIndex() {\n    errors.throwNotImplemented(\"getting the previous index in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getValues()\n  //\n  // Returns the values of the collection in a JavaScript array.\n  //---------------------------------------------------------------------------\n  getValues() {\n    errors.throwNotImplemented(\"getting the values in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // hasElement()\n  //\n  // Returns whether an element exists at the given index.\n  //---------------------------------------------------------------------------\n  hasElement() {\n    errors.throwNotImplemented(\"getting if value exists in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // setElement()\n  //\n  // Sets the element at the given index in the collection.\n  //---------------------------------------------------------------------------\n  setElement() {\n    errors.throwNotImplemented(\"setting an element in a collection\");\n  }\n\n  //---------------------------------------------------------------------------\n  // trim()\n  //\n  // Trim the specified number of elements from the end of the collection.\n  //---------------------------------------------------------------------------\n  trim() {\n    errors.throwNotImplemented(\"trimming elements from a collection\");\n  }\n\n}\n\nmodule.exports = DbObjectImpl;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAEtC;AACA;AACA;AACA,MAAMC,YAAY,CAAC;EAEjBC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EACzB;;EAEA;EACA;EACA;EACA;EACA;EACAE,MAAMA,CAAA,EAAG;IACPN,MAAM,CAACO,mBAAmB,CAAC,iCAAiC,CAAC;EAC/D;;EAEA;EACA;EACA;EACA;EACA;EACAC,IAAIA,CAAA,EAAG;IACLR,MAAM,CAACO,mBAAmB,CAAC,mBAAmB,CAAC;EACjD;;EAEA;EACA;EACA;EACA;EACA;EACAE,aAAaA,CAAA,EAAG;IACdT,MAAM,CAACO,mBAAmB,CAAC,uCAAuC,CAAC;EACrE;;EAEA;EACA;EACA;EACA;EACA;EACAG,UAAUA,CAAA,EAAG;IACXV,MAAM,CAACO,mBAAmB,CAAC,sCAAsC,CAAC;EACpE;;EAEA;EACA;EACA;EACA;EACA;EACAI,aAAaA,CAAA,EAAG;IACdX,MAAM,CAACO,mBAAmB,CAAC,yCAAyC,CAAC;EACvE;;EAEA;EACA;EACA;EACA;EACA;EACAK,OAAOA,CAAA,EAAG;IACRZ,MAAM,CAACO,mBAAmB,CAAC,oCAAoC,CAAC;EAClE;;EAEA;EACA;EACA;EACA;EACA;EACAM,YAAYA,CAAA,EAAG;IACbb,MAAM,CAACO,mBAAmB,CAAC,wCAAwC,CAAC;EACtE;;EAEA;EACA;EACA;EACA;EACA;EACAO,YAAYA,CAAA,EAAG;IACbd,MAAM,CAACO,mBAAmB,CAAC,wCAAwC,CAAC;EACtE;;EAEA;EACA;EACA;EACA;EACA;EACAQ,YAAYA,CAAA,EAAG;IACbf,MAAM,CAACO,mBAAmB,CAAC,4CAA4C,CAAC;EAC1E;;EAEA;EACA;EACA;EACA;EACA;EACAS,SAASA,CAAA,EAAG;IACVhB,MAAM,CAACO,mBAAmB,CAAC,oCAAoC,CAAC;EAClE;;EAEA;EACA;EACA;EACA;EACA;EACAU,UAAUA,CAAA,EAAG;IACXjB,MAAM,CAACO,mBAAmB,CAAC,yCAAyC,CAAC;EACvE;;EAEA;EACA;EACA;EACA;EACA;EACAW,UAAUA,CAAA,EAAG;IACXlB,MAAM,CAACO,mBAAmB,CAAC,oCAAoC,CAAC;EAClE;;EAEA;EACA;EACA;EACA;EACA;EACAY,IAAIA,CAAA,EAAG;IACLnB,MAAM,CAACO,mBAAmB,CAAC,qCAAqC,CAAC;EACnE;AAEF;AAEAa,MAAM,CAACC,OAAO,GAAGnB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}