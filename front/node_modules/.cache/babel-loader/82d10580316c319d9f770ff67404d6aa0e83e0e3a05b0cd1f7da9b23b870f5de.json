{"ast":null,"code":"// Copyright (c) 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst ConnectionImpl = require('./connection.js');\nconst errors = require('../errors.js');\nclass LobImpl {\n  //---------------------------------------------------------------------------\n  // _getConnImpl()\n  //\n  // Common method on all classes that make use of a connection -- used to\n  // ensure serialization of all use of the connection.\n  //---------------------------------------------------------------------------\n  _getConnImpl() {\n    let parentObj = this._parentObj;\n    while (!(parentObj instanceof ConnectionImpl)) parentObj = parentObj._parentObj;\n    return parentObj;\n  }\n\n  //---------------------------------------------------------------------------\n  // close()\n  //\n  // Close the LOB.\n  //---------------------------------------------------------------------------\n  close() {\n    errors.throwNotImplemented(\"closing a LOB\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getData()\n  //\n  // Returns all of the data in the LOB.\n  //---------------------------------------------------------------------------\n  getData() {\n    errors.throwNotImplemented(\"getting all of the data from a LOB\");\n  }\n\n  //---------------------------------------------------------------------------\n  // read()\n  //\n  // Reads data from the LOB at the specified offset.\n  //---------------------------------------------------------------------------\n  read() {\n    errors.throwNotImplemented(\"reading from a LOB\");\n  }\n\n  //---------------------------------------------------------------------------\n  // write()\n  //\n  // Writes data to the LOB at the specified offset.\n  //---------------------------------------------------------------------------\n  write() {\n    errors.throwNotImplemented(\"writing to a LOB\");\n  }\n}\nmodule.exports = LobImpl;","map":{"version":3,"names":["ConnectionImpl","require","errors","LobImpl","_getConnImpl","parentObj","_parentObj","close","throwNotImplemented","getData","read","write","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/impl/lob.js"],"sourcesContent":["// Copyright (c) 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst ConnectionImpl = require('./connection.js');\nconst errors = require('../errors.js');\n\nclass LobImpl {\n\n  //---------------------------------------------------------------------------\n  // _getConnImpl()\n  //\n  // Common method on all classes that make use of a connection -- used to\n  // ensure serialization of all use of the connection.\n  //---------------------------------------------------------------------------\n  _getConnImpl() {\n    let parentObj = this._parentObj;\n    while (!(parentObj instanceof ConnectionImpl))\n      parentObj = parentObj._parentObj;\n    return parentObj;\n  }\n\n  //---------------------------------------------------------------------------\n  // close()\n  //\n  // Close the LOB.\n  //---------------------------------------------------------------------------\n  close() {\n    errors.throwNotImplemented(\"closing a LOB\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getData()\n  //\n  // Returns all of the data in the LOB.\n  //---------------------------------------------------------------------------\n  getData() {\n    errors.throwNotImplemented(\"getting all of the data from a LOB\");\n  }\n\n  //---------------------------------------------------------------------------\n  // read()\n  //\n  // Reads data from the LOB at the specified offset.\n  //---------------------------------------------------------------------------\n  read() {\n    errors.throwNotImplemented(\"reading from a LOB\");\n  }\n\n  //---------------------------------------------------------------------------\n  // write()\n  //\n  // Writes data to the LOB at the specified offset.\n  //---------------------------------------------------------------------------\n  write() {\n    errors.throwNotImplemented(\"writing to a LOB\");\n  }\n\n}\n\nmodule.exports = LobImpl;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACjD,MAAMC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEtC,MAAME,OAAO,CAAC;EAEZ;EACA;EACA;EACA;EACA;EACA;EACAC,YAAYA,CAAA,EAAG;IACb,IAAIC,SAAS,GAAG,IAAI,CAACC,UAAU;IAC/B,OAAO,EAAED,SAAS,YAAYL,cAAc,CAAC,EAC3CK,SAAS,GAAGA,SAAS,CAACC,UAAU;IAClC,OAAOD,SAAS;EAClB;;EAEA;EACA;EACA;EACA;EACA;EACAE,KAAKA,CAAA,EAAG;IACNL,MAAM,CAACM,mBAAmB,CAAC,eAAe,CAAC;EAC7C;;EAEA;EACA;EACA;EACA;EACA;EACAC,OAAOA,CAAA,EAAG;IACRP,MAAM,CAACM,mBAAmB,CAAC,oCAAoC,CAAC;EAClE;;EAEA;EACA;EACA;EACA;EACA;EACAE,IAAIA,CAAA,EAAG;IACLR,MAAM,CAACM,mBAAmB,CAAC,oBAAoB,CAAC;EAClD;;EAEA;EACA;EACA;EACA;EACA;EACAG,KAAKA,CAAA,EAAG;IACNT,MAAM,CAACM,mBAAmB,CAAC,kBAAkB,CAAC;EAChD;AAEF;AAEAI,MAAM,CAACC,OAAO,GAAGV,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}