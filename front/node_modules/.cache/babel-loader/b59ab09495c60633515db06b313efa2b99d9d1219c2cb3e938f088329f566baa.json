{"ast":null,"code":"// Copyright (c) 2023 Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst Message = require(\"./base.js\");\n\n/**\n * Executes a Fast Negotiation RPC function.\n * It sends Protocol Negotiation, Cookie Message, Datatype Negotiation\n * and OSESS Key RPC in single round trip.\n *\n * @class ConnectionCookieMessage\n * @extends {Message}\n */\nclass ConnectionCookieMessage extends Message {\n  /**\n   * Serializes the ConnectionCookieMessage function arguments\n   *\n   * @param {object} buf input arguments\n   */\n  encode(buf) {\n    this.protocolMessage.encode(buf);\n    buf.writeUInt8(constants.TNS_MSG_TYPE_COOKIE);\n    buf.writeUInt8(1); // cookie version\n    buf.writeUInt8(this.cookie.protocolVersion);\n    buf.writeUInt16LE(this.cookie.charsetID);\n    buf.writeUInt8(this.cookie.flags);\n    buf.writeUInt16LE(this.cookie.ncharsetID);\n    buf.writeBytesWithLength(this.cookie.serverBanner);\n    buf.writeBytesWithLength(this.cookie.compileCaps);\n    buf.writeBytesWithLength(this.cookie.runtimeCaps);\n    this.dataTypeMessage.encode(buf);\n    this.authMessage.encode(buf);\n  }\n  processMessage(buf, messageType) {\n    if (messageType === constants.TNS_MSG_TYPE_RENEGOTIATE) {\n      this.cookie.populated = false;\n    } else if (messageType === constants.TNS_MSG_TYPE_PROTOCOL) {\n      this.protocolMessage.processMessage(buf, messageType);\n    } else if (messageType === constants.TNS_MSG_TYPE_DATA_TYPES) {\n      this.dataTypeMessage.processMessage(buf, messageType);\n    } else {\n      this.authMessage.processMessage(buf, messageType);\n    }\n  }\n}\nmodule.exports = ConnectionCookieMessage;","map":{"version":3,"names":["constants","require","Message","ConnectionCookieMessage","encode","buf","protocolMessage","writeUInt8","TNS_MSG_TYPE_COOKIE","cookie","protocolVersion","writeUInt16LE","charsetID","flags","ncharsetID","writeBytesWithLength","serverBanner","compileCaps","runtimeCaps","dataTypeMessage","authMessage","processMessage","messageType","TNS_MSG_TYPE_RENEGOTIATE","populated","TNS_MSG_TYPE_PROTOCOL","TNS_MSG_TYPE_DATA_TYPES","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/thin/protocol/messages/connectionCookie.js"],"sourcesContent":["// Copyright (c) 2023 Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst Message = require(\"./base.js\");\n\n/**\n * Executes a Fast Negotiation RPC function.\n * It sends Protocol Negotiation, Cookie Message, Datatype Negotiation\n * and OSESS Key RPC in single round trip.\n *\n * @class ConnectionCookieMessage\n * @extends {Message}\n */\nclass ConnectionCookieMessage extends Message {\n\n  /**\n   * Serializes the ConnectionCookieMessage function arguments\n   *\n   * @param {object} buf input arguments\n   */\n  encode(buf) {\n    this.protocolMessage.encode(buf);\n    buf.writeUInt8(constants.TNS_MSG_TYPE_COOKIE);\n    buf.writeUInt8(1);                  // cookie version\n    buf.writeUInt8(this.cookie.protocolVersion);\n    buf.writeUInt16LE(this.cookie.charsetID);\n    buf.writeUInt8(this.cookie.flags);\n    buf.writeUInt16LE(this.cookie.ncharsetID);\n    buf.writeBytesWithLength(this.cookie.serverBanner);\n    buf.writeBytesWithLength(this.cookie.compileCaps);\n    buf.writeBytesWithLength(this.cookie.runtimeCaps);\n    this.dataTypeMessage.encode(buf);\n    this.authMessage.encode(buf);\n  }\n\n  processMessage(buf, messageType) {\n    if (messageType === constants.TNS_MSG_TYPE_RENEGOTIATE) {\n      this.cookie.populated = false;\n    } else if (messageType === constants.TNS_MSG_TYPE_PROTOCOL) {\n      this.protocolMessage.processMessage(buf, messageType);\n    } else if (messageType === constants.TNS_MSG_TYPE_DATA_TYPES) {\n      this.dataTypeMessage.processMessage(buf, messageType);\n    } else {\n      this.authMessage.processMessage(buf, messageType);\n    }\n  }\n\n}\n\nmodule.exports = ConnectionCookieMessage;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,uBAAuB,SAASD,OAAO,CAAC;EAE5C;AACF;AACA;AACA;AACA;EACEE,MAAMA,CAACC,GAAG,EAAE;IACV,IAAI,CAACC,eAAe,CAACF,MAAM,CAACC,GAAG,CAAC;IAChCA,GAAG,CAACE,UAAU,CAACP,SAAS,CAACQ,mBAAmB,CAAC;IAC7CH,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAkB;IACpCF,GAAG,CAACE,UAAU,CAAC,IAAI,CAACE,MAAM,CAACC,eAAe,CAAC;IAC3CL,GAAG,CAACM,aAAa,CAAC,IAAI,CAACF,MAAM,CAACG,SAAS,CAAC;IACxCP,GAAG,CAACE,UAAU,CAAC,IAAI,CAACE,MAAM,CAACI,KAAK,CAAC;IACjCR,GAAG,CAACM,aAAa,CAAC,IAAI,CAACF,MAAM,CAACK,UAAU,CAAC;IACzCT,GAAG,CAACU,oBAAoB,CAAC,IAAI,CAACN,MAAM,CAACO,YAAY,CAAC;IAClDX,GAAG,CAACU,oBAAoB,CAAC,IAAI,CAACN,MAAM,CAACQ,WAAW,CAAC;IACjDZ,GAAG,CAACU,oBAAoB,CAAC,IAAI,CAACN,MAAM,CAACS,WAAW,CAAC;IACjD,IAAI,CAACC,eAAe,CAACf,MAAM,CAACC,GAAG,CAAC;IAChC,IAAI,CAACe,WAAW,CAAChB,MAAM,CAACC,GAAG,CAAC;EAC9B;EAEAgB,cAAcA,CAAChB,GAAG,EAAEiB,WAAW,EAAE;IAC/B,IAAIA,WAAW,KAAKtB,SAAS,CAACuB,wBAAwB,EAAE;MACtD,IAAI,CAACd,MAAM,CAACe,SAAS,GAAG,KAAK;IAC/B,CAAC,MAAM,IAAIF,WAAW,KAAKtB,SAAS,CAACyB,qBAAqB,EAAE;MAC1D,IAAI,CAACnB,eAAe,CAACe,cAAc,CAAChB,GAAG,EAAEiB,WAAW,CAAC;IACvD,CAAC,MAAM,IAAIA,WAAW,KAAKtB,SAAS,CAAC0B,uBAAuB,EAAE;MAC5D,IAAI,CAACP,eAAe,CAACE,cAAc,CAAChB,GAAG,EAAEiB,WAAW,CAAC;IACvD,CAAC,MAAM;MACL,IAAI,CAACF,WAAW,CAACC,cAAc,CAAChB,GAAG,EAAEiB,WAAW,CAAC;IACnD;EACF;AAEF;AAEAK,MAAM,CAACC,OAAO,GAAGzB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}