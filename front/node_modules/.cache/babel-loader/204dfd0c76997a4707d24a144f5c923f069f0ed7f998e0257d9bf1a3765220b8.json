{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaury\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\PenPick_project\\\\finalProject\\\\front\\\\src\\\\component\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Stomp from 'webstomp-client';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  // 받은 메시지를 저장하기 위한 상태\n  const [messages, setMessages] = useState([]);\n\n  // Stomp 클라이언트를 저장하기 위한 상태\n  const [stompClient, setStompClient] = useState(null);\n\n  // 사용자로부터 입력받은 메시지를 저장하기 위한 상태\n  const [inputMessage, setInputMessage] = useState('');\n\n  // 컴포넌트가 마운트될 때 WebSocket 서버에 연결하기 위한 효과 훅\n  useEffect(() => {\n    // WebSocket 연결을 설정하는 함수\n    const connect = () => {\n      // WebSocket 통신을 위한 SockJS 객체 생성\n      const socket = new SockJS('/websocket');\n\n      // WebSocket 연결 위에 Stomp 클라이언트 생성\n      const stomp = Stomp.over(socket);\n\n      // WebSocket 서버에 연결\n      stomp.connect({}, frame => {\n        console.log('연결됨: ' + frame);\n        // Stomp 클라이언트를 컴포넌트 상태에 설정\n        setStompClient(stomp);\n      });\n    };\n\n    // 컴포넌트가 마운트될 때 한 번만 실행되도록 하기 위해 빈 의존성 배열 사용\n    connect();\n  }, []);\n  const sendMessage = content => {\n    if (stompClient) {\n      // 내용과 송신자 정보를 포함한 메시지 객체 생성\n      const message = {\n        content,\n        sender: 'user'\n      };\n\n      // 메시지를 '/app/chat' 목적지로 서버에 전송\n      stompClient.send('app/websocket', {}, JSON.stringify(message));\n    } else {\n      console.error('Stomp client is not initialized.');\n    }\n  };\n\n  // '/topic/messages' 목적지에서 메시지를 구독하는 함수\n  const subscribeToMessages = () => {\n    // '/topic/messages' 목적지를 구독\n    stompClient.subscribe('/topic/messages', response => {\n      // 받은 메시지를 파싱하고 상태에 추가\n      const message = JSON.parse(response.body);\n      setMessages([...messages, message]);\n    });\n  };\n\n  // Stomp 클라이언트가 설정되면 메시지를 구독하기 위한 효과 훅\n  useEffect(() => {\n    if (stompClient) {\n      subscribeToMessages();\n    }\n  }, [stompClient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [message.sender, \": \", message.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setInputMessage(e.target.value),\n      value: inputMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(inputMessage),\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"nWnl0H/blwPoFpYhRwGg6Lt2d2o=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Stomp","SockJS","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","stompClient","setStompClient","inputMessage","setInputMessage","connect","socket","stomp","over","frame","console","log","sendMessage","content","message","sender","send","JSON","stringify","error","subscribeToMessages","subscribe","response","parse","body","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaury/OneDrive/바탕 화면/PenPick_project/finalProject/front/src/component/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Stomp from 'webstomp-client';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst Chat = () => {\r\n    // 받은 메시지를 저장하기 위한 상태\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    // Stomp 클라이언트를 저장하기 위한 상태\r\n    const [stompClient, setStompClient] = useState(null);\r\n\r\n    // 사용자로부터 입력받은 메시지를 저장하기 위한 상태\r\n    const [inputMessage, setInputMessage] = useState('');\r\n\r\n    // 컴포넌트가 마운트될 때 WebSocket 서버에 연결하기 위한 효과 훅\r\n    useEffect(() => {\r\n        // WebSocket 연결을 설정하는 함수\r\n        const connect = () => {\r\n            // WebSocket 통신을 위한 SockJS 객체 생성\r\n            const socket = new SockJS('/websocket');\r\n            \r\n            // WebSocket 연결 위에 Stomp 클라이언트 생성\r\n            const stomp = Stomp.over(socket);\r\n\r\n            // WebSocket 서버에 연결\r\n            stomp.connect({}, frame => {\r\n                console.log('연결됨: ' + frame);\r\n                // Stomp 클라이언트를 컴포넌트 상태에 설정\r\n                setStompClient(stomp);\r\n            });\r\n        };\r\n\r\n        // 컴포넌트가 마운트될 때 한 번만 실행되도록 하기 위해 빈 의존성 배열 사용\r\n        connect();\r\n    }, []);\r\n\r\n    const sendMessage = content => {\r\n        if (stompClient) {\r\n            // 내용과 송신자 정보를 포함한 메시지 객체 생성\r\n            const message = { content, sender: 'user' };\r\n    \r\n            // 메시지를 '/app/chat' 목적지로 서버에 전송\r\n            stompClient.send('app/websocket', {}, JSON.stringify(message));\r\n        } else {\r\n            console.error('Stomp client is not initialized.');\r\n        }\r\n    };\r\n\r\n    // '/topic/messages' 목적지에서 메시지를 구독하는 함수\r\n    const subscribeToMessages = () => {\r\n        // '/topic/messages' 목적지를 구독\r\n        stompClient.subscribe('/topic/messages', response => {\r\n            // 받은 메시지를 파싱하고 상태에 추가\r\n            const message = JSON.parse(response.body);\r\n            setMessages([...messages, message]);\r\n        });\r\n    };\r\n\r\n    // Stomp 클라이언트가 설정되면 메시지를 구독하기 위한 효과 훅\r\n    useEffect(() => {\r\n        if (stompClient) {\r\n            subscribeToMessages();\r\n        }\r\n    }, [stompClient]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {messages.map((message, index) => (\r\n                    <div key={index}>\r\n                        {message.sender}: {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                onChange={e => setInputMessage(e.target.value)}\r\n                value={inputMessage}\r\n            />\r\n            <button onClick={() => sendMessage(inputMessage)}>전송</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}