{"ast":null,"code":"import React, { useContext, useRef, useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useMap } from '../hooks/useMap.js';\nimport { KakaoMapMarkerClustererContext } from './MarkerClusterer.js';\nimport { useKakaoMapsSetEffect } from '../hooks/useKakaoMapsSetEffect.js';\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap = /*#__PURE__*/React.forwardRef(function CustomOverlayMap(_ref, ref) {\n  let {\n    position,\n    children,\n    clickable,\n    xAnchor,\n    yAnchor,\n    zIndex,\n    onCreate\n  } = _ref;\n  const markerCluster = useContext(KakaoMapMarkerClustererContext);\n  const map = useMap(`CustomOverlayMap`);\n  const container = useRef(document.createElement(\"div\"));\n  const overlayPosition = useMemo(() => {\n    return new kakao.maps.LatLng(position.lat, position.lng);\n  }, [position.lat, position.lng]);\n  const overlay = useMemo(() => {\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container.current\n    });\n    container.current.style.display = \"none\";\n    return KakaoCustomOverlay;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor]);\n  useImperativeHandle(ref, () => overlay, [overlay]);\n  useLayoutEffect(() => {\n    if (!map) return;\n    if (markerCluster) {\n      markerCluster.addMarker(overlay, true);\n    } else {\n      overlay.setMap(map);\n    }\n    return () => {\n      if (markerCluster) {\n        markerCluster.removeMarker(overlay, true);\n      } else {\n        overlay.setMap(null);\n      }\n    };\n  }, [map, markerCluster, overlay]);\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(overlay);\n  }, [overlay, onCreate]);\n  useKakaoMapsSetEffect(overlay, \"setPosition\", overlayPosition);\n  useKakaoMapsSetEffect(overlay, \"setZIndex\", zIndex);\n  return container.current.parentElement && /*#__PURE__*/ReactDOM.createPortal(children, container.current.parentElement);\n});\nexport { CustomOverlayMap };","map":{"version":3,"names":["React","useContext","useRef","useMemo","useImperativeHandle","useLayoutEffect","ReactDOM","useMap","KakaoMapMarkerClustererContext","useKakaoMapsSetEffect","CustomOverlayMap","forwardRef","_ref","ref","position","children","clickable","xAnchor","yAnchor","zIndex","onCreate","markerCluster","map","container","document","createElement","overlayPosition","kakao","maps","LatLng","lat","lng","overlay","KakaoCustomOverlay","CustomOverlay","content","current","style","display","addMarker","setMap","removeMarker","parentElement","createPortal"],"sources":["C:/Users/gaury/OneDrive/바탕 화면/PenPick_project/finalProject/front/node_modules/react-kakao-maps-sdk/esm/components/CustomOverlayMap.js"],"sourcesContent":["import React, { useContext, useRef, useMemo, useImperativeHandle, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useMap } from '../hooks/useMap.js';\nimport { KakaoMapMarkerClustererContext } from './MarkerClusterer.js';\nimport { useKakaoMapsSetEffect } from '../hooks/useKakaoMapsSetEffect.js';\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 이벤트 또는 `ref` 객체를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap = /*#__PURE__*/React.forwardRef(function CustomOverlayMap(_ref, ref) {\n  let {\n    position,\n    children,\n    clickable,\n    xAnchor,\n    yAnchor,\n    zIndex,\n    onCreate\n  } = _ref;\n  const markerCluster = useContext(KakaoMapMarkerClustererContext);\n  const map = useMap(`CustomOverlayMap`);\n  const container = useRef(document.createElement(\"div\"));\n  const overlayPosition = useMemo(() => {\n    return new kakao.maps.LatLng(position.lat, position.lng);\n  }, [position.lat, position.lng]);\n  const overlay = useMemo(() => {\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container.current\n    });\n    container.current.style.display = \"none\";\n    return KakaoCustomOverlay;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor]);\n  useImperativeHandle(ref, () => overlay, [overlay]);\n  useLayoutEffect(() => {\n    if (!map) return;\n    if (markerCluster) {\n      markerCluster.addMarker(overlay, true);\n    } else {\n      overlay.setMap(map);\n    }\n    return () => {\n      if (markerCluster) {\n        markerCluster.removeMarker(overlay, true);\n      } else {\n        overlay.setMap(null);\n      }\n    };\n  }, [map, markerCluster, overlay]);\n  useLayoutEffect(() => {\n    if (onCreate) onCreate(overlay);\n  }, [overlay, onCreate]);\n  useKakaoMapsSetEffect(overlay, \"setPosition\", overlayPosition);\n  useKakaoMapsSetEffect(overlay, \"setZIndex\", zIndex);\n  return container.current.parentElement && /*#__PURE__*/ReactDOM.createPortal(children, container.current.parentElement);\n});\n\nexport { CustomOverlayMap };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,OAAO;AAChG,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,8BAA8B,QAAQ,sBAAsB;AACrE,SAASC,qBAAqB,QAAQ,mCAAmC;;AAEzE;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAG,aAAaV,KAAK,CAACW,UAAU,CAAC,SAASD,gBAAgBA,CAACE,IAAI,EAAEC,GAAG,EAAE;EAC1F,IAAI;IACFC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC;EACF,CAAC,GAAGR,IAAI;EACR,MAAMS,aAAa,GAAGpB,UAAU,CAACO,8BAA8B,CAAC;EAChE,MAAMc,GAAG,GAAGf,MAAM,CAAE,kBAAiB,CAAC;EACtC,MAAMgB,SAAS,GAAGrB,MAAM,CAACsB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAC;EACvD,MAAMC,eAAe,GAAGvB,OAAO,CAAC,MAAM;IACpC,OAAO,IAAIwB,KAAK,CAACC,IAAI,CAACC,MAAM,CAACf,QAAQ,CAACgB,GAAG,EAAEhB,QAAQ,CAACiB,GAAG,CAAC;EAC1D,CAAC,EAAE,CAACjB,QAAQ,CAACgB,GAAG,EAAEhB,QAAQ,CAACiB,GAAG,CAAC,CAAC;EAChC,MAAMC,OAAO,GAAG7B,OAAO,CAAC,MAAM;IAC5B,MAAM8B,kBAAkB,GAAG,IAAIN,KAAK,CAACC,IAAI,CAACM,aAAa,CAAC;MACtDlB,SAAS,EAAEA,SAAS;MACpBC,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA,OAAO;MAChBC,MAAM,EAAEA,MAAM;MACdL,QAAQ,EAAEY,eAAe;MACzBS,OAAO,EAAEZ,SAAS,CAACa;IACrB,CAAC,CAAC;IACFb,SAAS,CAACa,OAAO,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACxC,OAAOL,kBAAkB;IACzB;EACF,CAAC,EAAE,CAACjB,SAAS,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;EACjCd,mBAAmB,CAACS,GAAG,EAAE,MAAMmB,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EAClD3B,eAAe,CAAC,MAAM;IACpB,IAAI,CAACiB,GAAG,EAAE;IACV,IAAID,aAAa,EAAE;MACjBA,aAAa,CAACkB,SAAS,CAACP,OAAO,EAAE,IAAI,CAAC;IACxC,CAAC,MAAM;MACLA,OAAO,CAACQ,MAAM,CAAClB,GAAG,CAAC;IACrB;IACA,OAAO,MAAM;MACX,IAAID,aAAa,EAAE;QACjBA,aAAa,CAACoB,YAAY,CAACT,OAAO,EAAE,IAAI,CAAC;MAC3C,CAAC,MAAM;QACLA,OAAO,CAACQ,MAAM,CAAC,IAAI,CAAC;MACtB;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,GAAG,EAAED,aAAa,EAAEW,OAAO,CAAC,CAAC;EACjC3B,eAAe,CAAC,MAAM;IACpB,IAAIe,QAAQ,EAAEA,QAAQ,CAACY,OAAO,CAAC;EACjC,CAAC,EAAE,CAACA,OAAO,EAAEZ,QAAQ,CAAC,CAAC;EACvBX,qBAAqB,CAACuB,OAAO,EAAE,aAAa,EAAEN,eAAe,CAAC;EAC9DjB,qBAAqB,CAACuB,OAAO,EAAE,WAAW,EAAEb,MAAM,CAAC;EACnD,OAAOI,SAAS,CAACa,OAAO,CAACM,aAAa,IAAI,aAAapC,QAAQ,CAACqC,YAAY,CAAC5B,QAAQ,EAAEQ,SAAS,CAACa,OAAO,CAACM,aAAa,CAAC;AACzH,CAAC,CAAC;AAEF,SAAShC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}