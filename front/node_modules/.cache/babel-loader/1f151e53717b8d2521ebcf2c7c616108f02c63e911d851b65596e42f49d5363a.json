{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst Message = require(\"./base.js\");\nconst constants = require(\"../constants.js\");\n\n/**\n * Executes Commit RPC\n *\n * @class CommitMessage\n * @extends {Message}\n */\nclass CommitMessage extends Message {\n  constructor(connImpl) {\n    super(connImpl);\n    this.functionCode = constants.TNS_FUNC_COMMIT;\n  }\n\n  //-------------------------------------------------------------------------\n  // encode()\n  //\n  // Write the RPC to perform commit operation in the database\n  //-------------------------------------------------------------------------\n  encode(pkt) {\n    this.writeFunctionHeader(pkt);\n  }\n}\nmodule.exports = CommitMessage;","map":{"version":3,"names":["Message","require","constants","CommitMessage","constructor","connImpl","functionCode","TNS_FUNC_COMMIT","encode","pkt","writeFunctionHeader","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/thin/protocol/messages/commit.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst Message = require(\"./base.js\");\nconst constants = require(\"../constants.js\");\n\n/**\n * Executes Commit RPC\n *\n * @class CommitMessage\n * @extends {Message}\n */\nclass CommitMessage extends Message {\n\n  constructor(connImpl) {\n    super(connImpl);\n    this.functionCode = constants.TNS_FUNC_COMMIT;\n  }\n\n  //-------------------------------------------------------------------------\n  // encode()\n  //\n  // Write the RPC to perform commit operation in the database\n  //-------------------------------------------------------------------------\n  encode(pkt) {\n    this.writeFunctionHeader(pkt);\n  }\n\n}\n\nmodule.exports = CommitMessage;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,aAAa,SAASH,OAAO,CAAC;EAElCI,WAAWA,CAACC,QAAQ,EAAE;IACpB,KAAK,CAACA,QAAQ,CAAC;IACf,IAAI,CAACC,YAAY,GAAGJ,SAAS,CAACK,eAAe;EAC/C;;EAEA;EACA;EACA;EACA;EACA;EACAC,MAAMA,CAACC,GAAG,EAAE;IACV,IAAI,CAACC,mBAAmB,CAACD,GAAG,CAAC;EAC/B;AAEF;AAEAE,MAAM,CAACC,OAAO,GAAGT,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}