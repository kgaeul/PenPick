{"ast":null,"code":"// Copyright (c) 2018, 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nclass SodaDocument {\n  //---------------------------------------------------------------------------\n  // createdOn\n  //\n  // Property for the created date of the document.\n  //---------------------------------------------------------------------------\n  get createdOn() {\n    return this._impl.getCreatedOn();\n  }\n\n  //---------------------------------------------------------------------------\n  // getContent()\n  //\n  // Returns the document content as a Javascript object.\n  //---------------------------------------------------------------------------\n  getContent() {\n    return JSON.parse(this._impl.getContentAsString());\n  }\n\n  //---------------------------------------------------------------------------\n  // getContentAsBuffer()\n  //\n  // Returns the document content as a buffer.\n  //---------------------------------------------------------------------------\n  getContentAsBuffer() {\n    return this._impl.getContentAsBuffer();\n  }\n\n  //---------------------------------------------------------------------------\n  // getContentAsString()\n  //\n  // Returns the document content as a string.\n  //---------------------------------------------------------------------------\n  getContentAsString() {\n    return this._impl.getContentAsString();\n  }\n\n  //---------------------------------------------------------------------------\n  // key\n  //\n  // Property for the key of the document.\n  //---------------------------------------------------------------------------\n  get key() {\n    return this._impl.getKey();\n  }\n\n  //---------------------------------------------------------------------------\n  // lastModified\n  //\n  // Property for the last modified date of the document.\n  //---------------------------------------------------------------------------\n  get lastModified() {\n    return this._impl.getLastModified();\n  }\n\n  //---------------------------------------------------------------------------\n  // mediaType\n  //\n  // Property for the media type of the document.\n  //---------------------------------------------------------------------------\n  get mediaType() {\n    return this._impl.getMediaType();\n  }\n\n  //---------------------------------------------------------------------------\n  // verison\n  //\n  // Property for the version of the document.\n  //---------------------------------------------------------------------------\n  get version() {\n    return this._impl.getVersion();\n  }\n}\nSodaDocument.prototype._sodaDocumentMarker = true;\nmodule.exports = SodaDocument;","map":{"version":3,"names":["SodaDocument","createdOn","_impl","getCreatedOn","getContent","JSON","parse","getContentAsString","getContentAsBuffer","key","getKey","lastModified","getLastModified","mediaType","getMediaType","version","getVersion","prototype","_sodaDocumentMarker","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/sodaDocument.js"],"sourcesContent":["// Copyright (c) 2018, 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nclass SodaDocument {\n\n  //---------------------------------------------------------------------------\n  // createdOn\n  //\n  // Property for the created date of the document.\n  //---------------------------------------------------------------------------\n  get createdOn() {\n    return this._impl.getCreatedOn();\n  }\n\n  //---------------------------------------------------------------------------\n  // getContent()\n  //\n  // Returns the document content as a Javascript object.\n  //---------------------------------------------------------------------------\n  getContent() {\n    return JSON.parse(this._impl.getContentAsString());\n  }\n\n  //---------------------------------------------------------------------------\n  // getContentAsBuffer()\n  //\n  // Returns the document content as a buffer.\n  //---------------------------------------------------------------------------\n  getContentAsBuffer() {\n    return this._impl.getContentAsBuffer();\n  }\n\n  //---------------------------------------------------------------------------\n  // getContentAsString()\n  //\n  // Returns the document content as a string.\n  //---------------------------------------------------------------------------\n  getContentAsString() {\n    return this._impl.getContentAsString();\n  }\n\n  //---------------------------------------------------------------------------\n  // key\n  //\n  // Property for the key of the document.\n  //---------------------------------------------------------------------------\n  get key() {\n    return this._impl.getKey();\n  }\n\n  //---------------------------------------------------------------------------\n  // lastModified\n  //\n  // Property for the last modified date of the document.\n  //---------------------------------------------------------------------------\n  get lastModified() {\n    return this._impl.getLastModified();\n  }\n\n  //---------------------------------------------------------------------------\n  // mediaType\n  //\n  // Property for the media type of the document.\n  //---------------------------------------------------------------------------\n  get mediaType() {\n    return this._impl.getMediaType();\n  }\n\n  //---------------------------------------------------------------------------\n  // verison\n  //\n  // Property for the version of the document.\n  //---------------------------------------------------------------------------\n  get version() {\n    return this._impl.getVersion();\n  }\n\n}\n\nSodaDocument.prototype._sodaDocumentMarker = true;\n\nmodule.exports = SodaDocument;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,YAAY,CAAC;EAEjB;EACA;EACA;EACA;EACA;EACA,IAAIC,SAASA,CAAA,EAAG;IACd,OAAO,IAAI,CAACC,KAAK,CAACC,YAAY,CAAC,CAAC;EAClC;;EAEA;EACA;EACA;EACA;EACA;EACAC,UAAUA,CAAA,EAAG;IACX,OAAOC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACJ,KAAK,CAACK,kBAAkB,CAAC,CAAC,CAAC;EACpD;;EAEA;EACA;EACA;EACA;EACA;EACAC,kBAAkBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACN,KAAK,CAACM,kBAAkB,CAAC,CAAC;EACxC;;EAEA;EACA;EACA;EACA;EACA;EACAD,kBAAkBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACL,KAAK,CAACK,kBAAkB,CAAC,CAAC;EACxC;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIE,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACP,KAAK,CAACQ,MAAM,CAAC,CAAC;EAC5B;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACT,KAAK,CAACU,eAAe,CAAC,CAAC;EACrC;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIC,SAASA,CAAA,EAAG;IACd,OAAO,IAAI,CAACX,KAAK,CAACY,YAAY,CAAC,CAAC;EAClC;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACb,KAAK,CAACc,UAAU,CAAC,CAAC;EAChC;AAEF;AAEAhB,YAAY,CAACiB,SAAS,CAACC,mBAAmB,GAAG,IAAI;AAEjDC,MAAM,CAACC,OAAO,GAAGpB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}