{"ast":null,"code":"// Copyright (c) 2019, 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst errors = require('../errors.js');\nclass AqMessageImpl {\n  //---------------------------------------------------------------------------\n  // getCorrelation()\n  //\n  // Returns the correlation associated with the message.\n  //---------------------------------------------------------------------------\n  getCorrelation() {\n    errors.throwNotImplemented(\"getting correlation (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getDelay()\n  //\n  // Returns the delay associated with the message.\n  //---------------------------------------------------------------------------\n  getDelay() {\n    errors.throwNotImplemented(\"getting delay (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getDeliveryMode()\n  //\n  // Returns the delivery mode associated with the message.\n  //---------------------------------------------------------------------------\n  getDeliveryMode() {\n    errors.throwNotImplemented(\"getting delivery mode (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getExceptionQueue()\n  //\n  // Returns the exception queue associated with the message.\n  //---------------------------------------------------------------------------\n  getExceptionQueue() {\n    errors.throwNotImplemented(\"getting exception queue (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getExpiration()\n  //\n  // Returns the expiration associated with the message.\n  //---------------------------------------------------------------------------\n  getExpiration() {\n    errors.throwNotImplemented(\"getting expiration (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getMsgId()\n  //\n  // Returns the message id associated with the message.\n  //---------------------------------------------------------------------------\n  getMsgId() {\n    errors.throwNotImplemented(\"getting message id (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getNumAttempts()\n  //\n  // Returns the number of attempts associated with the message.\n  //---------------------------------------------------------------------------\n  getNumAttempts() {\n    errors.throwNotImplemented(\"getting number of attempts (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getOriginalMsgId()\n  //\n  // Returns the original message id associated with the message.\n  //---------------------------------------------------------------------------\n  getOriginalMsgId() {\n    errors.throwNotImplemented(\"getting original message id (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getPayload()\n  //\n  // Returns the payload associated with the message.\n  //---------------------------------------------------------------------------\n  getPayload() {\n    errors.throwNotImplemented(\"getting payload (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getPriority()\n  //\n  // Returns the priority associated with the message.\n  //---------------------------------------------------------------------------\n  getPriority() {\n    errors.throwNotImplemented(\"getting priority (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getState()\n  //\n  // Returns the state associated with the message.\n  //---------------------------------------------------------------------------\n  getState() {\n    errors.throwNotImplemented(\"getting state (message)\");\n  }\n}\nmodule.exports = AqMessageImpl;","map":{"version":3,"names":["errors","require","AqMessageImpl","getCorrelation","throwNotImplemented","getDelay","getDeliveryMode","getExceptionQueue","getExpiration","getMsgId","getNumAttempts","getOriginalMsgId","getPayload","getPriority","getState","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/impl/aqMessage.js"],"sourcesContent":["// Copyright (c) 2019, 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst errors = require('../errors.js');\n\nclass AqMessageImpl {\n\n  //---------------------------------------------------------------------------\n  // getCorrelation()\n  //\n  // Returns the correlation associated with the message.\n  //---------------------------------------------------------------------------\n  getCorrelation() {\n    errors.throwNotImplemented(\"getting correlation (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getDelay()\n  //\n  // Returns the delay associated with the message.\n  //---------------------------------------------------------------------------\n  getDelay() {\n    errors.throwNotImplemented(\"getting delay (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getDeliveryMode()\n  //\n  // Returns the delivery mode associated with the message.\n  //---------------------------------------------------------------------------\n  getDeliveryMode() {\n    errors.throwNotImplemented(\"getting delivery mode (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getExceptionQueue()\n  //\n  // Returns the exception queue associated with the message.\n  //---------------------------------------------------------------------------\n  getExceptionQueue() {\n    errors.throwNotImplemented(\"getting exception queue (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getExpiration()\n  //\n  // Returns the expiration associated with the message.\n  //---------------------------------------------------------------------------\n  getExpiration() {\n    errors.throwNotImplemented(\"getting expiration (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getMsgId()\n  //\n  // Returns the message id associated with the message.\n  //---------------------------------------------------------------------------\n  getMsgId() {\n    errors.throwNotImplemented(\"getting message id (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getNumAttempts()\n  //\n  // Returns the number of attempts associated with the message.\n  //---------------------------------------------------------------------------\n  getNumAttempts() {\n    errors.throwNotImplemented(\"getting number of attempts (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getOriginalMsgId()\n  //\n  // Returns the original message id associated with the message.\n  //---------------------------------------------------------------------------\n  getOriginalMsgId() {\n    errors.throwNotImplemented(\"getting original message id (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getPayload()\n  //\n  // Returns the payload associated with the message.\n  //---------------------------------------------------------------------------\n  getPayload() {\n    errors.throwNotImplemented(\"getting payload (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getPriority()\n  //\n  // Returns the priority associated with the message.\n  //---------------------------------------------------------------------------\n  getPriority() {\n    errors.throwNotImplemented(\"getting priority (message)\");\n  }\n\n  //---------------------------------------------------------------------------\n  // getState()\n  //\n  // Returns the state associated with the message.\n  //---------------------------------------------------------------------------\n  getState() {\n    errors.throwNotImplemented(\"getting state (message)\");\n  }\n\n}\n\nmodule.exports = AqMessageImpl;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEtC,MAAMC,aAAa,CAAC;EAElB;EACA;EACA;EACA;EACA;EACAC,cAAcA,CAAA,EAAG;IACfH,MAAM,CAACI,mBAAmB,CAAC,+BAA+B,CAAC;EAC7D;;EAEA;EACA;EACA;EACA;EACA;EACAC,QAAQA,CAAA,EAAG;IACTL,MAAM,CAACI,mBAAmB,CAAC,yBAAyB,CAAC;EACvD;;EAEA;EACA;EACA;EACA;EACA;EACAE,eAAeA,CAAA,EAAG;IAChBN,MAAM,CAACI,mBAAmB,CAAC,iCAAiC,CAAC;EAC/D;;EAEA;EACA;EACA;EACA;EACA;EACAG,iBAAiBA,CAAA,EAAG;IAClBP,MAAM,CAACI,mBAAmB,CAAC,mCAAmC,CAAC;EACjE;;EAEA;EACA;EACA;EACA;EACA;EACAI,aAAaA,CAAA,EAAG;IACdR,MAAM,CAACI,mBAAmB,CAAC,8BAA8B,CAAC;EAC5D;;EAEA;EACA;EACA;EACA;EACA;EACAK,QAAQA,CAAA,EAAG;IACTT,MAAM,CAACI,mBAAmB,CAAC,8BAA8B,CAAC;EAC5D;;EAEA;EACA;EACA;EACA;EACA;EACAM,cAAcA,CAAA,EAAG;IACfV,MAAM,CAACI,mBAAmB,CAAC,sCAAsC,CAAC;EACpE;;EAEA;EACA;EACA;EACA;EACA;EACAO,gBAAgBA,CAAA,EAAG;IACjBX,MAAM,CAACI,mBAAmB,CAAC,uCAAuC,CAAC;EACrE;;EAEA;EACA;EACA;EACA;EACA;EACAQ,UAAUA,CAAA,EAAG;IACXZ,MAAM,CAACI,mBAAmB,CAAC,2BAA2B,CAAC;EACzD;;EAEA;EACA;EACA;EACA;EACA;EACAS,WAAWA,CAAA,EAAG;IACZb,MAAM,CAACI,mBAAmB,CAAC,4BAA4B,CAAC;EAC1D;;EAEA;EACA;EACA;EACA;EACA;EACAU,QAAQA,CAAA,EAAG;IACTd,MAAM,CAACI,mBAAmB,CAAC,yBAAyB,CAAC;EACvD;AAEF;AAEAW,MAAM,CAACC,OAAO,GAAGd,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}