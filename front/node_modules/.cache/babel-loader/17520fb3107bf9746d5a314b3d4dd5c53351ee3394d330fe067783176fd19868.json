{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nconst constants = require(\"./constants.js\");\nconst errors = require('../../errors');\n\n/**\n * Negotiates Compiletime and Runtime capabilities\n *\n */\nclass Capabilities {\n  constructor(protocolVersion) {\n    this.protocolVersion = protocolVersion;\n    this.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_MAX;\n    this.supports12cLogon = true;\n    this.supportsOob = false;\n    this.nCharsetId = constants.TNS_CHARSET_UTF16;\n    this.compileCaps = Buffer.alloc(constants.TNS_CCAP_MAX);\n    this.runtimeCaps = Buffer.alloc(constants.TNS_RCAP_MAX);\n    this.initCompileCaps();\n    this.initRuntimeCaps();\n    this.maxStringSize = 0;\n  }\n  adjustForServerCompileCaps(serverCaps) {\n    if (serverCaps[constants.TNS_CCAP_FIELD_VERSION] < this.ttcFieldVersion) {\n      this.ttcFieldVersion = serverCaps[constants.TNS_CCAP_FIELD_VERSION];\n      this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] = this.ttcFieldVersion;\n    }\n  }\n  adjustForServerRuntimeCaps(serverCaps) {\n    if (serverCaps[constants.TNS_RCAP_TTC] & constants.TNS_RCAP_TTC_32K) {\n      this.maxStringSize = 32767;\n    } else {\n      this.maxStringSize = 4000;\n    }\n  }\n  initCompileCaps() {\n    this.compileCaps[constants.TNS_CCAP_SQL_VERSION] = constants.TNS_CCAP_SQL_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOGON_TYPES] = constants.TNS_CCAP_O5LOGON | constants.TNS_CCAP_O5LOGON_NP | constants.TNS_CCAP_O7LOGON | constants.TNS_CCAP_O8LOGON_LONG_IDENTIFIER | constants.TNS_CCAP_O9LOGON_LONG_PASSWORD;\n    this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] = this.ttcFieldVersion;\n    this.compileCaps[constants.TNS_CCAP_SERVER_DEFINE_CONV] = 1;\n    this.compileCaps[constants.TNS_CCAP_TTC1] = constants.TNS_CCAP_FAST_BVEC | constants.TNS_CCAP_END_OF_CALL_STATUS | constants.TNS_CCAP_IND_RCD;\n    this.compileCaps[constants.TNS_CCAP_OCI1] = constants.TNS_CCAP_FAST_SESSION_PROPAGATE | constants.TNS_CCAP_APP_CTX_PIGGYBACK;\n    this.compileCaps[constants.TNS_CCAP_TDS_VERSION] = constants.TNS_CCAP_TDS_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_VERSION] = constants.TNS_CCAP_RPC_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_SIG] = constants.TNS_CCAP_RPC_SIG_VALUE;\n    this.compileCaps[constants.TNS_CCAP_DBF_VERSION] = constants.TNS_CCAP_DBF_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOB] = constants.TNS_CCAP_LOB_UB8_SIZE | constants.TNS_CCAP_LOB_ENCS | constants.TNS_CCAP_LOB_PREFETCH | constants.TNS_CCAP_LOB_TEMP_SIZE | constants.TNS_CCAP_LOB_12C | constants.TNS_CCAP_LOB_PREFETCH_DATA;\n    this.compileCaps[constants.TNS_CCAP_UB2_DTY] = 1;\n    this.compileCaps[constants.TNS_CCAP_LOB2] = constants.TNS_CCAP_LOB2_QUASI | constants.TNS_CCAP_LOB2_2GB_PREFETCH;\n    this.compileCaps[constants.TNS_CCAP_TTC3] = constants.TNS_CCAP_IMPLICIT_RESULTS | constants.TNS_CCAP_BIG_CHUNK_CLR | constants.TNS_CCAP_KEEP_OUT_ORDER;\n    this.compileCaps[constants.TNS_CCAP_TTC2] = constants.TNS_CCAP_ZLNP;\n    this.compileCaps[constants.TNS_CCAP_OCI2] = constants.TNS_CCAP_DRCP;\n    this.compileCaps[constants.TNS_CCAP_CLIENT_FN] = constants.TNS_CCAP_CLIENT_FN_MAX;\n    this.compileCaps[constants.TNS_CCAP_TTC4] = constants.TNS_CCAP_INBAND_NOTIFICATION;\n  }\n  initRuntimeCaps() {\n    this.runtimeCaps[constants.TNS_RCAP_COMPAT] = constants.TNS_RCAP_COMPAT_81;\n    this.runtimeCaps[constants.TNS_RCAP_TTC] = constants.TNS_RCAP_TTC_ZERO_COPY | constants.TNS_RCAP_TTC_32K;\n  }\n  checkNCharsetId() {\n    if (this.nCharsetId !== constants.TNS_CHARSET_UTF16) {\n      errors.throwErr(errors.ERR_NCHAR_CS_NOT_SUPPORTED, this.nCharsetId);\n    }\n  }\n}\nmodule.exports = Capabilities;","map":{"version":3,"names":["Buffer","require","constants","errors","Capabilities","constructor","protocolVersion","ttcFieldVersion","TNS_CCAP_FIELD_VERSION_MAX","supports12cLogon","supportsOob","nCharsetId","TNS_CHARSET_UTF16","compileCaps","alloc","TNS_CCAP_MAX","runtimeCaps","TNS_RCAP_MAX","initCompileCaps","initRuntimeCaps","maxStringSize","adjustForServerCompileCaps","serverCaps","TNS_CCAP_FIELD_VERSION","adjustForServerRuntimeCaps","TNS_RCAP_TTC","TNS_RCAP_TTC_32K","TNS_CCAP_SQL_VERSION","TNS_CCAP_SQL_VERSION_MAX","TNS_CCAP_LOGON_TYPES","TNS_CCAP_O5LOGON","TNS_CCAP_O5LOGON_NP","TNS_CCAP_O7LOGON","TNS_CCAP_O8LOGON_LONG_IDENTIFIER","TNS_CCAP_O9LOGON_LONG_PASSWORD","TNS_CCAP_SERVER_DEFINE_CONV","TNS_CCAP_TTC1","TNS_CCAP_FAST_BVEC","TNS_CCAP_END_OF_CALL_STATUS","TNS_CCAP_IND_RCD","TNS_CCAP_OCI1","TNS_CCAP_FAST_SESSION_PROPAGATE","TNS_CCAP_APP_CTX_PIGGYBACK","TNS_CCAP_TDS_VERSION","TNS_CCAP_TDS_VERSION_MAX","TNS_CCAP_RPC_VERSION","TNS_CCAP_RPC_VERSION_MAX","TNS_CCAP_RPC_SIG","TNS_CCAP_RPC_SIG_VALUE","TNS_CCAP_DBF_VERSION","TNS_CCAP_DBF_VERSION_MAX","TNS_CCAP_LOB","TNS_CCAP_LOB_UB8_SIZE","TNS_CCAP_LOB_ENCS","TNS_CCAP_LOB_PREFETCH","TNS_CCAP_LOB_TEMP_SIZE","TNS_CCAP_LOB_12C","TNS_CCAP_LOB_PREFETCH_DATA","TNS_CCAP_UB2_DTY","TNS_CCAP_LOB2","TNS_CCAP_LOB2_QUASI","TNS_CCAP_LOB2_2GB_PREFETCH","TNS_CCAP_TTC3","TNS_CCAP_IMPLICIT_RESULTS","TNS_CCAP_BIG_CHUNK_CLR","TNS_CCAP_KEEP_OUT_ORDER","TNS_CCAP_TTC2","TNS_CCAP_ZLNP","TNS_CCAP_OCI2","TNS_CCAP_DRCP","TNS_CCAP_CLIENT_FN","TNS_CCAP_CLIENT_FN_MAX","TNS_CCAP_TTC4","TNS_CCAP_INBAND_NOTIFICATION","TNS_RCAP_COMPAT","TNS_RCAP_COMPAT_81","TNS_RCAP_TTC_ZERO_COPY","checkNCharsetId","throwErr","ERR_NCHAR_CS_NOT_SUPPORTED","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/thin/protocol/capabilities.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst { Buffer } = require('buffer');\nconst constants = require(\"./constants.js\");\nconst errors = require('../../errors');\n\n/**\n * Negotiates Compiletime and Runtime capabilities\n *\n */\nclass Capabilities {\n\n  constructor(protocolVersion) {\n    this.protocolVersion = protocolVersion;\n    this.ttcFieldVersion = constants.TNS_CCAP_FIELD_VERSION_MAX;\n    this.supports12cLogon = true;\n    this.supportsOob = false;\n    this.nCharsetId = constants.TNS_CHARSET_UTF16;\n    this.compileCaps = Buffer.alloc(constants.TNS_CCAP_MAX);\n    this.runtimeCaps = Buffer.alloc(constants.TNS_RCAP_MAX);\n    this.initCompileCaps();\n    this.initRuntimeCaps();\n    this.maxStringSize = 0;\n  }\n\n  adjustForServerCompileCaps(serverCaps) {\n    if (serverCaps[constants.TNS_CCAP_FIELD_VERSION] < this.ttcFieldVersion) {\n      this.ttcFieldVersion = serverCaps[constants.TNS_CCAP_FIELD_VERSION];\n      this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] =\n        this.ttcFieldVersion;\n    }\n  }\n\n  adjustForServerRuntimeCaps(serverCaps) {\n    if (serverCaps[constants.TNS_RCAP_TTC] & constants.TNS_RCAP_TTC_32K) {\n      this.maxStringSize = 32767;\n    } else {\n      this.maxStringSize = 4000;\n    }\n  }\n\n  initCompileCaps() {\n    this.compileCaps[constants.TNS_CCAP_SQL_VERSION] =\n      constants.TNS_CCAP_SQL_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOGON_TYPES] =\n      constants.TNS_CCAP_O5LOGON | constants.TNS_CCAP_O5LOGON_NP |\n      constants.TNS_CCAP_O7LOGON | constants.TNS_CCAP_O8LOGON_LONG_IDENTIFIER |\n      constants.TNS_CCAP_O9LOGON_LONG_PASSWORD;\n    this.compileCaps[constants.TNS_CCAP_FIELD_VERSION] = this.ttcFieldVersion;\n    this.compileCaps[constants.TNS_CCAP_SERVER_DEFINE_CONV] = 1;\n    this.compileCaps[constants.TNS_CCAP_TTC1] =\n      constants.TNS_CCAP_FAST_BVEC | constants.TNS_CCAP_END_OF_CALL_STATUS |\n      constants.TNS_CCAP_IND_RCD;\n    this.compileCaps[constants.TNS_CCAP_OCI1] =\n      constants.TNS_CCAP_FAST_SESSION_PROPAGATE |\n      constants.TNS_CCAP_APP_CTX_PIGGYBACK;\n    this.compileCaps[constants.TNS_CCAP_TDS_VERSION] =\n      constants.TNS_CCAP_TDS_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_VERSION] =\n      constants.TNS_CCAP_RPC_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_RPC_SIG] =\n      constants.TNS_CCAP_RPC_SIG_VALUE;\n    this.compileCaps[constants.TNS_CCAP_DBF_VERSION] =\n      constants.TNS_CCAP_DBF_VERSION_MAX;\n    this.compileCaps[constants.TNS_CCAP_LOB] =\n      constants.TNS_CCAP_LOB_UB8_SIZE | constants.TNS_CCAP_LOB_ENCS\n      | constants.TNS_CCAP_LOB_PREFETCH | constants.TNS_CCAP_LOB_TEMP_SIZE\n      | constants.TNS_CCAP_LOB_12C | constants.TNS_CCAP_LOB_PREFETCH_DATA;\n    this.compileCaps[constants.TNS_CCAP_UB2_DTY] = 1;\n    this.compileCaps[constants.TNS_CCAP_LOB2] =\n      constants.TNS_CCAP_LOB2_QUASI | constants.TNS_CCAP_LOB2_2GB_PREFETCH;\n    this.compileCaps[constants.TNS_CCAP_TTC3] =\n      constants.TNS_CCAP_IMPLICIT_RESULTS | constants.TNS_CCAP_BIG_CHUNK_CLR |\n      constants.TNS_CCAP_KEEP_OUT_ORDER;\n    this.compileCaps[constants.TNS_CCAP_TTC2] = constants.TNS_CCAP_ZLNP;\n    this.compileCaps[constants.TNS_CCAP_OCI2] = constants.TNS_CCAP_DRCP;\n    this.compileCaps[constants.TNS_CCAP_CLIENT_FN] =\n      constants.TNS_CCAP_CLIENT_FN_MAX;\n    this.compileCaps[constants.TNS_CCAP_TTC4] =\n      constants.TNS_CCAP_INBAND_NOTIFICATION;\n  }\n\n  initRuntimeCaps() {\n    this.runtimeCaps[constants.TNS_RCAP_COMPAT] = constants.TNS_RCAP_COMPAT_81;\n    this.runtimeCaps[constants.TNS_RCAP_TTC] =\n      constants.TNS_RCAP_TTC_ZERO_COPY | constants.TNS_RCAP_TTC_32K;\n  }\n\n  checkNCharsetId() {\n    if (this.nCharsetId !== constants.TNS_CHARSET_UTF16) {\n      errors.throwErr(errors.ERR_NCHAR_CS_NOT_SUPPORTED, this.nCharsetId);\n    }\n  }\n\n}\n\nmodule.exports = Capabilities;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}