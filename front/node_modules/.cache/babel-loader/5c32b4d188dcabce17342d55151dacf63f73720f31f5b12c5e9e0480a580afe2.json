{"ast":null,"code":"// Copyright (c) 2019, 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require('./constants.js');\nconst errors = require('./errors.js');\nclass AqEnqOptions {\n  //---------------------------------------------------------------------------\n  // deliveryMode\n  //\n  // Property for the delivery mode to use for enqueuing messages.\n  //---------------------------------------------------------------------------\n  get deliveryMode() {\n    return this._impl.getDeliveryMode();\n  }\n  set deliveryMode(value) {\n    errors.assertPropValue(value === constants.AQ_MSG_DELIV_MODE_PERSISTENT || value === constants.AQ_MSG_DELIV_MODE_BUFFERED || value === constants.AQ_MSG_DELIV_MODE_PERSISTENT_OR_BUFFERED, \"deliveryMode\");\n    this._impl.setDeliveryMode(value);\n  }\n\n  //---------------------------------------------------------------------------\n  // transformation\n  //\n  // Property for the transformation to use for enqueuing messages.\n  //---------------------------------------------------------------------------\n  get transformation() {\n    return this._impl.getTransformation();\n  }\n  set transformation(value) {\n    errors.assertPropValue(typeof value === 'string', \"transformation\");\n    this._impl.setTransformation(value);\n  }\n\n  //---------------------------------------------------------------------------\n  // visibility\n  //\n  // Property for the visibility to use for enqueuing messages.\n  //---------------------------------------------------------------------------\n  get visibility() {\n    return this._impl.getVisibility();\n  }\n  set visibility(value) {\n    errors.assertPropValue(value === constants.AQ_VISIBILITY_IMMEDIATE || value === constants.AQ_VISIBILITY_ON_COMMIT, \"visibility\");\n    this._impl.setVisibility(value);\n  }\n}\nmodule.exports = AqEnqOptions;","map":{"version":3,"names":["constants","require","errors","AqEnqOptions","deliveryMode","_impl","getDeliveryMode","value","assertPropValue","AQ_MSG_DELIV_MODE_PERSISTENT","AQ_MSG_DELIV_MODE_BUFFERED","AQ_MSG_DELIV_MODE_PERSISTENT_OR_BUFFERED","setDeliveryMode","transformation","getTransformation","setTransformation","visibility","getVisibility","AQ_VISIBILITY_IMMEDIATE","AQ_VISIBILITY_ON_COMMIT","setVisibility","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/aqEnqOptions.js"],"sourcesContent":["// Copyright (c) 2019, 2022, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require('./constants.js');\nconst errors = require('./errors.js');\n\nclass AqEnqOptions {\n\n  //---------------------------------------------------------------------------\n  // deliveryMode\n  //\n  // Property for the delivery mode to use for enqueuing messages.\n  //---------------------------------------------------------------------------\n  get deliveryMode() {\n    return this._impl.getDeliveryMode();\n  }\n\n  set deliveryMode(value) {\n    errors.assertPropValue(value === constants.AQ_MSG_DELIV_MODE_PERSISTENT ||\n      value === constants.AQ_MSG_DELIV_MODE_BUFFERED ||\n      value === constants.AQ_MSG_DELIV_MODE_PERSISTENT_OR_BUFFERED, \"deliveryMode\");\n    this._impl.setDeliveryMode(value);\n  }\n\n  //---------------------------------------------------------------------------\n  // transformation\n  //\n  // Property for the transformation to use for enqueuing messages.\n  //---------------------------------------------------------------------------\n  get transformation() {\n    return this._impl.getTransformation();\n  }\n\n  set transformation(value) {\n    errors.assertPropValue(typeof value === 'string', \"transformation\");\n    this._impl.setTransformation(value);\n  }\n\n  //---------------------------------------------------------------------------\n  // visibility\n  //\n  // Property for the visibility to use for enqueuing messages.\n  //---------------------------------------------------------------------------\n  get visibility() {\n    return this._impl.getVisibility();\n  }\n\n  set visibility(value) {\n    errors.assertPropValue(value === constants.AQ_VISIBILITY_IMMEDIATE ||\n      value === constants.AQ_VISIBILITY_ON_COMMIT, \"visibility\");\n    this._impl.setVisibility(value);\n  }\n\n}\n\nmodule.exports = AqEnqOptions;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,MAAMC,MAAM,GAAGD,OAAO,CAAC,aAAa,CAAC;AAErC,MAAME,YAAY,CAAC;EAEjB;EACA;EACA;EACA;EACA;EACA,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,CAAC;EACrC;EAEA,IAAIF,YAAYA,CAACG,KAAK,EAAE;IACtBL,MAAM,CAACM,eAAe,CAACD,KAAK,KAAKP,SAAS,CAACS,4BAA4B,IACrEF,KAAK,KAAKP,SAAS,CAACU,0BAA0B,IAC9CH,KAAK,KAAKP,SAAS,CAACW,wCAAwC,EAAE,cAAc,CAAC;IAC/E,IAAI,CAACN,KAAK,CAACO,eAAe,CAACL,KAAK,CAAC;EACnC;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIM,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACR,KAAK,CAACS,iBAAiB,CAAC,CAAC;EACvC;EAEA,IAAID,cAAcA,CAACN,KAAK,EAAE;IACxBL,MAAM,CAACM,eAAe,CAAC,OAAOD,KAAK,KAAK,QAAQ,EAAE,gBAAgB,CAAC;IACnE,IAAI,CAACF,KAAK,CAACU,iBAAiB,CAACR,KAAK,CAAC;EACrC;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIS,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACX,KAAK,CAACY,aAAa,CAAC,CAAC;EACnC;EAEA,IAAID,UAAUA,CAACT,KAAK,EAAE;IACpBL,MAAM,CAACM,eAAe,CAACD,KAAK,KAAKP,SAAS,CAACkB,uBAAuB,IAChEX,KAAK,KAAKP,SAAS,CAACmB,uBAAuB,EAAE,YAAY,CAAC;IAC5D,IAAI,CAACd,KAAK,CAACe,aAAa,CAACb,KAAK,CAAC;EACjC;AAEF;AAEAc,MAAM,CAACC,OAAO,GAAGnB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}