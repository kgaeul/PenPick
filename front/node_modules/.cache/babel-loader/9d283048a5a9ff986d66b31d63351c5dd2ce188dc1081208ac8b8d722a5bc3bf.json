{"ast":null,"code":"// Copyright (c) 2018, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst errors = require('./errors.js');\nconst nodbUtil = require('./util.js');\nconst SodaDocument = require('./sodaDocument.js');\nclass SodaDocCursor {\n  //---------------------------------------------------------------------------\n  // close()\n  //\n  // Close the cursor and make it unusable for further operations.\n  //--------------------------------------------------------------------------\n  async close() {\n    errors.assertArgCount(arguments, 0, 0);\n    errors.assert(this._impl, errors.ERR_INVALID_SODA_DOC_CURSOR);\n    await this._impl.close();\n    delete this._impl;\n  }\n\n  //---------------------------------------------------------------------------\n  // getNext()\n  //\n  // Return the next document available from the cursor.\n  //---------------------------------------------------------------------------\n  async getNext() {\n    errors.assertArgCount(arguments, 0, 0);\n    errors.assert(this._impl, errors.ERR_INVALID_SODA_DOC_CURSOR);\n    const docImpl = await this._impl.getNext();\n    if (docImpl) {\n      const doc = new SodaDocument();\n      doc._impl = docImpl;\n      return doc;\n    }\n  }\n}\nnodbUtil.wrapFns(SodaDocCursor.prototype, \"close\", \"getNext\");\nmodule.exports = SodaDocCursor;","map":{"version":3,"names":["errors","require","nodbUtil","SodaDocument","SodaDocCursor","close","assertArgCount","arguments","assert","_impl","ERR_INVALID_SODA_DOC_CURSOR","getNext","docImpl","doc","wrapFns","prototype","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/sodaDocCursor.js"],"sourcesContent":["// Copyright (c) 2018, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst errors = require('./errors.js');\nconst nodbUtil = require('./util.js');\nconst SodaDocument = require('./sodaDocument.js');\n\nclass SodaDocCursor {\n\n  //---------------------------------------------------------------------------\n  // close()\n  //\n  // Close the cursor and make it unusable for further operations.\n  //--------------------------------------------------------------------------\n  async close() {\n    errors.assertArgCount(arguments, 0, 0);\n    errors.assert(this._impl, errors.ERR_INVALID_SODA_DOC_CURSOR);\n    await this._impl.close();\n    delete this._impl;\n  }\n\n  //---------------------------------------------------------------------------\n  // getNext()\n  //\n  // Return the next document available from the cursor.\n  //---------------------------------------------------------------------------\n  async getNext() {\n    errors.assertArgCount(arguments, 0, 0);\n    errors.assert(this._impl, errors.ERR_INVALID_SODA_DOC_CURSOR);\n    const docImpl = await this._impl.getNext();\n    if (docImpl) {\n      const doc = new SodaDocument();\n      doc._impl = docImpl;\n      return doc;\n    }\n  }\n\n}\n\nnodbUtil.wrapFns(SodaDocCursor.prototype,\n  \"close\",\n  \"getNext\");\n\nmodule.exports = SodaDocCursor;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAME,YAAY,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAEjD,MAAMG,aAAa,CAAC;EAElB;EACA;EACA;EACA;EACA;EACA,MAAMC,KAAKA,CAAA,EAAG;IACZL,MAAM,CAACM,cAAc,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IACtCP,MAAM,CAACQ,MAAM,CAAC,IAAI,CAACC,KAAK,EAAET,MAAM,CAACU,2BAA2B,CAAC;IAC7D,MAAM,IAAI,CAACD,KAAK,CAACJ,KAAK,CAAC,CAAC;IACxB,OAAO,IAAI,CAACI,KAAK;EACnB;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAME,OAAOA,CAAA,EAAG;IACdX,MAAM,CAACM,cAAc,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IACtCP,MAAM,CAACQ,MAAM,CAAC,IAAI,CAACC,KAAK,EAAET,MAAM,CAACU,2BAA2B,CAAC;IAC7D,MAAME,OAAO,GAAG,MAAM,IAAI,CAACH,KAAK,CAACE,OAAO,CAAC,CAAC;IAC1C,IAAIC,OAAO,EAAE;MACX,MAAMC,GAAG,GAAG,IAAIV,YAAY,CAAC,CAAC;MAC9BU,GAAG,CAACJ,KAAK,GAAGG,OAAO;MACnB,OAAOC,GAAG;IACZ;EACF;AAEF;AAEAX,QAAQ,CAACY,OAAO,CAACV,aAAa,CAACW,SAAS,EACtC,OAAO,EACP,SAAS,CAAC;AAEZC,MAAM,CAACC,OAAO,GAAGb,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}