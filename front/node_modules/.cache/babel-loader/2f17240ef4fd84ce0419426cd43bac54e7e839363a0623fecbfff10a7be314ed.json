{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst Message = require(\"./base.js\");\n\n/**\n * Executes a Protocol Negotiation RPC function\n *\n * @class ProtocolMessage\n * @extends {Message}\n */\nclass ProtocolMessage extends Message {\n  /**\n   * Serializes the ProtocolMessage function arguments\n   *\n   * @param {object} buf input arguments\n   */\n  encode(buf) {\n    buf.writeUInt8(constants.TNS_MSG_TYPE_PROTOCOL);\n    buf.writeUInt8(6); // protocol version (8.1+)\n    buf.writeUInt8(0); // \"array\" terminator\n    buf.writeStr(\"node-oracledb\"); // unique name for driver\n    buf.writeUInt8(0);\n  }\n  processMessage(buf, messageType) {\n    if (messageType === constants.TNS_MSG_TYPE_PROTOCOL) {\n      this.processProtocolInfo(buf);\n    } else {\n      super.processMessage(buf, messageType);\n    }\n  }\n  processProtocolInfo(buf) {\n    this.serverVersion = buf.readUInt8();\n    buf.skipUB1();\n    this.serverBanner = buf.readNullTerminatedBytes(48);\n    buf.caps.charSetID = buf.readUInt16LE();\n    this.serverFlags = buf.readUInt8();\n    const num_elem = buf.readUInt16LE();\n    if (num_elem > 0) {\n      // skip elements\n      buf.skipBytes(num_elem * 5);\n    }\n    const fdoLen = buf.readUInt16BE();\n    const fdo = buf.readBytes(fdoLen);\n    const ix = 6 + fdo[5] + fdo[6];\n    buf.caps.nCharsetId = (fdo[ix + 3] << 8) + fdo[ix + 4];\n    const serverCompileCaps = buf.readBytesWithLength();\n    if (serverCompileCaps) {\n      this.serverCompileCaps = Buffer.from(serverCompileCaps);\n      buf.caps.adjustForServerCompileCaps(this.serverCompileCaps);\n    }\n    const serverRunTimeCaps = buf.readBytesWithLength();\n    if (serverRunTimeCaps) {\n      this.serverRunTimeCaps = Buffer.from(serverRunTimeCaps);\n      buf.caps.adjustForServerRuntimeCaps(this.serverRunTimeCaps);\n    }\n  }\n}\nmodule.exports = ProtocolMessage;","map":{"version":3,"names":["constants","require","Message","ProtocolMessage","encode","buf","writeUInt8","TNS_MSG_TYPE_PROTOCOL","writeStr","processMessage","messageType","processProtocolInfo","serverVersion","readUInt8","skipUB1","serverBanner","readNullTerminatedBytes","caps","charSetID","readUInt16LE","serverFlags","num_elem","skipBytes","fdoLen","readUInt16BE","fdo","readBytes","ix","nCharsetId","serverCompileCaps","readBytesWithLength","Buffer","from","adjustForServerCompileCaps","serverRunTimeCaps","adjustForServerRuntimeCaps","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/thin/protocol/messages/protocol.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst constants = require(\"../constants.js\");\nconst Message = require(\"./base.js\");\n\n/**\n * Executes a Protocol Negotiation RPC function\n *\n * @class ProtocolMessage\n * @extends {Message}\n */\nclass ProtocolMessage extends Message {\n\n  /**\n   * Serializes the ProtocolMessage function arguments\n   *\n   * @param {object} buf input arguments\n   */\n  encode(buf) {\n    buf.writeUInt8(constants.TNS_MSG_TYPE_PROTOCOL);\n    buf.writeUInt8(6);                          // protocol version (8.1+)\n    buf.writeUInt8(0);                          // \"array\" terminator\n    buf.writeStr(\"node-oracledb\");              // unique name for driver\n    buf.writeUInt8(0);\n  }\n\n  processMessage(buf, messageType) {\n    if (messageType === constants.TNS_MSG_TYPE_PROTOCOL) {\n      this.processProtocolInfo(buf);\n    } else {\n      super.processMessage(buf, messageType);\n    }\n  }\n\n  processProtocolInfo(buf) {\n    this.serverVersion = buf.readUInt8();\n    buf.skipUB1();\n    this.serverBanner = buf.readNullTerminatedBytes(48);\n    buf.caps.charSetID = buf.readUInt16LE();\n    this.serverFlags = buf.readUInt8();\n    const num_elem = buf.readUInt16LE();\n    if (num_elem > 0) {                       // skip elements\n      buf.skipBytes(num_elem * 5);\n    }\n    const fdoLen = buf.readUInt16BE();\n    const fdo = buf.readBytes(fdoLen);\n    const ix = 6 + fdo[5] + fdo[6];\n    buf.caps.nCharsetId = (fdo[ix + 3] << 8) + fdo[ix + 4];\n    const serverCompileCaps = buf.readBytesWithLength();\n    if (serverCompileCaps) {\n      this.serverCompileCaps = Buffer.from(serverCompileCaps);\n      buf.caps.adjustForServerCompileCaps(this.serverCompileCaps);\n    }\n    const serverRunTimeCaps = buf.readBytesWithLength();\n    if (serverRunTimeCaps) {\n      this.serverRunTimeCaps = Buffer.from(serverRunTimeCaps);\n      buf.caps.adjustForServerRuntimeCaps(this.serverRunTimeCaps);\n    }\n  }\n\n}\n\nmodule.exports = ProtocolMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}