{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst util = require('util');\n\n// define error prefix for all messages\nconst ERR_PREFIX = \"NJS\";\n\n// define error number constants (used in JavaScript library)\nconst ERR_INVALID_POOL = 2;\nconst ERR_INVALID_CONNECTION = 3;\nconst ERR_INVALID_PROPERTY_VALUE = 4;\nconst ERR_INVALID_PARAMETER_VALUE = 5;\nconst ERR_INVALID_PROPERTY_VALUE_IN_PARAM = 7;\nconst ERR_INVALID_NUMBER_OF_PARAMETERS = 9;\nconst ERR_UNSUPPORTED_DATA_TYPE = 10;\nconst ERR_BIND_VALUE_AND_TYPE_MISMATCH = 11;\nconst ERR_INVALID_BIND_DATA_TYPE = 12;\nconst ERR_INVALID_BIND_DIRECTION = 13;\nconst ERR_NO_TYPE_FOR_CONVERSION = 15;\nconst ERR_INSUFFICIENT_BUFFER_FOR_BINDS = 16;\nconst ERR_BUSY_RS = 17;\nconst ERR_INVALID_RS = 18;\nconst ERR_NOT_A_QUERY = 19;\nconst ERR_INVALID_TYPE_FOR_CONVERSION = 21;\nconst ERR_INVALID_LOB = 22;\nconst ERR_BUSY_LOB = 23;\nconst ERR_INSUFFICIENT_MEMORY = 24;\nconst ERR_INVALID_TYPE_FOR_ARRAY_BIND = 34;\nconst ERR_REQUIRED_MAX_ARRAY_SIZE = 35;\nconst ERR_INVALID_ARRAY_SIZE = 36;\nconst ERR_INCOMPATIBLE_TYPE_ARRAY_BIND = 37;\nconst ERR_CONN_REQUEST_TIMEOUT = 40;\nconst ERR_CANNOT_CONVERT_RS_TO_STREAM = 41;\nconst ERR_CANNOT_INVOKE_RS_METHODS = 42;\nconst ERR_RS_ALREADY_CONVERTED = 43;\nconst ERR_INVALID_BIND_UNIT = 44;\nconst ERR_CANNOT_LOAD_BINARY = 45;\nconst ERR_POOL_WITH_ALIAS_ALREADY_EXISTS = 46;\nconst ERR_POOL_WITH_ALIAS_NOT_FOUND = 47;\nconst ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND = 52;\nconst ERR_MIXED_BIND = 55;\nconst ERR_MISSING_MAX_SIZE_BY_POS = 56;\nconst ERR_MISSING_MAX_SIZE_BY_NAME = 57;\nconst ERR_MAX_SIZE_TOO_SMALL = 58;\nconst ERR_MISSING_TYPE_BY_POS = 59;\nconst ERR_MISSING_TYPE_BY_NAME = 60;\nconst ERR_INVALID_SUBSCR = 61;\nconst ERR_MISSING_SUBSCR_CALLBACK = 62;\nconst ERR_MISSING_SUBSCR_SQL = 63;\nconst ERR_POOL_CLOSING = 64;\nconst ERR_POOL_CLOSED = 65;\nconst ERR_INVALID_SODA_DOC_CURSOR = 66;\nconst ERR_NO_BINARY_AVAILABLE = 67;\nconst ERR_INVALID_ERR_NUM = 68;\nconst ERR_NODE_TOO_OLD = 69;\nconst ERR_INVALID_AQ_MESSAGE = 70;\nconst ERR_DBL_CONNECT_STRING = 75;\nconst ERR_QUEUE_MAX_EXCEEDED = 76;\nconst ERR_UNSUPPORTED_DATA_TYPE_IN_JSON = 78;\nconst ERR_DBL_USER = 80;\nconst ERR_CONCURRENT_OPS = 81;\nconst ERR_POOL_RECONFIGURING = 82;\nconst ERR_POOL_STATISTICS_DISABLED = 83;\nconst ERR_TOKEN_BASED_AUTH = 84;\nconst ERR_POOL_TOKEN_BASED_AUTH = 85;\nconst ERR_CONN_TOKEN_BASED_AUTH = 86;\nconst ERR_TOKEN_HAS_EXPIRED = 87;\nconst ERR_NOT_IMPLEMENTED = 89;\nconst ERR_INIT_ORACLE_CLIENT_ARGS = 90;\nconst ERR_MISSING_FILE = 91;\nconst ERR_INVALID_NUMBER_OF_CONNECTIONS = 92;\nconst ERR_EXEC_MODE_ONLY_FOR_DML = 95;\nconst ERR_INVALID_BIND_NAME = 97;\nconst ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS = 98;\nconst ERR_BUFFER_LENGTH_INSUFFICIENT = 99;\nconst ERR_NCHAR_CS_NOT_SUPPORTED = 100;\nconst ERR_MISSING_CREDENTIALS = 101;\nconst ERR_UNEXPECTED_END_OF_DATA = 102;\nconst ERR_UNEXPECTED_MESSAGE_TYPE = 103;\nconst ERR_POOL_HAS_BUSY_CONNECTIONS = 104;\nconst ERR_NAN_VALUE = 105;\nconst ERR_INTERNAL = 106;\nconst ERR_INVALID_REF_CURSOR = 107;\nconst ERR_LOB_CLOSED = 108;\nconst ERR_INVALID_TYPE_NUM = 109;\nconst ERR_INVALID_ORACLE_TYPE_NUM = 110;\nconst ERR_UNEXPECTED_NEGATIVE_INTEGER = 111;\nconst ERR_INTEGER_TOO_LARGE = 112;\nconst ERR_UNEXPECTED_DATA = 113;\nconst ERR_OSON_FIELD_NAME_LIMITATION = 114;\nconst ERR_ORACLE_NUMBER_NO_REPR = 115;\nconst ERR_UNSUPPORTED_VERIFIER_TYPE = 116;\nconst ERR_THIN_CONNECTION_ALREADY_CREATED = 118;\nconst ERR_UNSUPPORTED_CONVERSION = 119;\nconst ERR_FETCH_TYPE_HANDLER_RETURN_VALUE = 120;\nconst ERR_FETCH_TYPE_HANDLER_TYPE = 121;\nconst ERR_FETCH_TYPE_HANDLER_CONVERTER = 122;\nconst ERR_CALL_TIMEOUT_EXCEEDED = 123;\nconst ERR_EMPTY_CONNECT_STRING = 125;\nconst ERR_OSON_VERSION_NOT_SUPPORTED = 126;\nconst ERR_UNKOWN_SERVER_SIDE_PIGGYBACK = 127;\nconst ERR_UNKNOWN_COLUMN_TYPE_NAME = 128;\nconst ERR_INVALID_OBJECT_TYPE_NAME = 129;\nconst ERR_TDS_TYPE_NOT_SUPPORTED = 130;\nconst ERR_INVALID_COLL_INDEX_SET = 131;\nconst ERR_INVALID_COLL_INDEX_GET = 132;\nconst ERR_DELETE_ELEMENTS_OF_VARRAY = 133;\nconst ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR = 134;\nconst ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM = 135;\nconst ERR_WRONG_CRED_FOR_EXTAUTH = 136;\nconst ERR_MISSING_BIND_VALUE = 137;\nconst ERR_SERVER_VERSION_NOT_SUPPORTED = 138;\nconst ERR_UNEXPECTED_XML_TYPE = 139;\nconst ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY = 140;\n\n// Oracle Net layer errors start from 500\nconst ERR_CONNECTION_CLOSED = 500;\nconst ERR_CONNECTION_LOSTCONTACT = 501;\nconst ERR_CONNECTION_INCOMPLETE = 503;\nconst ERR_PROXY_CONNECTION_FAILURE = 504;\nconst ERR_TLS_INIT_FAILURE = 505;\nconst ERR_TLS_AUTH_FAILURE = 506;\nconst ERR_TLS_DNMATCH_FAILURE = 507;\nconst ERR_TLS_HOSTMATCH_FAILURE = 508;\nconst ERR_INVALID_PACKET = 509;\nconst ERR_CONNECTION_TIMEDOUT = 510;\nconst ERR_CONNECTION_REFUSED = 511;\nconst ERR_INVALID_CONNECT_STRING_PARAMETERS = 512;\nconst ERR_CONNECTION_INBAND = 513;\nconst ERR_INVALID_CONNECT_STRING_SYNTAX = 514;\nconst ERR_INVALID_EZCONNECT_SYNTAX = 515;\nconst ERR_NO_CONFIG_DIR = 516;\nconst ERR_TNS_ENTRY_NOT_FOUND = 517;\nconst ERR_INVALID_SERVICE_NAME = 518;\nconst ERR_INVALID_SID = 519;\nconst ERR_TNS_NAMES_FILE_MISSING = 520;\nconst ERR_CONNECTION_EOF = 521;\n\n// Oracle SUCCESS_WITH_INFO warning start from 700\nconst WRN_COMPILATION_CREATE = 700;\n\n// define mapping for ODPI-C, OCI & ORA errors that need to be wrapped\n// with NJS errors\nconst adjustErrorXref = new Map();\nadjustErrorXref.set(\"DPI-1010\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"DPI-1024\", [ERR_INVALID_COLL_INDEX_GET, 'at index ([0-9]+) does']);\nadjustErrorXref.set(\"DPI-1040\", ERR_LOB_CLOSED);\nadjustErrorXref.set(\"DPI-1044\", ERR_ORACLE_NUMBER_NO_REPR);\nadjustErrorXref.set(\"DPI-1055\", ERR_NAN_VALUE);\nadjustErrorXref.set(\"DPI-1063\", ERR_EXEC_MODE_ONLY_FOR_DML);\nadjustErrorXref.set(\"DPI-1067\", [ERR_CALL_TIMEOUT_EXCEEDED, \"call timeout of ([0-9]+) ms\"]);\nadjustErrorXref.set(\"DPI-1080\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"OCI-22303\", [ERR_INVALID_OBJECT_TYPE_NAME, 'type \"([^\"]*\".\"[^\"]*)\"']);\nadjustErrorXref.set(\"OCI-22164\", ERR_DELETE_ELEMENTS_OF_VARRAY);\nadjustErrorXref.set(\"OCI-22165\", [ERR_INVALID_COLL_INDEX_SET, /index \\[([0-9]+)\\] must be in the range of \\[([0-9]+)\\] to \\[([0-9]+)\\]/]);\nadjustErrorXref.set(\"ORA-00028\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"ORA-00600\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"ORA-24338\", ERR_INVALID_REF_CURSOR);\nadjustErrorXref.set(\"ORA-25708\", ERR_TOKEN_HAS_EXPIRED);\nadjustErrorXref.set(\"ORA-24344\", WRN_COMPILATION_CREATE);\n\n// define mapping for error messages\nconst messages = new Map();\nmessages.set(ERR_INVALID_POOL,\n// NJS-002\n'invalid pool');\nmessages.set(ERR_INVALID_CONNECTION,\n// NJS-003\n'invalid connection');\nmessages.set(ERR_INVALID_PROPERTY_VALUE,\n// NJS-004\n'invalid value for property \"%s\"');\nmessages.set(ERR_INVALID_PARAMETER_VALUE,\n// NJS-005\n'invalid value for parameter %d');\nmessages.set(ERR_INVALID_PROPERTY_VALUE_IN_PARAM,\n// NJS-007\n'invalid value for \"%s\" in parameter %d');\nmessages.set(ERR_INVALID_NUMBER_OF_PARAMETERS,\n// NJS-009\n'invalid number of parameters');\n// used in C -- keep synchronized!\nmessages.set(ERR_UNSUPPORTED_DATA_TYPE,\n// NJS-010\n'unsupported data type %d in column %d');\nmessages.set(ERR_BIND_VALUE_AND_TYPE_MISMATCH,\n// NJS-011\n'encountered bind value and type mismatch');\nmessages.set(ERR_INVALID_BIND_DATA_TYPE,\n// NJS-012\n'encountered invalid bind data type in parameter %d');\nmessages.set(ERR_INVALID_BIND_DIRECTION,\n// NJS-013\n'invalid bind direction');\nmessages.set(ERR_NO_TYPE_FOR_CONVERSION,\n// NJS-015\n'type was not specified for conversion');\n// used in C -- keep synchronized!\nmessages.set(ERR_INSUFFICIENT_BUFFER_FOR_BINDS,\n// NJS-016\n'buffer is too small for OUT binds');\nmessages.set(ERR_BUSY_RS,\n// NJS-017\n'concurrent operations on ResultSet are not allowed');\nmessages.set(ERR_INVALID_RS,\n// NJS-018\n'invalid ResultSet');\nmessages.set(ERR_NOT_A_QUERY,\n// NJS-019\n'ResultSet cannot be returned for non-query statements');\nmessages.set(ERR_INVALID_TYPE_FOR_CONVERSION,\n// NJS-021\n'invalid type for conversion specified');\nmessages.set(ERR_INVALID_LOB,\n// NJS-022\n'invalid Lob');\nmessages.set(ERR_BUSY_LOB,\n// NJS-023\n'concurrent operations on a Lob are not allowed');\n// used in C -- keep synchronized!\nmessages.set(ERR_INSUFFICIENT_MEMORY,\n// NJS-024\n'memory allocation failed');\nmessages.set(ERR_INVALID_TYPE_FOR_ARRAY_BIND,\n// NJS-034\n'data type is unsupported for array bind');\nmessages.set(ERR_REQUIRED_MAX_ARRAY_SIZE,\n// NJS-035\n'maxArraySize is required for IN OUT array bind');\nmessages.set(ERR_INVALID_ARRAY_SIZE,\n// NJS-036\n'length of given array is greater than \"maxArraySize\"');\nmessages.set(ERR_INCOMPATIBLE_TYPE_ARRAY_BIND,\n// NJS-037\n'invalid data type at array index %d for bind \":%s\"');\nmessages.set(ERR_CONN_REQUEST_TIMEOUT,\n// NJS-040\n'connection request timeout. Request exceeded \"queueTimeout\" of %d');\nmessages.set(ERR_CANNOT_CONVERT_RS_TO_STREAM,\n// NJS-041\n'cannot convert ResultSet to QueryStream after invoking methods');\nmessages.set(ERR_CANNOT_INVOKE_RS_METHODS,\n// NJS-042\n'cannot invoke ResultSet methods after converting to QueryStream');\nmessages.set(ERR_RS_ALREADY_CONVERTED,\n// NJS-043\n'ResultSet already converted to QueryStream');\nmessages.set(ERR_INVALID_BIND_UNIT,\n// NJS-044\n'bind object must contain one of the following attributes: \"dir\", \"type\", \"maxSize\", or \"val\"');\nmessages.set(ERR_CANNOT_LOAD_BINARY,\n// NJS-045\n'cannot load a node-oracledb Thick mode binary for Node.js. Please try using Thin mode. %s');\nmessages.set(ERR_POOL_WITH_ALIAS_ALREADY_EXISTS,\n// NJS-046\n'pool alias \"%s\" already exists in the connection pool cache');\nmessages.set(ERR_POOL_WITH_ALIAS_NOT_FOUND,\n// NJS-047\n'pool alias \"%s\" not found in connection pool cache');\nmessages.set(ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND,\n// NJS-052\n'invalid data type at array index %d for bind position %d');\nmessages.set(ERR_MIXED_BIND,\n// NJS-055\n'binding by position and name cannot be mixed');\nmessages.set(ERR_MISSING_MAX_SIZE_BY_POS,\n// NJS-056\n'maxSize for bind position %d must be specified and be greater than zero');\nmessages.set(ERR_MISSING_MAX_SIZE_BY_NAME,\n// NJS-057\n'maxSize for bind \"%s\" must be specified and greater than zero');\nmessages.set(ERR_MAX_SIZE_TOO_SMALL,\n// NJS-058\n'maxSize of %d is too small for value of length %d in row %d');\nmessages.set(ERR_MISSING_TYPE_BY_POS,\n// NJS-059\n'type must be specified for bind position %d');\nmessages.set(ERR_MISSING_TYPE_BY_NAME,\n// NJS-060\n'type must be specified for bind \"%s\"');\nmessages.set(ERR_INVALID_SUBSCR,\n// NJS-061\n'invalid subscription');\nmessages.set(ERR_MISSING_SUBSCR_CALLBACK,\n// NJS-062\n'subscription notification callback missing');\nmessages.set(ERR_MISSING_SUBSCR_SQL,\n// NJS-063\n'subscription notification SQL missing');\nmessages.set(ERR_POOL_CLOSING,\n// NJS-064\n'connection pool is closing');\nmessages.set(ERR_POOL_CLOSED,\n// NJS-065\n'connection pool was closed');\nmessages.set(ERR_INVALID_SODA_DOC_CURSOR,\n// NJS-066\n'invalid SODA document cursor');\nmessages.set(ERR_NO_BINARY_AVAILABLE,\n// NJS-067\n'a pre-built node-oracledb Thick mode binary was not found for %s');\nmessages.set(ERR_INVALID_ERR_NUM,\n// NJS-068\n'invalid error number %d supplied');\nmessages.set(ERR_NODE_TOO_OLD,\n// NJS-069\n'node-oracledb %s requires Node.js %s or later');\nmessages.set(ERR_INVALID_AQ_MESSAGE,\n// NJS-070\n'message must be a string, buffer, database object or an object containing a payload property which itself is a string, buffer or database object');\nmessages.set(ERR_DBL_CONNECT_STRING,\n// NJS-075\n'only one of \"connectString\" and \"connectionString\" can be used');\nmessages.set(ERR_QUEUE_MAX_EXCEEDED,\n// NJS-076\n'connection request rejected. Pool queue length \"queueMax\" %d reached');\n// used in C -- keep synchronized!\nmessages.set(ERR_UNSUPPORTED_DATA_TYPE_IN_JSON,\n// NJS-078\n'unsupported data type %d in JSON value');\nmessages.set(ERR_DBL_USER,\n// NJS-080\n'only one of \"user\" and \"username\" can be used');\nmessages.set(ERR_CONCURRENT_OPS,\n// NJS-081\n'concurrent operations on a connection are disabled');\nmessages.set(ERR_POOL_RECONFIGURING,\n// NJS-082\n'connection pool is being reconfigured');\nmessages.set(ERR_POOL_STATISTICS_DISABLED,\n// NJS-083\n'pool statistics are not enabled');\nmessages.set(ERR_TOKEN_BASED_AUTH,\n// NJS-084\n'invalid access token');\nmessages.set(ERR_POOL_TOKEN_BASED_AUTH,\n// NJS-085\n'invalid connection pool configuration with token-based authentication. The \"homogeneous\" and \"externalAuth\" attributes must be set to true');\nmessages.set(ERR_CONN_TOKEN_BASED_AUTH,\n// NJS-086\n'invalid standalone configuration with token-based authentication. The \"externalAuth\" attribute must be set to true');\nmessages.set(ERR_TOKEN_HAS_EXPIRED,\n// NJS-087\n'access token has expired');\nmessages.set(ERR_NOT_IMPLEMENTED,\n// NJS-089\n'%s is not supported by node-oracledb in Thin mode');\nmessages.set(ERR_INIT_ORACLE_CLIENT_ARGS,\n// NJS-090\n'initOracleClient() was already called with different arguments');\nmessages.set(ERR_MISSING_FILE,\n// NJS-091\n'file %s is missing');\nmessages.set(ERR_INVALID_NUMBER_OF_CONNECTIONS,\n// NJS-092\n'\"poolMax\" %d must be greater than or equal to \"poolMin\" %d');\nmessages.set(ERR_EXEC_MODE_ONLY_FOR_DML,\n// NJS-095\n'setting \"batchErrors\" or \"dmlRowCounts\" to true is only permitted for DML statements');\nmessages.set(ERR_INVALID_BIND_NAME,\n// NJS-097\n'no bind placeholder named \":%s\" was found in the statement text');\nmessages.set(ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS,\n// NJS-098\n'%s positional bind values are required but %s were provided');\nmessages.set(ERR_BUFFER_LENGTH_INSUFFICIENT,\n// NJS-099\n'internal error: buffer of length %s insufficient to hold %s bytes');\nmessages.set(ERR_NCHAR_CS_NOT_SUPPORTED,\n// NJS-100\n'national character set id %d is not supported by node-oracledb in Thin mode');\nmessages.set(ERR_MISSING_CREDENTIALS,\n// NJS-101\n'no credentials specified');\nmessages.set(ERR_UNEXPECTED_END_OF_DATA,\n// NJS-102\n'unexpected end of data: want %d bytes but only %d bytes are available');\nmessages.set(ERR_UNEXPECTED_MESSAGE_TYPE,\n// NJS-103\n'unexpected message type %d received at position %d of packet %d');\nmessages.set(ERR_POOL_HAS_BUSY_CONNECTIONS,\n// NJS-104\n'connection pool cannot be closed because connections are busy');\nmessages.set(ERR_NAN_VALUE,\n// NJS-105\n'value is not a number (NaN) and cannot be used in Oracle Database numbers');\nmessages.set(ERR_INTERNAL,\n// NJS-106\n'internal error: %s');\nmessages.set(ERR_INVALID_REF_CURSOR,\n// NJS-107\n'invalid cursor');\nmessages.set(ERR_LOB_CLOSED,\n// NJS-108\n'LOB was already closed');\nmessages.set(ERR_INVALID_TYPE_NUM,\n// NJS-109\n'invalid type number %d');\nmessages.set(ERR_INVALID_ORACLE_TYPE_NUM,\n// NJS-110\n'invalid Oracle type number %d [csfrm: %d]');\nmessages.set(ERR_UNEXPECTED_NEGATIVE_INTEGER,\n// NJS-111\n'internal error: read a negative integer when expecting a positive integer at position %d of packet %d');\nmessages.set(ERR_INTEGER_TOO_LARGE,\n// NJS-112\n'internal error: read integer of length %d when expecting integer of no more than length %d at position %d of packet %d');\nmessages.set(ERR_UNEXPECTED_DATA,\n// NJS-113\n'unexpected data received: %s');\nmessages.set(ERR_OSON_FIELD_NAME_LIMITATION,\n// NJS-114\n'OSON field names may not exceed 255 UTF-8 encoded bytes');\nmessages.set(ERR_ORACLE_NUMBER_NO_REPR,\n// NJS-115\n'value cannot be represented as an Oracle Database number');\nmessages.set(ERR_UNSUPPORTED_VERIFIER_TYPE,\n// NJS-116\n'password verifier type 0x%s is not supported by node-oracledb in Thin mode');\nmessages.set(ERR_THIN_CONNECTION_ALREADY_CREATED,\n// NJS-118\n'node-oracledb Thick mode cannot be enabled because a Thin mode connection has already been created');\nmessages.set(ERR_UNSUPPORTED_CONVERSION,\n// NJS-119\n'conversion from type %s to type %s is not supported');\nmessages.set(ERR_FETCH_TYPE_HANDLER_RETURN_VALUE,\n// NJS-120\n'fetchTypeHandler return value must be an object');\nmessages.set(ERR_FETCH_TYPE_HANDLER_TYPE,\n// NJS-121\n'fetchTypeHandler return value attribute \"type\" must be a valid database type');\nmessages.set(ERR_FETCH_TYPE_HANDLER_CONVERTER,\n// NJS-122\n'fetchTypeHandler return value attribute \"converter\" must be a function');\nmessages.set(ERR_CALL_TIMEOUT_EXCEEDED,\n// NJS-123\n'call timeout of %d ms exceeded');\nmessages.set(ERR_EMPTY_CONNECT_STRING,\n// NJS-125\n'\"connectString\" cannot be empty or undefined. Bequeath connections are not supported in Thin mode');\nmessages.set(ERR_OSON_VERSION_NOT_SUPPORTED,\n// NJS-126\n'OSON version %s is not supported');\nmessages.set(ERR_UNKOWN_SERVER_SIDE_PIGGYBACK,\n// NJS-127\n'internal error: unknown server side piggyback opcode %s');\nmessages.set(ERR_UNKNOWN_COLUMN_TYPE_NAME,\n// NJS-128\n'internal error: unknown column type name \"%s\"');\nmessages.set(ERR_INVALID_OBJECT_TYPE_NAME,\n// NJS-129\n'invalid object type name: \"%s\"');\nmessages.set(ERR_TDS_TYPE_NOT_SUPPORTED,\n// NJS-130\n'Oracle TDS data type %d is not supported');\nmessages.set(ERR_INVALID_COLL_INDEX_SET,\n// NJS-131\n'given index %d must be in the range of %d to %d');\nmessages.set(ERR_INVALID_COLL_INDEX_GET,\n// NJS-132\n'element at index %d does not exist');\nmessages.set(ERR_DELETE_ELEMENTS_OF_VARRAY,\n// NJS-133\n'cannot delete elements of a VARRAY');\nmessages.set(ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR,\n// NJS-134\n'value is of wrong type for attribute %s of object %s');\nmessages.set(ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM,\n// NJS-135\n'value is of wrong type for an element of object %s');\nmessages.set(ERR_WRONG_CRED_FOR_EXTAUTH,\n// NJS-136\n'user name and password cannot be set when using external authentication');\nmessages.set(ERR_MISSING_BIND_VALUE,\n// NJS-137\n'a bind variable replacement value for placeholder \":%s\" was not provided');\nmessages.set(ERR_SERVER_VERSION_NOT_SUPPORTED,\n// NJS-138\n'connections to this database server version are not supported by node-oracledb in Thin mode');\nmessages.set(ERR_UNEXPECTED_XML_TYPE,\n// NJS-139\n'unexpected XML type with flag %d');\nmessages.set(ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY,\n// NJS-140\n'user name must be enclosed in [] when using external authentication with a proxy user');\n\n// Oracle Net layer errors\n\nmessages.set(ERR_CONNECTION_CLOSED,\n// NJS-500\n'connection to the Oracle Database was broken');\nmessages.set(ERR_CONNECTION_LOSTCONTACT,\n// NJS-501\n'connection to host %s port %d terminated unexpectedly. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_CONNECTION_INCOMPLETE,\n// NJS-503\n'connection to host %s port %d could not be established. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_PROXY_CONNECTION_FAILURE,\n// NJS-504\n'connection establishment through a web proxy at host %s port %d failed. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_TLS_INIT_FAILURE,\n// NJS-505\n'unable to initiate TLS connection. Please check if wallet credentials are valid');\nmessages.set(ERR_TLS_AUTH_FAILURE,\n// NJS-506\n'connection to host %s port %d encountered TLS handshake failure. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_TLS_DNMATCH_FAILURE,\n// NJS-507\n'TLS detected an invalid certificate. Server DN in certificate does not match the specified DN');\nmessages.set(ERR_TLS_HOSTMATCH_FAILURE,\n// NJS-508\n'TLS detected an invalid certificate. %s not present in certificate');\nmessages.set(ERR_INVALID_PACKET,\n// NJS-509\n'internal error: invalid packet type or malformed packet received');\nmessages.set(ERR_CONNECTION_TIMEDOUT,\n// NJS-510\n'connection to host %s port %d timed out. Request exceeded \"%s\" of %d seconds. (CONNECTION_ID=%s)');\nmessages.set(ERR_CONNECTION_REFUSED,\n// NJS-511\n'connection to listener at host %s port %d was refused. (CONNECTION_ID=%s)\\nCause: %s');\nmessages.set(ERR_INVALID_CONNECT_STRING_PARAMETERS,\n// NJS-512\n'invalid connection string parameters.\\n%s');\nmessages.set(ERR_CONNECTION_INBAND,\n// NJS-513\n'error received through in-band notification: %s');\nmessages.set(ERR_INVALID_CONNECT_STRING_SYNTAX,\n// NJS-514\n'syntax error in connection string');\nmessages.set(ERR_INVALID_EZCONNECT_SYNTAX,\n// NJS-515\n'error in Easy Connect connection string: %s: %s');\nmessages.set(ERR_NO_CONFIG_DIR,\n// NJS-516\n'no configuration directory set or available to search for tnsnames.ora');\nmessages.set(ERR_TNS_ENTRY_NOT_FOUND,\n// NJS-517\n'cannot connect to Oracle Database. Unable to find \"%s\" in \"%s\"');\nmessages.set(ERR_INVALID_SERVICE_NAME,\n// NJS-518\n'cannot connect to Oracle Database. Service \"%s\" is not registered with the listener at host %s port %s. (CONNECTION_ID=%s)');\nmessages.set(ERR_INVALID_SID,\n// NJS-519\n'cannot connect to Oracle Database. SID \"%s\" is not registered with the listener at host %s port %s. (CONNECTION_ID=%s)');\nmessages.set(ERR_TNS_NAMES_FILE_MISSING,\n// NJS-520\n'cannot connect to Oracle Database. File tnsnames.ora not found in %s');\nmessages.set(ERR_CONNECTION_EOF,\n// NJS-521\n'connection to host %s port %d received end-of-file on communication channel. (CONNECTION_ID=%s)');\n\n// Oracle SUCCESS_WITH_INFO warning\n\nmessages.set(WRN_COMPILATION_CREATE,\n// NJS-700\n'creation succeeded with compilation errors');\n\n//-----------------------------------------------------------------------------\n// assert()\n//\n// Checks the condition, and if the condition is not true, throws an exception\n// using the specified error number and arguments.\n//-----------------------------------------------------------------------------\nfunction assert(condition) {\n  if (!condition) {\n    const args = Array.prototype.slice.call(arguments, 1);\n    throwErr(...args);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertArgCount()\n//\n// Asserts that the argument count falls between the minimum and maximum number\n// of arguments.\n//-----------------------------------------------------------------------------\nfunction assertArgCount(args, minArgCount, maxArgCount) {\n  assert(args.length >= minArgCount && args.length <= maxArgCount, ERR_INVALID_NUMBER_OF_PARAMETERS);\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropBool()\n//\n// Asserts that the property value of a parameter is a boolean value (or\n// undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropBool(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(typeof obj[propName] === 'boolean', parameterNum, propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropFunction()\n//\n// Asserts that the property value of a parameter is a function (or undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropFunction(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(typeof obj[propName] === 'function', parameterNum, propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropInt()\n//\n// Asserts that the property value of a parameter is an integer value (or\n// undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropInt(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(Number.isInteger(obj[propName]), parameterNum, propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropUnsignedInt()\n//\n// Asserts that the property value of a parameter is a positive integer value\n// (or undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropUnsignedInt(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(Number.isInteger(obj[propName]) && obj[propName] >= 0, parameterNum, propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropString()\n//\n// Asserts that the property value of a parameter is a string value (or undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropString(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(typeof obj[propName] === 'string', parameterNum, propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropValue()\n//\n// Asserts that the property value of a parameter passes the specified\n// condition.\n//-----------------------------------------------------------------------------\nfunction assertParamPropValue(condition, parameterNum, propName) {\n  assert(condition, ERR_INVALID_PROPERTY_VALUE_IN_PARAM, propName, parameterNum);\n}\n\n//-----------------------------------------------------------------------------\n// assertParamValue()\n//\n// Asserts that the parameter value passes the specified condition.\n//-----------------------------------------------------------------------------\nfunction assertParamValue(condition, parameterNum) {\n  assert(condition, ERR_INVALID_PARAMETER_VALUE, parameterNum);\n}\n\n//-----------------------------------------------------------------------------\n// assertPropValue()\n//\n// Asserts that the property value passes the specified condition.\n//-----------------------------------------------------------------------------\nfunction assertPropValue(condition, propName) {\n  assert(condition, ERR_INVALID_PROPERTY_VALUE, propName);\n}\n\n//-----------------------------------------------------------------------------\n// getErr()\n//\n// Returns an error object with the given error number after formatting it with\n// the given arguments.\n//-----------------------------------------------------------------------------\nfunction getErr(errorNum) {\n  let baseText = messages.get(errorNum);\n  let args = [...arguments];\n  if (!baseText) {\n    args = [undefined, errorNum];\n    errorNum = ERR_INVALID_ERR_NUM;\n    baseText = messages.get(errorNum);\n  }\n  const errorNumStr = errorNum.toString().padStart(3, '0');\n  const code = `${ERR_PREFIX}-${errorNumStr}`;\n  args[0] = `${code}: ${baseText}`;\n  const err = new Error(util.format(...args));\n  err.code = code;\n  Error.captureStackTrace(err, getErr);\n  return err;\n}\n\n//-----------------------------------------------------------------------------\n// throwErr()\n//\n// Throws an error with the given error number after formatting it with the\n// given arguments.\n//-----------------------------------------------------------------------------\nfunction throwErr() {\n  throw getErr(...arguments);\n}\n\n//-----------------------------------------------------------------------------\n// throwNotImplemented()\n//\n// Throws an error that the feature is not supported in Thin mode\n//-----------------------------------------------------------------------------\nfunction throwNotImplemented(feature) {\n  throwErr(ERR_NOT_IMPLEMENTED, feature);\n}\n\n//-----------------------------------------------------------------------------\n// transformErr()\n//\n// Adjusts the supplied error, if necessary, by looking for specific ODPI-C and\n// Oracle errors and replacing them with driver specific errors.\n//-----------------------------------------------------------------------------\nfunction transformErr(err, fnOpt) {\n  if (!err.code) {\n    const pos = err.message.indexOf(\":\");\n    if (pos > 0) {\n      err.code = err.message.substr(0, pos);\n      /* add Oracle Database Error Help Portal URL for database error\n         messages, but only in thin mode since this is done\n         automatically in thick mode with Oracle Client 23c and higher\n      */\n      const settings = require('./settings.js');\n      if (err.errorNum && settings.thin) {\n        err.message += '\\n' + 'Help: https://docs.oracle.com/error-help/db/ora-' + `${err.errorNum.toString().padStart(5, '0')}/`;\n      }\n      if (adjustErrorXref.has(err.code)) {\n        let args = [];\n        let driverErrorNum;\n        const driverErrorInfo = adjustErrorXref.get(err.code);\n        if (typeof driverErrorInfo === 'number') {\n          driverErrorNum = driverErrorInfo;\n        } else {\n          driverErrorNum = driverErrorInfo[0];\n          const pattern = driverErrorInfo[1];\n          const results = err.message.match(pattern);\n          if (results) {\n            args = results.slice(1);\n          }\n        }\n        const newErr = getErr(driverErrorNum, ...args);\n        err.code = newErr.code;\n        err.message = newErr.message + \"\\n\" + err.message;\n      }\n    }\n  }\n  if (err.requiresStackCapture) {\n    delete err.requiresStackCapture;\n    Error.captureStackTrace(err, fnOpt);\n  }\n  return err;\n}\n\n// define exports\nmodule.exports = {\n  ERR_INVALID_POOL,\n  ERR_INVALID_CONNECTION,\n  ERR_INVALID_PROPERTY_VALUE,\n  ERR_INVALID_PARAMETER_VALUE,\n  ERR_INVALID_PROPERTY_VALUE_IN_PARAM,\n  ERR_INVALID_NUMBER_OF_PARAMETERS,\n  ERR_UNSUPPORTED_DATA_TYPE,\n  ERR_BIND_VALUE_AND_TYPE_MISMATCH,\n  ERR_INVALID_BIND_DATA_TYPE,\n  ERR_INVALID_BIND_DIRECTION,\n  ERR_NO_TYPE_FOR_CONVERSION,\n  ERR_INSUFFICIENT_BUFFER_FOR_BINDS,\n  ERR_BUSY_RS,\n  ERR_INVALID_RS,\n  ERR_NOT_A_QUERY,\n  ERR_INVALID_TYPE_FOR_CONVERSION,\n  ERR_INVALID_LOB,\n  ERR_BUSY_LOB,\n  ERR_INSUFFICIENT_MEMORY,\n  ERR_INVALID_TYPE_FOR_ARRAY_BIND,\n  ERR_REQUIRED_MAX_ARRAY_SIZE,\n  ERR_INVALID_ARRAY_SIZE,\n  ERR_INCOMPATIBLE_TYPE_ARRAY_BIND,\n  ERR_CONN_REQUEST_TIMEOUT,\n  ERR_CANNOT_CONVERT_RS_TO_STREAM,\n  ERR_CANNOT_INVOKE_RS_METHODS,\n  ERR_RS_ALREADY_CONVERTED,\n  ERR_INVALID_BIND_UNIT,\n  ERR_CANNOT_LOAD_BINARY,\n  ERR_POOL_WITH_ALIAS_ALREADY_EXISTS,\n  ERR_POOL_WITH_ALIAS_NOT_FOUND,\n  ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND,\n  ERR_MIXED_BIND,\n  ERR_MISSING_MAX_SIZE_BY_POS,\n  ERR_MISSING_MAX_SIZE_BY_NAME,\n  ERR_MAX_SIZE_TOO_SMALL,\n  ERR_MISSING_TYPE_BY_POS,\n  ERR_MISSING_TYPE_BY_NAME,\n  ERR_INVALID_SUBSCR,\n  ERR_MISSING_SUBSCR_CALLBACK,\n  ERR_MISSING_SUBSCR_SQL,\n  ERR_POOL_CLOSING,\n  ERR_POOL_CLOSED,\n  ERR_INVALID_SODA_DOC_CURSOR,\n  ERR_NO_BINARY_AVAILABLE,\n  ERR_INVALID_ERR_NUM,\n  ERR_NODE_TOO_OLD,\n  ERR_INVALID_AQ_MESSAGE,\n  ERR_DBL_CONNECT_STRING,\n  ERR_QUEUE_MAX_EXCEEDED,\n  ERR_UNSUPPORTED_DATA_TYPE_IN_JSON,\n  ERR_DBL_USER,\n  ERR_CONCURRENT_OPS,\n  ERR_POOL_RECONFIGURING,\n  ERR_POOL_STATISTICS_DISABLED,\n  ERR_TOKEN_BASED_AUTH,\n  ERR_POOL_TOKEN_BASED_AUTH,\n  ERR_CONN_TOKEN_BASED_AUTH,\n  ERR_TOKEN_HAS_EXPIRED,\n  ERR_NOT_IMPLEMENTED,\n  ERR_INIT_ORACLE_CLIENT_ARGS,\n  ERR_MISSING_FILE,\n  ERR_INVALID_NUMBER_OF_CONNECTIONS,\n  ERR_EXEC_MODE_ONLY_FOR_DML,\n  ERR_CONNECTION_CLOSED,\n  ERR_CONNECTION_LOSTCONTACT,\n  ERR_CONNECTION_INCOMPLETE,\n  ERR_PROXY_CONNECTION_FAILURE,\n  ERR_TLS_INIT_FAILURE,\n  ERR_TLS_AUTH_FAILURE,\n  ERR_TLS_DNMATCH_FAILURE,\n  ERR_TLS_HOSTMATCH_FAILURE,\n  ERR_INVALID_PACKET,\n  ERR_CONNECTION_TIMEDOUT,\n  ERR_CONNECTION_REFUSED,\n  ERR_INVALID_CONNECT_STRING_PARAMETERS,\n  ERR_CONNECTION_INBAND,\n  ERR_INVALID_CONNECT_STRING_SYNTAX,\n  ERR_INVALID_EZCONNECT_SYNTAX,\n  ERR_NO_CONFIG_DIR,\n  ERR_TNS_ENTRY_NOT_FOUND,\n  ERR_CONNECTION_EOF,\n  ERR_INVALID_BIND_NAME,\n  ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS,\n  ERR_BUFFER_LENGTH_INSUFFICIENT,\n  ERR_NCHAR_CS_NOT_SUPPORTED,\n  ERR_MISSING_CREDENTIALS,\n  ERR_UNEXPECTED_END_OF_DATA,\n  ERR_UNEXPECTED_MESSAGE_TYPE,\n  ERR_POOL_HAS_BUSY_CONNECTIONS,\n  ERR_INTERNAL,\n  ERR_INVALID_REF_CURSOR,\n  ERR_UNSUPPORTED_VERIFIER_TYPE,\n  ERR_NAN_VALUE,\n  ERR_LOB_CLOSED,\n  ERR_ORACLE_NUMBER_NO_REPR,\n  ERR_INVALID_SERVICE_NAME,\n  ERR_INVALID_SID,\n  ERR_TNS_NAMES_FILE_MISSING,\n  ERR_INVALID_TYPE_NUM,\n  ERR_INVALID_ORACLE_TYPE_NUM,\n  ERR_UNEXPECTED_NEGATIVE_INTEGER,\n  ERR_INTEGER_TOO_LARGE,\n  ERR_UNEXPECTED_DATA,\n  ERR_OSON_FIELD_NAME_LIMITATION,\n  ERR_OSON_VERSION_NOT_SUPPORTED,\n  ERR_THIN_CONNECTION_ALREADY_CREATED,\n  ERR_UNSUPPORTED_CONVERSION,\n  ERR_FETCH_TYPE_HANDLER_RETURN_VALUE,\n  ERR_FETCH_TYPE_HANDLER_TYPE,\n  ERR_FETCH_TYPE_HANDLER_CONVERTER,\n  ERR_CALL_TIMEOUT_EXCEEDED,\n  ERR_EMPTY_CONNECT_STRING,\n  ERR_UNKOWN_SERVER_SIDE_PIGGYBACK,\n  ERR_UNKNOWN_COLUMN_TYPE_NAME,\n  ERR_INVALID_OBJECT_TYPE_NAME,\n  ERR_TDS_TYPE_NOT_SUPPORTED,\n  ERR_INVALID_COLL_INDEX_SET,\n  ERR_INVALID_COLL_INDEX_GET,\n  ERR_DELETE_ELEMENTS_OF_VARRAY,\n  ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR,\n  ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM,\n  ERR_WRONG_CRED_FOR_EXTAUTH,\n  ERR_MISSING_BIND_VALUE,\n  ERR_SERVER_VERSION_NOT_SUPPORTED,\n  ERR_UNEXPECTED_XML_TYPE,\n  ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY,\n  ERR_CONNECTION_CLOSED_CODE: `${ERR_PREFIX}-${ERR_CONNECTION_CLOSED}`,\n  WRN_COMPILATION_CREATE,\n  assert,\n  assertArgCount,\n  assertParamPropBool,\n  assertParamPropFunction,\n  assertParamPropInt,\n  assertParamPropString,\n  assertParamPropUnsignedInt,\n  assertParamPropValue,\n  assertParamValue,\n  assertPropValue,\n  getErr,\n  throwErr,\n  throwNotImplemented,\n  transformErr\n};","map":{"version":3,"names":["util","require","ERR_PREFIX","ERR_INVALID_POOL","ERR_INVALID_CONNECTION","ERR_INVALID_PROPERTY_VALUE","ERR_INVALID_PARAMETER_VALUE","ERR_INVALID_PROPERTY_VALUE_IN_PARAM","ERR_INVALID_NUMBER_OF_PARAMETERS","ERR_UNSUPPORTED_DATA_TYPE","ERR_BIND_VALUE_AND_TYPE_MISMATCH","ERR_INVALID_BIND_DATA_TYPE","ERR_INVALID_BIND_DIRECTION","ERR_NO_TYPE_FOR_CONVERSION","ERR_INSUFFICIENT_BUFFER_FOR_BINDS","ERR_BUSY_RS","ERR_INVALID_RS","ERR_NOT_A_QUERY","ERR_INVALID_TYPE_FOR_CONVERSION","ERR_INVALID_LOB","ERR_BUSY_LOB","ERR_INSUFFICIENT_MEMORY","ERR_INVALID_TYPE_FOR_ARRAY_BIND","ERR_REQUIRED_MAX_ARRAY_SIZE","ERR_INVALID_ARRAY_SIZE","ERR_INCOMPATIBLE_TYPE_ARRAY_BIND","ERR_CONN_REQUEST_TIMEOUT","ERR_CANNOT_CONVERT_RS_TO_STREAM","ERR_CANNOT_INVOKE_RS_METHODS","ERR_RS_ALREADY_CONVERTED","ERR_INVALID_BIND_UNIT","ERR_CANNOT_LOAD_BINARY","ERR_POOL_WITH_ALIAS_ALREADY_EXISTS","ERR_POOL_WITH_ALIAS_NOT_FOUND","ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND","ERR_MIXED_BIND","ERR_MISSING_MAX_SIZE_BY_POS","ERR_MISSING_MAX_SIZE_BY_NAME","ERR_MAX_SIZE_TOO_SMALL","ERR_MISSING_TYPE_BY_POS","ERR_MISSING_TYPE_BY_NAME","ERR_INVALID_SUBSCR","ERR_MISSING_SUBSCR_CALLBACK","ERR_MISSING_SUBSCR_SQL","ERR_POOL_CLOSING","ERR_POOL_CLOSED","ERR_INVALID_SODA_DOC_CURSOR","ERR_NO_BINARY_AVAILABLE","ERR_INVALID_ERR_NUM","ERR_NODE_TOO_OLD","ERR_INVALID_AQ_MESSAGE","ERR_DBL_CONNECT_STRING","ERR_QUEUE_MAX_EXCEEDED","ERR_UNSUPPORTED_DATA_TYPE_IN_JSON","ERR_DBL_USER","ERR_CONCURRENT_OPS","ERR_POOL_RECONFIGURING","ERR_POOL_STATISTICS_DISABLED","ERR_TOKEN_BASED_AUTH","ERR_POOL_TOKEN_BASED_AUTH","ERR_CONN_TOKEN_BASED_AUTH","ERR_TOKEN_HAS_EXPIRED","ERR_NOT_IMPLEMENTED","ERR_INIT_ORACLE_CLIENT_ARGS","ERR_MISSING_FILE","ERR_INVALID_NUMBER_OF_CONNECTIONS","ERR_EXEC_MODE_ONLY_FOR_DML","ERR_INVALID_BIND_NAME","ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS","ERR_BUFFER_LENGTH_INSUFFICIENT","ERR_NCHAR_CS_NOT_SUPPORTED","ERR_MISSING_CREDENTIALS","ERR_UNEXPECTED_END_OF_DATA","ERR_UNEXPECTED_MESSAGE_TYPE","ERR_POOL_HAS_BUSY_CONNECTIONS","ERR_NAN_VALUE","ERR_INTERNAL","ERR_INVALID_REF_CURSOR","ERR_LOB_CLOSED","ERR_INVALID_TYPE_NUM","ERR_INVALID_ORACLE_TYPE_NUM","ERR_UNEXPECTED_NEGATIVE_INTEGER","ERR_INTEGER_TOO_LARGE","ERR_UNEXPECTED_DATA","ERR_OSON_FIELD_NAME_LIMITATION","ERR_ORACLE_NUMBER_NO_REPR","ERR_UNSUPPORTED_VERIFIER_TYPE","ERR_THIN_CONNECTION_ALREADY_CREATED","ERR_UNSUPPORTED_CONVERSION","ERR_FETCH_TYPE_HANDLER_RETURN_VALUE","ERR_FETCH_TYPE_HANDLER_TYPE","ERR_FETCH_TYPE_HANDLER_CONVERTER","ERR_CALL_TIMEOUT_EXCEEDED","ERR_EMPTY_CONNECT_STRING","ERR_OSON_VERSION_NOT_SUPPORTED","ERR_UNKOWN_SERVER_SIDE_PIGGYBACK","ERR_UNKNOWN_COLUMN_TYPE_NAME","ERR_INVALID_OBJECT_TYPE_NAME","ERR_TDS_TYPE_NOT_SUPPORTED","ERR_INVALID_COLL_INDEX_SET","ERR_INVALID_COLL_INDEX_GET","ERR_DELETE_ELEMENTS_OF_VARRAY","ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR","ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM","ERR_WRONG_CRED_FOR_EXTAUTH","ERR_MISSING_BIND_VALUE","ERR_SERVER_VERSION_NOT_SUPPORTED","ERR_UNEXPECTED_XML_TYPE","ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY","ERR_CONNECTION_CLOSED","ERR_CONNECTION_LOSTCONTACT","ERR_CONNECTION_INCOMPLETE","ERR_PROXY_CONNECTION_FAILURE","ERR_TLS_INIT_FAILURE","ERR_TLS_AUTH_FAILURE","ERR_TLS_DNMATCH_FAILURE","ERR_TLS_HOSTMATCH_FAILURE","ERR_INVALID_PACKET","ERR_CONNECTION_TIMEDOUT","ERR_CONNECTION_REFUSED","ERR_INVALID_CONNECT_STRING_PARAMETERS","ERR_CONNECTION_INBAND","ERR_INVALID_CONNECT_STRING_SYNTAX","ERR_INVALID_EZCONNECT_SYNTAX","ERR_NO_CONFIG_DIR","ERR_TNS_ENTRY_NOT_FOUND","ERR_INVALID_SERVICE_NAME","ERR_INVALID_SID","ERR_TNS_NAMES_FILE_MISSING","ERR_CONNECTION_EOF","WRN_COMPILATION_CREATE","adjustErrorXref","Map","set","messages","assert","condition","args","Array","prototype","slice","call","arguments","throwErr","assertArgCount","minArgCount","maxArgCount","length","assertParamPropBool","obj","parameterNum","propName","undefined","assertParamPropValue","assertParamPropFunction","assertParamPropInt","Number","isInteger","assertParamPropUnsignedInt","assertParamPropString","assertParamValue","assertPropValue","getErr","errorNum","baseText","get","errorNumStr","toString","padStart","code","err","Error","format","captureStackTrace","throwNotImplemented","feature","transformErr","fnOpt","pos","message","indexOf","substr","settings","thin","has","driverErrorNum","driverErrorInfo","pattern","results","match","newErr","requiresStackCapture","module","exports","ERR_CONNECTION_CLOSED_CODE"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/errors.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst util = require('util');\n\n// define error prefix for all messages\nconst ERR_PREFIX = \"NJS\";\n\n// define error number constants (used in JavaScript library)\nconst ERR_INVALID_POOL = 2;\nconst ERR_INVALID_CONNECTION = 3;\nconst ERR_INVALID_PROPERTY_VALUE = 4;\nconst ERR_INVALID_PARAMETER_VALUE = 5;\nconst ERR_INVALID_PROPERTY_VALUE_IN_PARAM = 7;\nconst ERR_INVALID_NUMBER_OF_PARAMETERS = 9;\nconst ERR_UNSUPPORTED_DATA_TYPE = 10;\nconst ERR_BIND_VALUE_AND_TYPE_MISMATCH = 11;\nconst ERR_INVALID_BIND_DATA_TYPE = 12;\nconst ERR_INVALID_BIND_DIRECTION = 13;\nconst ERR_NO_TYPE_FOR_CONVERSION = 15;\nconst ERR_INSUFFICIENT_BUFFER_FOR_BINDS = 16;\nconst ERR_BUSY_RS = 17;\nconst ERR_INVALID_RS = 18;\nconst ERR_NOT_A_QUERY = 19;\nconst ERR_INVALID_TYPE_FOR_CONVERSION = 21;\nconst ERR_INVALID_LOB = 22;\nconst ERR_BUSY_LOB = 23;\nconst ERR_INSUFFICIENT_MEMORY = 24;\nconst ERR_INVALID_TYPE_FOR_ARRAY_BIND = 34;\nconst ERR_REQUIRED_MAX_ARRAY_SIZE = 35;\nconst ERR_INVALID_ARRAY_SIZE = 36;\nconst ERR_INCOMPATIBLE_TYPE_ARRAY_BIND = 37;\nconst ERR_CONN_REQUEST_TIMEOUT = 40;\nconst ERR_CANNOT_CONVERT_RS_TO_STREAM = 41;\nconst ERR_CANNOT_INVOKE_RS_METHODS = 42;\nconst ERR_RS_ALREADY_CONVERTED = 43;\nconst ERR_INVALID_BIND_UNIT = 44;\nconst ERR_CANNOT_LOAD_BINARY = 45;\nconst ERR_POOL_WITH_ALIAS_ALREADY_EXISTS = 46;\nconst ERR_POOL_WITH_ALIAS_NOT_FOUND = 47;\nconst ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND = 52;\nconst ERR_MIXED_BIND = 55;\nconst ERR_MISSING_MAX_SIZE_BY_POS = 56;\nconst ERR_MISSING_MAX_SIZE_BY_NAME = 57;\nconst ERR_MAX_SIZE_TOO_SMALL = 58;\nconst ERR_MISSING_TYPE_BY_POS = 59;\nconst ERR_MISSING_TYPE_BY_NAME = 60;\nconst ERR_INVALID_SUBSCR = 61;\nconst ERR_MISSING_SUBSCR_CALLBACK = 62;\nconst ERR_MISSING_SUBSCR_SQL = 63;\nconst ERR_POOL_CLOSING = 64;\nconst ERR_POOL_CLOSED = 65;\nconst ERR_INVALID_SODA_DOC_CURSOR = 66;\nconst ERR_NO_BINARY_AVAILABLE = 67;\nconst ERR_INVALID_ERR_NUM = 68;\nconst ERR_NODE_TOO_OLD = 69;\nconst ERR_INVALID_AQ_MESSAGE = 70;\nconst ERR_DBL_CONNECT_STRING = 75;\nconst ERR_QUEUE_MAX_EXCEEDED = 76;\nconst ERR_UNSUPPORTED_DATA_TYPE_IN_JSON = 78;\nconst ERR_DBL_USER = 80;\nconst ERR_CONCURRENT_OPS = 81;\nconst ERR_POOL_RECONFIGURING = 82;\nconst ERR_POOL_STATISTICS_DISABLED = 83;\nconst ERR_TOKEN_BASED_AUTH = 84;\nconst ERR_POOL_TOKEN_BASED_AUTH = 85;\nconst ERR_CONN_TOKEN_BASED_AUTH = 86;\nconst ERR_TOKEN_HAS_EXPIRED = 87;\nconst ERR_NOT_IMPLEMENTED = 89;\nconst ERR_INIT_ORACLE_CLIENT_ARGS = 90;\nconst ERR_MISSING_FILE = 91;\nconst ERR_INVALID_NUMBER_OF_CONNECTIONS = 92;\nconst ERR_EXEC_MODE_ONLY_FOR_DML = 95;\nconst ERR_INVALID_BIND_NAME = 97;\nconst ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS = 98;\nconst ERR_BUFFER_LENGTH_INSUFFICIENT = 99;\nconst ERR_NCHAR_CS_NOT_SUPPORTED = 100;\nconst ERR_MISSING_CREDENTIALS = 101;\nconst ERR_UNEXPECTED_END_OF_DATA = 102;\nconst ERR_UNEXPECTED_MESSAGE_TYPE = 103;\nconst ERR_POOL_HAS_BUSY_CONNECTIONS = 104;\nconst ERR_NAN_VALUE = 105;\nconst ERR_INTERNAL = 106;\nconst ERR_INVALID_REF_CURSOR = 107;\nconst ERR_LOB_CLOSED = 108;\nconst ERR_INVALID_TYPE_NUM = 109;\nconst ERR_INVALID_ORACLE_TYPE_NUM = 110;\nconst ERR_UNEXPECTED_NEGATIVE_INTEGER = 111;\nconst ERR_INTEGER_TOO_LARGE = 112;\nconst ERR_UNEXPECTED_DATA = 113;\nconst ERR_OSON_FIELD_NAME_LIMITATION = 114;\nconst ERR_ORACLE_NUMBER_NO_REPR = 115;\nconst ERR_UNSUPPORTED_VERIFIER_TYPE = 116;\nconst ERR_THIN_CONNECTION_ALREADY_CREATED = 118;\nconst ERR_UNSUPPORTED_CONVERSION = 119;\nconst ERR_FETCH_TYPE_HANDLER_RETURN_VALUE = 120;\nconst ERR_FETCH_TYPE_HANDLER_TYPE = 121;\nconst ERR_FETCH_TYPE_HANDLER_CONVERTER = 122;\nconst ERR_CALL_TIMEOUT_EXCEEDED = 123;\nconst ERR_EMPTY_CONNECT_STRING = 125;\nconst ERR_OSON_VERSION_NOT_SUPPORTED = 126;\nconst ERR_UNKOWN_SERVER_SIDE_PIGGYBACK = 127;\nconst ERR_UNKNOWN_COLUMN_TYPE_NAME = 128;\nconst ERR_INVALID_OBJECT_TYPE_NAME = 129;\nconst ERR_TDS_TYPE_NOT_SUPPORTED = 130;\nconst ERR_INVALID_COLL_INDEX_SET = 131;\nconst ERR_INVALID_COLL_INDEX_GET = 132;\nconst ERR_DELETE_ELEMENTS_OF_VARRAY = 133;\nconst ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR = 134;\nconst ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM = 135;\nconst ERR_WRONG_CRED_FOR_EXTAUTH = 136;\nconst ERR_MISSING_BIND_VALUE = 137;\nconst ERR_SERVER_VERSION_NOT_SUPPORTED = 138;\nconst ERR_UNEXPECTED_XML_TYPE = 139;\nconst ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY = 140;\n\n// Oracle Net layer errors start from 500\nconst ERR_CONNECTION_CLOSED = 500;\nconst ERR_CONNECTION_LOSTCONTACT = 501;\nconst ERR_CONNECTION_INCOMPLETE = 503;\nconst ERR_PROXY_CONNECTION_FAILURE = 504;\nconst ERR_TLS_INIT_FAILURE = 505;\nconst ERR_TLS_AUTH_FAILURE = 506;\nconst ERR_TLS_DNMATCH_FAILURE = 507;\nconst ERR_TLS_HOSTMATCH_FAILURE = 508;\nconst ERR_INVALID_PACKET = 509;\nconst ERR_CONNECTION_TIMEDOUT = 510;\nconst ERR_CONNECTION_REFUSED = 511;\nconst ERR_INVALID_CONNECT_STRING_PARAMETERS = 512;\nconst ERR_CONNECTION_INBAND = 513;\nconst ERR_INVALID_CONNECT_STRING_SYNTAX = 514;\nconst ERR_INVALID_EZCONNECT_SYNTAX = 515;\nconst ERR_NO_CONFIG_DIR = 516;\nconst ERR_TNS_ENTRY_NOT_FOUND = 517;\nconst ERR_INVALID_SERVICE_NAME = 518;\nconst ERR_INVALID_SID = 519;\nconst ERR_TNS_NAMES_FILE_MISSING = 520;\nconst ERR_CONNECTION_EOF = 521;\n\n// Oracle SUCCESS_WITH_INFO warning start from 700\nconst WRN_COMPILATION_CREATE = 700;\n\n// define mapping for ODPI-C, OCI & ORA errors that need to be wrapped\n// with NJS errors\nconst adjustErrorXref = new Map();\nadjustErrorXref.set(\"DPI-1010\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"DPI-1024\", [ERR_INVALID_COLL_INDEX_GET, 'at index ([0-9]+) does']);\nadjustErrorXref.set(\"DPI-1040\", ERR_LOB_CLOSED);\nadjustErrorXref.set(\"DPI-1044\", ERR_ORACLE_NUMBER_NO_REPR);\nadjustErrorXref.set(\"DPI-1055\", ERR_NAN_VALUE);\nadjustErrorXref.set(\"DPI-1063\", ERR_EXEC_MODE_ONLY_FOR_DML);\nadjustErrorXref.set(\"DPI-1067\", [ERR_CALL_TIMEOUT_EXCEEDED, \"call timeout of ([0-9]+) ms\"]);\nadjustErrorXref.set(\"DPI-1080\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"OCI-22303\", [ERR_INVALID_OBJECT_TYPE_NAME, 'type \"([^\"]*\".\"[^\"]*)\"']);\nadjustErrorXref.set(\"OCI-22164\", ERR_DELETE_ELEMENTS_OF_VARRAY);\nadjustErrorXref.set(\"OCI-22165\", [ERR_INVALID_COLL_INDEX_SET, /index \\[([0-9]+)\\] must be in the range of \\[([0-9]+)\\] to \\[([0-9]+)\\]/]);\nadjustErrorXref.set(\"ORA-00028\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"ORA-00600\", ERR_CONNECTION_CLOSED);\nadjustErrorXref.set(\"ORA-24338\", ERR_INVALID_REF_CURSOR);\nadjustErrorXref.set(\"ORA-25708\", ERR_TOKEN_HAS_EXPIRED);\nadjustErrorXref.set(\"ORA-24344\", WRN_COMPILATION_CREATE);\n\n// define mapping for error messages\nconst messages = new Map();\nmessages.set(ERR_INVALID_POOL,                          // NJS-002\n  'invalid pool');\nmessages.set(ERR_INVALID_CONNECTION,                    // NJS-003\n  'invalid connection');\nmessages.set(ERR_INVALID_PROPERTY_VALUE,                // NJS-004\n  'invalid value for property \"%s\"');\nmessages.set(ERR_INVALID_PARAMETER_VALUE,               // NJS-005\n  'invalid value for parameter %d');\nmessages.set(ERR_INVALID_PROPERTY_VALUE_IN_PARAM,       // NJS-007\n  'invalid value for \"%s\" in parameter %d');\nmessages.set(ERR_INVALID_NUMBER_OF_PARAMETERS,          // NJS-009\n  'invalid number of parameters');\n// used in C -- keep synchronized!\nmessages.set(ERR_UNSUPPORTED_DATA_TYPE,                 // NJS-010\n  'unsupported data type %d in column %d');\nmessages.set(ERR_BIND_VALUE_AND_TYPE_MISMATCH,          // NJS-011\n  'encountered bind value and type mismatch');\nmessages.set(ERR_INVALID_BIND_DATA_TYPE,                // NJS-012\n  'encountered invalid bind data type in parameter %d');\nmessages.set(ERR_INVALID_BIND_DIRECTION,                // NJS-013\n  'invalid bind direction');\nmessages.set(ERR_NO_TYPE_FOR_CONVERSION,                // NJS-015\n  'type was not specified for conversion');\n// used in C -- keep synchronized!\nmessages.set(ERR_INSUFFICIENT_BUFFER_FOR_BINDS,         // NJS-016\n  'buffer is too small for OUT binds');\nmessages.set(ERR_BUSY_RS,                               // NJS-017\n  'concurrent operations on ResultSet are not allowed');\nmessages.set(ERR_INVALID_RS,                            // NJS-018\n  'invalid ResultSet');\nmessages.set(ERR_NOT_A_QUERY,                           // NJS-019\n  'ResultSet cannot be returned for non-query statements');\nmessages.set(ERR_INVALID_TYPE_FOR_CONVERSION,           // NJS-021\n  'invalid type for conversion specified');\nmessages.set(ERR_INVALID_LOB,                           // NJS-022\n  'invalid Lob');\nmessages.set(ERR_BUSY_LOB,                              // NJS-023\n  'concurrent operations on a Lob are not allowed');\n// used in C -- keep synchronized!\nmessages.set(ERR_INSUFFICIENT_MEMORY,                   // NJS-024\n  'memory allocation failed');\nmessages.set(ERR_INVALID_TYPE_FOR_ARRAY_BIND,           // NJS-034\n  'data type is unsupported for array bind');\nmessages.set(ERR_REQUIRED_MAX_ARRAY_SIZE,               // NJS-035\n  'maxArraySize is required for IN OUT array bind');\nmessages.set(ERR_INVALID_ARRAY_SIZE,                    // NJS-036\n  'length of given array is greater than \"maxArraySize\"');\nmessages.set(ERR_INCOMPATIBLE_TYPE_ARRAY_BIND,          // NJS-037\n  'invalid data type at array index %d for bind \":%s\"');\nmessages.set(ERR_CONN_REQUEST_TIMEOUT,                  // NJS-040\n  'connection request timeout. Request exceeded \"queueTimeout\" of %d');\nmessages.set(ERR_CANNOT_CONVERT_RS_TO_STREAM,           // NJS-041\n  'cannot convert ResultSet to QueryStream after invoking methods');\nmessages.set(ERR_CANNOT_INVOKE_RS_METHODS,              // NJS-042\n  'cannot invoke ResultSet methods after converting to QueryStream');\nmessages.set(ERR_RS_ALREADY_CONVERTED,                  // NJS-043\n  'ResultSet already converted to QueryStream');\nmessages.set(ERR_INVALID_BIND_UNIT,                     // NJS-044\n  'bind object must contain one of the following attributes: \"dir\", \"type\", \"maxSize\", or \"val\"');\nmessages.set(ERR_CANNOT_LOAD_BINARY,                    // NJS-045\n  'cannot load a node-oracledb Thick mode binary for Node.js. Please try using Thin mode. %s');\nmessages.set(ERR_POOL_WITH_ALIAS_ALREADY_EXISTS,        // NJS-046\n  'pool alias \"%s\" already exists in the connection pool cache');\nmessages.set(ERR_POOL_WITH_ALIAS_NOT_FOUND,             // NJS-047\n  'pool alias \"%s\" not found in connection pool cache');\nmessages.set(ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND,    // NJS-052\n  'invalid data type at array index %d for bind position %d');\nmessages.set(ERR_MIXED_BIND,                            // NJS-055\n  'binding by position and name cannot be mixed');\nmessages.set(ERR_MISSING_MAX_SIZE_BY_POS,               // NJS-056\n  'maxSize for bind position %d must be specified and be greater than zero');\nmessages.set(ERR_MISSING_MAX_SIZE_BY_NAME,              // NJS-057\n  'maxSize for bind \"%s\" must be specified and greater than zero');\nmessages.set(ERR_MAX_SIZE_TOO_SMALL,                    // NJS-058\n  'maxSize of %d is too small for value of length %d in row %d');\nmessages.set(ERR_MISSING_TYPE_BY_POS,                   // NJS-059\n  'type must be specified for bind position %d');\nmessages.set(ERR_MISSING_TYPE_BY_NAME,                  // NJS-060\n  'type must be specified for bind \"%s\"');\nmessages.set(ERR_INVALID_SUBSCR,                        // NJS-061\n  'invalid subscription');\nmessages.set(ERR_MISSING_SUBSCR_CALLBACK,               // NJS-062\n  'subscription notification callback missing');\nmessages.set(ERR_MISSING_SUBSCR_SQL,                    // NJS-063\n  'subscription notification SQL missing');\nmessages.set(ERR_POOL_CLOSING,                          // NJS-064\n  'connection pool is closing');\nmessages.set(ERR_POOL_CLOSED,                           // NJS-065\n  'connection pool was closed');\nmessages.set(ERR_INVALID_SODA_DOC_CURSOR,               // NJS-066\n  'invalid SODA document cursor');\nmessages.set(ERR_NO_BINARY_AVAILABLE,                   // NJS-067\n  'a pre-built node-oracledb Thick mode binary was not found for %s');\nmessages.set(ERR_INVALID_ERR_NUM,                       // NJS-068\n  'invalid error number %d supplied');\nmessages.set(ERR_NODE_TOO_OLD,                          // NJS-069\n  'node-oracledb %s requires Node.js %s or later');\nmessages.set(ERR_INVALID_AQ_MESSAGE,                    // NJS-070\n  'message must be a string, buffer, database object or an object containing a payload property which itself is a string, buffer or database object');\nmessages.set(ERR_DBL_CONNECT_STRING,                    // NJS-075\n  'only one of \"connectString\" and \"connectionString\" can be used');\nmessages.set(ERR_QUEUE_MAX_EXCEEDED,                    // NJS-076\n  'connection request rejected. Pool queue length \"queueMax\" %d reached');\n// used in C -- keep synchronized!\nmessages.set(ERR_UNSUPPORTED_DATA_TYPE_IN_JSON,         // NJS-078\n  'unsupported data type %d in JSON value');\nmessages.set(ERR_DBL_USER,                              // NJS-080\n  'only one of \"user\" and \"username\" can be used');\nmessages.set(ERR_CONCURRENT_OPS,                        // NJS-081\n  'concurrent operations on a connection are disabled');\nmessages.set(ERR_POOL_RECONFIGURING,                    // NJS-082\n  'connection pool is being reconfigured');\nmessages.set(ERR_POOL_STATISTICS_DISABLED,              // NJS-083\n  'pool statistics are not enabled');\nmessages.set(ERR_TOKEN_BASED_AUTH,                      // NJS-084\n  'invalid access token');\nmessages.set(ERR_POOL_TOKEN_BASED_AUTH,                 // NJS-085\n  'invalid connection pool configuration with token-based authentication. The \"homogeneous\" and \"externalAuth\" attributes must be set to true');\nmessages.set(ERR_CONN_TOKEN_BASED_AUTH,                 // NJS-086\n  'invalid standalone configuration with token-based authentication. The \"externalAuth\" attribute must be set to true');\nmessages.set(ERR_TOKEN_HAS_EXPIRED,                     // NJS-087\n  'access token has expired');\nmessages.set(ERR_NOT_IMPLEMENTED,                       // NJS-089\n  '%s is not supported by node-oracledb in Thin mode');\nmessages.set(ERR_INIT_ORACLE_CLIENT_ARGS,               // NJS-090\n  'initOracleClient() was already called with different arguments');\nmessages.set(ERR_MISSING_FILE,                          // NJS-091\n  'file %s is missing');\nmessages.set(ERR_INVALID_NUMBER_OF_CONNECTIONS,         // NJS-092\n  '\"poolMax\" %d must be greater than or equal to \"poolMin\" %d');\nmessages.set(ERR_EXEC_MODE_ONLY_FOR_DML,                // NJS-095\n  'setting \"batchErrors\" or \"dmlRowCounts\" to true is only permitted for DML statements');\nmessages.set(ERR_INVALID_BIND_NAME,                     // NJS-097\n  'no bind placeholder named \":%s\" was found in the statement text');\nmessages.set(ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS,      // NJS-098\n  '%s positional bind values are required but %s were provided');\nmessages.set(ERR_BUFFER_LENGTH_INSUFFICIENT,            // NJS-099\n  'internal error: buffer of length %s insufficient to hold %s bytes');\nmessages.set(ERR_NCHAR_CS_NOT_SUPPORTED,                // NJS-100\n  'national character set id %d is not supported by node-oracledb in Thin mode');\nmessages.set(ERR_MISSING_CREDENTIALS,                   // NJS-101\n  'no credentials specified');\nmessages.set(ERR_UNEXPECTED_END_OF_DATA,                // NJS-102\n  'unexpected end of data: want %d bytes but only %d bytes are available');\nmessages.set(ERR_UNEXPECTED_MESSAGE_TYPE,               // NJS-103\n  'unexpected message type %d received at position %d of packet %d');\nmessages.set(ERR_POOL_HAS_BUSY_CONNECTIONS,             // NJS-104\n  'connection pool cannot be closed because connections are busy');\nmessages.set(ERR_NAN_VALUE,                             // NJS-105\n  'value is not a number (NaN) and cannot be used in Oracle Database numbers');\nmessages.set(ERR_INTERNAL,                              // NJS-106\n  'internal error: %s');\nmessages.set(ERR_INVALID_REF_CURSOR,                    // NJS-107\n  'invalid cursor');\nmessages.set(ERR_LOB_CLOSED,                            // NJS-108\n  'LOB was already closed');\nmessages.set(ERR_INVALID_TYPE_NUM,                      // NJS-109\n  'invalid type number %d');\nmessages.set(ERR_INVALID_ORACLE_TYPE_NUM,               // NJS-110\n  'invalid Oracle type number %d [csfrm: %d]');\nmessages.set(ERR_UNEXPECTED_NEGATIVE_INTEGER,           // NJS-111\n  'internal error: read a negative integer when expecting a positive integer at position %d of packet %d');\nmessages.set(ERR_INTEGER_TOO_LARGE,                     // NJS-112\n  'internal error: read integer of length %d when expecting integer of no more than length %d at position %d of packet %d');\nmessages.set(ERR_UNEXPECTED_DATA,                       // NJS-113\n  'unexpected data received: %s');\nmessages.set(ERR_OSON_FIELD_NAME_LIMITATION,            // NJS-114\n  'OSON field names may not exceed 255 UTF-8 encoded bytes');\nmessages.set(ERR_ORACLE_NUMBER_NO_REPR,                 // NJS-115\n  'value cannot be represented as an Oracle Database number');\nmessages.set(ERR_UNSUPPORTED_VERIFIER_TYPE,             // NJS-116\n  'password verifier type 0x%s is not supported by node-oracledb in Thin mode');\nmessages.set(ERR_THIN_CONNECTION_ALREADY_CREATED,       // NJS-118\n  'node-oracledb Thick mode cannot be enabled because a Thin mode connection has already been created');\nmessages.set(ERR_UNSUPPORTED_CONVERSION,                // NJS-119\n  'conversion from type %s to type %s is not supported');\nmessages.set(ERR_FETCH_TYPE_HANDLER_RETURN_VALUE,       // NJS-120\n  'fetchTypeHandler return value must be an object');\nmessages.set(ERR_FETCH_TYPE_HANDLER_TYPE,               // NJS-121\n  'fetchTypeHandler return value attribute \"type\" must be a valid database type');\nmessages.set(ERR_FETCH_TYPE_HANDLER_CONVERTER,          // NJS-122\n  'fetchTypeHandler return value attribute \"converter\" must be a function');\nmessages.set(ERR_CALL_TIMEOUT_EXCEEDED,                 // NJS-123\n  'call timeout of %d ms exceeded');\nmessages.set(ERR_EMPTY_CONNECT_STRING,                  // NJS-125\n  '\"connectString\" cannot be empty or undefined. Bequeath connections are not supported in Thin mode');\nmessages.set(ERR_OSON_VERSION_NOT_SUPPORTED,            // NJS-126\n  'OSON version %s is not supported');\nmessages.set(ERR_UNKOWN_SERVER_SIDE_PIGGYBACK,          // NJS-127\n  'internal error: unknown server side piggyback opcode %s');\nmessages.set(ERR_UNKNOWN_COLUMN_TYPE_NAME,              // NJS-128\n  'internal error: unknown column type name \"%s\"');\nmessages.set(ERR_INVALID_OBJECT_TYPE_NAME,              // NJS-129\n  'invalid object type name: \"%s\"');\nmessages.set(ERR_TDS_TYPE_NOT_SUPPORTED,                // NJS-130\n  'Oracle TDS data type %d is not supported');\nmessages.set(ERR_INVALID_COLL_INDEX_SET,                // NJS-131\n  'given index %d must be in the range of %d to %d');\nmessages.set(ERR_INVALID_COLL_INDEX_GET,                // NJS-132\n  'element at index %d does not exist');\nmessages.set(ERR_DELETE_ELEMENTS_OF_VARRAY,             // NJS-133\n  'cannot delete elements of a VARRAY');\nmessages.set(ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR,         // NJS-134\n  'value is of wrong type for attribute %s of object %s');\nmessages.set(ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM,         // NJS-135\n  'value is of wrong type for an element of object %s');\nmessages.set(ERR_WRONG_CRED_FOR_EXTAUTH,                // NJS-136\n  'user name and password cannot be set when using external authentication');\nmessages.set(ERR_MISSING_BIND_VALUE,                    // NJS-137\n  'a bind variable replacement value for placeholder \":%s\" was not provided');\nmessages.set(ERR_SERVER_VERSION_NOT_SUPPORTED,          // NJS-138\n  'connections to this database server version are not supported by node-oracledb in Thin mode');\nmessages.set(ERR_UNEXPECTED_XML_TYPE,                   // NJS-139\n  'unexpected XML type with flag %d');\nmessages.set(ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY,       // NJS-140\n  'user name must be enclosed in [] when using external authentication with a proxy user');\n\n// Oracle Net layer errors\n\nmessages.set(ERR_CONNECTION_CLOSED,                     // NJS-500\n  'connection to the Oracle Database was broken');\nmessages.set(ERR_CONNECTION_LOSTCONTACT,                // NJS-501\n  'connection to host %s port %d terminated unexpectedly. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_CONNECTION_INCOMPLETE,                 // NJS-503\n  'connection to host %s port %d could not be established. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_PROXY_CONNECTION_FAILURE,              // NJS-504\n  'connection establishment through a web proxy at host %s port %d failed. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_TLS_INIT_FAILURE,                      // NJS-505\n  'unable to initiate TLS connection. Please check if wallet credentials are valid');\nmessages.set(ERR_TLS_AUTH_FAILURE,                      // NJS-506\n  'connection to host %s port %d encountered TLS handshake failure. (CONNECTION_ID=%s)\\n%s');\nmessages.set(ERR_TLS_DNMATCH_FAILURE,                   // NJS-507\n  'TLS detected an invalid certificate. Server DN in certificate does not match the specified DN');\nmessages.set(ERR_TLS_HOSTMATCH_FAILURE,                 // NJS-508\n  'TLS detected an invalid certificate. %s not present in certificate');\nmessages.set(ERR_INVALID_PACKET,                        // NJS-509\n  'internal error: invalid packet type or malformed packet received');\nmessages.set(ERR_CONNECTION_TIMEDOUT,                   // NJS-510\n  'connection to host %s port %d timed out. Request exceeded \"%s\" of %d seconds. (CONNECTION_ID=%s)');\nmessages.set(ERR_CONNECTION_REFUSED,                    // NJS-511\n  'connection to listener at host %s port %d was refused. (CONNECTION_ID=%s)\\nCause: %s');\nmessages.set(ERR_INVALID_CONNECT_STRING_PARAMETERS,     // NJS-512\n  'invalid connection string parameters.\\n%s');\nmessages.set(ERR_CONNECTION_INBAND,                     // NJS-513\n  'error received through in-band notification: %s');\nmessages.set(ERR_INVALID_CONNECT_STRING_SYNTAX,         // NJS-514\n  'syntax error in connection string');\nmessages.set(ERR_INVALID_EZCONNECT_SYNTAX,              // NJS-515\n  'error in Easy Connect connection string: %s: %s');\nmessages.set(ERR_NO_CONFIG_DIR,                         // NJS-516\n  'no configuration directory set or available to search for tnsnames.ora');\nmessages.set(ERR_TNS_ENTRY_NOT_FOUND,                   // NJS-517\n  'cannot connect to Oracle Database. Unable to find \"%s\" in \"%s\"');\nmessages.set(ERR_INVALID_SERVICE_NAME,                  // NJS-518\n  'cannot connect to Oracle Database. Service \"%s\" is not registered with the listener at host %s port %s. (CONNECTION_ID=%s)');\nmessages.set(ERR_INVALID_SID,                           // NJS-519\n  'cannot connect to Oracle Database. SID \"%s\" is not registered with the listener at host %s port %s. (CONNECTION_ID=%s)');\nmessages.set(ERR_TNS_NAMES_FILE_MISSING,                // NJS-520\n  'cannot connect to Oracle Database. File tnsnames.ora not found in %s');\nmessages.set(ERR_CONNECTION_EOF,                        // NJS-521\n  'connection to host %s port %d received end-of-file on communication channel. (CONNECTION_ID=%s)');\n\n// Oracle SUCCESS_WITH_INFO warning\n\nmessages.set(WRN_COMPILATION_CREATE,                           // NJS-700\n  'creation succeeded with compilation errors');\n\n//-----------------------------------------------------------------------------\n// assert()\n//\n// Checks the condition, and if the condition is not true, throws an exception\n// using the specified error number and arguments.\n//-----------------------------------------------------------------------------\nfunction assert(condition) {\n  if (!condition) {\n    const args = Array.prototype.slice.call(arguments, 1);\n    throwErr(...args);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertArgCount()\n//\n// Asserts that the argument count falls between the minimum and maximum number\n// of arguments.\n//-----------------------------------------------------------------------------\nfunction assertArgCount(args, minArgCount, maxArgCount) {\n  assert(args.length >= minArgCount && args.length <= maxArgCount,\n    ERR_INVALID_NUMBER_OF_PARAMETERS);\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropBool()\n//\n// Asserts that the property value of a parameter is a boolean value (or\n// undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropBool(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(typeof obj[propName] === 'boolean', parameterNum,\n      propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropFunction()\n//\n// Asserts that the property value of a parameter is a function (or undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropFunction(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(typeof obj[propName] === 'function', parameterNum,\n      propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropInt()\n//\n// Asserts that the property value of a parameter is an integer value (or\n// undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropInt(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(Number.isInteger(obj[propName]), parameterNum,\n      propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropUnsignedInt()\n//\n// Asserts that the property value of a parameter is a positive integer value\n// (or undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropUnsignedInt(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(Number.isInteger(obj[propName]) && obj[propName] >= 0,\n      parameterNum, propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropString()\n//\n// Asserts that the property value of a parameter is a string value (or undefined).\n//-----------------------------------------------------------------------------\nfunction assertParamPropString(obj, parameterNum, propName) {\n  if (obj[propName] !== undefined) {\n    assertParamPropValue(typeof obj[propName] === 'string', parameterNum,\n      propName);\n  }\n}\n\n//-----------------------------------------------------------------------------\n// assertParamPropValue()\n//\n// Asserts that the property value of a parameter passes the specified\n// condition.\n//-----------------------------------------------------------------------------\nfunction assertParamPropValue(condition, parameterNum, propName) {\n  assert(condition, ERR_INVALID_PROPERTY_VALUE_IN_PARAM, propName,\n    parameterNum);\n}\n\n//-----------------------------------------------------------------------------\n// assertParamValue()\n//\n// Asserts that the parameter value passes the specified condition.\n//-----------------------------------------------------------------------------\nfunction assertParamValue(condition, parameterNum) {\n  assert(condition, ERR_INVALID_PARAMETER_VALUE, parameterNum);\n}\n\n//-----------------------------------------------------------------------------\n// assertPropValue()\n//\n// Asserts that the property value passes the specified condition.\n//-----------------------------------------------------------------------------\nfunction assertPropValue(condition, propName) {\n  assert(condition, ERR_INVALID_PROPERTY_VALUE, propName);\n}\n\n//-----------------------------------------------------------------------------\n// getErr()\n//\n// Returns an error object with the given error number after formatting it with\n// the given arguments.\n//-----------------------------------------------------------------------------\nfunction getErr(errorNum) {\n  let baseText = messages.get(errorNum);\n  let args = [...arguments];\n  if (!baseText) {\n    args = [undefined, errorNum];\n    errorNum = ERR_INVALID_ERR_NUM;\n    baseText = messages.get(errorNum);\n  }\n  const errorNumStr = errorNum.toString().padStart(3, '0');\n  const code = `${ERR_PREFIX}-${errorNumStr}`;\n  args[0] = `${code}: ${baseText}`;\n  const err = new Error(util.format(...args));\n  err.code = code;\n  Error.captureStackTrace(err, getErr);\n  return err;\n}\n\n//-----------------------------------------------------------------------------\n// throwErr()\n//\n// Throws an error with the given error number after formatting it with the\n// given arguments.\n//-----------------------------------------------------------------------------\nfunction throwErr() {\n  throw (getErr(...arguments));\n}\n\n//-----------------------------------------------------------------------------\n// throwNotImplemented()\n//\n// Throws an error that the feature is not supported in Thin mode\n//-----------------------------------------------------------------------------\nfunction throwNotImplemented(feature) {\n  throwErr(ERR_NOT_IMPLEMENTED, feature);\n}\n\n//-----------------------------------------------------------------------------\n// transformErr()\n//\n// Adjusts the supplied error, if necessary, by looking for specific ODPI-C and\n// Oracle errors and replacing them with driver specific errors.\n//-----------------------------------------------------------------------------\nfunction transformErr(err, fnOpt) {\n  if (!err.code) {\n    const pos = err.message.indexOf(\":\");\n    if (pos > 0) {\n      err.code = err.message.substr(0, pos);\n      /* add Oracle Database Error Help Portal URL for database error\n         messages, but only in thin mode since this is done\n         automatically in thick mode with Oracle Client 23c and higher\n      */\n      const settings = require('./settings.js');\n      if (err.errorNum && settings.thin) {\n        err.message += '\\n' + 'Help: https://docs.oracle.com/error-help/db/ora-' +\n          `${err.errorNum.toString().padStart(5, '0')}/`;\n      }\n      if (adjustErrorXref.has(err.code)) {\n        let args = [];\n        let driverErrorNum;\n        const driverErrorInfo = adjustErrorXref.get(err.code);\n        if (typeof driverErrorInfo === 'number') {\n          driverErrorNum = driverErrorInfo;\n        } else {\n          driverErrorNum = driverErrorInfo[0];\n          const pattern = driverErrorInfo[1];\n          const results = err.message.match(pattern);\n          if (results) {\n            args = results.slice(1);\n          }\n        }\n        const newErr = getErr(driverErrorNum, ...args);\n        err.code = newErr.code;\n        err.message = newErr.message + \"\\n\" + err.message;\n      }\n    }\n  }\n\n  if (err.requiresStackCapture) {\n    delete err.requiresStackCapture;\n    Error.captureStackTrace(err, fnOpt);\n  }\n  return err;\n}\n\n// define exports\nmodule.exports = {\n  ERR_INVALID_POOL,\n  ERR_INVALID_CONNECTION,\n  ERR_INVALID_PROPERTY_VALUE,\n  ERR_INVALID_PARAMETER_VALUE,\n  ERR_INVALID_PROPERTY_VALUE_IN_PARAM,\n  ERR_INVALID_NUMBER_OF_PARAMETERS,\n  ERR_UNSUPPORTED_DATA_TYPE,\n  ERR_BIND_VALUE_AND_TYPE_MISMATCH,\n  ERR_INVALID_BIND_DATA_TYPE,\n  ERR_INVALID_BIND_DIRECTION,\n  ERR_NO_TYPE_FOR_CONVERSION,\n  ERR_INSUFFICIENT_BUFFER_FOR_BINDS,\n  ERR_BUSY_RS,\n  ERR_INVALID_RS,\n  ERR_NOT_A_QUERY,\n  ERR_INVALID_TYPE_FOR_CONVERSION,\n  ERR_INVALID_LOB,\n  ERR_BUSY_LOB,\n  ERR_INSUFFICIENT_MEMORY,\n  ERR_INVALID_TYPE_FOR_ARRAY_BIND,\n  ERR_REQUIRED_MAX_ARRAY_SIZE,\n  ERR_INVALID_ARRAY_SIZE,\n  ERR_INCOMPATIBLE_TYPE_ARRAY_BIND,\n  ERR_CONN_REQUEST_TIMEOUT,\n  ERR_CANNOT_CONVERT_RS_TO_STREAM,\n  ERR_CANNOT_INVOKE_RS_METHODS,\n  ERR_RS_ALREADY_CONVERTED,\n  ERR_INVALID_BIND_UNIT,\n  ERR_CANNOT_LOAD_BINARY,\n  ERR_POOL_WITH_ALIAS_ALREADY_EXISTS,\n  ERR_POOL_WITH_ALIAS_NOT_FOUND,\n  ERR_INCOMPATIBLE_TYPE_ARRAY_INDEX_BIND,\n  ERR_MIXED_BIND,\n  ERR_MISSING_MAX_SIZE_BY_POS,\n  ERR_MISSING_MAX_SIZE_BY_NAME,\n  ERR_MAX_SIZE_TOO_SMALL,\n  ERR_MISSING_TYPE_BY_POS,\n  ERR_MISSING_TYPE_BY_NAME,\n  ERR_INVALID_SUBSCR,\n  ERR_MISSING_SUBSCR_CALLBACK,\n  ERR_MISSING_SUBSCR_SQL,\n  ERR_POOL_CLOSING,\n  ERR_POOL_CLOSED,\n  ERR_INVALID_SODA_DOC_CURSOR,\n  ERR_NO_BINARY_AVAILABLE,\n  ERR_INVALID_ERR_NUM,\n  ERR_NODE_TOO_OLD,\n  ERR_INVALID_AQ_MESSAGE,\n  ERR_DBL_CONNECT_STRING,\n  ERR_QUEUE_MAX_EXCEEDED,\n  ERR_UNSUPPORTED_DATA_TYPE_IN_JSON,\n  ERR_DBL_USER,\n  ERR_CONCURRENT_OPS,\n  ERR_POOL_RECONFIGURING,\n  ERR_POOL_STATISTICS_DISABLED,\n  ERR_TOKEN_BASED_AUTH,\n  ERR_POOL_TOKEN_BASED_AUTH,\n  ERR_CONN_TOKEN_BASED_AUTH,\n  ERR_TOKEN_HAS_EXPIRED,\n  ERR_NOT_IMPLEMENTED,\n  ERR_INIT_ORACLE_CLIENT_ARGS,\n  ERR_MISSING_FILE,\n  ERR_INVALID_NUMBER_OF_CONNECTIONS,\n  ERR_EXEC_MODE_ONLY_FOR_DML,\n  ERR_CONNECTION_CLOSED,\n  ERR_CONNECTION_LOSTCONTACT,\n  ERR_CONNECTION_INCOMPLETE,\n  ERR_PROXY_CONNECTION_FAILURE,\n  ERR_TLS_INIT_FAILURE,\n  ERR_TLS_AUTH_FAILURE,\n  ERR_TLS_DNMATCH_FAILURE,\n  ERR_TLS_HOSTMATCH_FAILURE,\n  ERR_INVALID_PACKET,\n  ERR_CONNECTION_TIMEDOUT,\n  ERR_CONNECTION_REFUSED,\n  ERR_INVALID_CONNECT_STRING_PARAMETERS,\n  ERR_CONNECTION_INBAND,\n  ERR_INVALID_CONNECT_STRING_SYNTAX,\n  ERR_INVALID_EZCONNECT_SYNTAX,\n  ERR_NO_CONFIG_DIR,\n  ERR_TNS_ENTRY_NOT_FOUND,\n  ERR_CONNECTION_EOF,\n  ERR_INVALID_BIND_NAME,\n  ERR_WRONG_NUMBER_OF_POSITIONAL_BINDS,\n  ERR_BUFFER_LENGTH_INSUFFICIENT,\n  ERR_NCHAR_CS_NOT_SUPPORTED,\n  ERR_MISSING_CREDENTIALS,\n  ERR_UNEXPECTED_END_OF_DATA,\n  ERR_UNEXPECTED_MESSAGE_TYPE,\n  ERR_POOL_HAS_BUSY_CONNECTIONS,\n  ERR_INTERNAL,\n  ERR_INVALID_REF_CURSOR,\n  ERR_UNSUPPORTED_VERIFIER_TYPE,\n  ERR_NAN_VALUE,\n  ERR_LOB_CLOSED,\n  ERR_ORACLE_NUMBER_NO_REPR,\n  ERR_INVALID_SERVICE_NAME,\n  ERR_INVALID_SID,\n  ERR_TNS_NAMES_FILE_MISSING,\n  ERR_INVALID_TYPE_NUM,\n  ERR_INVALID_ORACLE_TYPE_NUM,\n  ERR_UNEXPECTED_NEGATIVE_INTEGER,\n  ERR_INTEGER_TOO_LARGE,\n  ERR_UNEXPECTED_DATA,\n  ERR_OSON_FIELD_NAME_LIMITATION,\n  ERR_OSON_VERSION_NOT_SUPPORTED,\n  ERR_THIN_CONNECTION_ALREADY_CREATED,\n  ERR_UNSUPPORTED_CONVERSION,\n  ERR_FETCH_TYPE_HANDLER_RETURN_VALUE,\n  ERR_FETCH_TYPE_HANDLER_TYPE,\n  ERR_FETCH_TYPE_HANDLER_CONVERTER,\n  ERR_CALL_TIMEOUT_EXCEEDED,\n  ERR_EMPTY_CONNECT_STRING,\n  ERR_UNKOWN_SERVER_SIDE_PIGGYBACK,\n  ERR_UNKNOWN_COLUMN_TYPE_NAME,\n  ERR_INVALID_OBJECT_TYPE_NAME,\n  ERR_TDS_TYPE_NOT_SUPPORTED,\n  ERR_INVALID_COLL_INDEX_SET,\n  ERR_INVALID_COLL_INDEX_GET,\n  ERR_DELETE_ELEMENTS_OF_VARRAY,\n  ERR_WRONG_VALUE_FOR_DBOBJECT_ATTR,\n  ERR_WRONG_VALUE_FOR_DBOBJECT_ELEM,\n  ERR_WRONG_CRED_FOR_EXTAUTH,\n  ERR_MISSING_BIND_VALUE,\n  ERR_SERVER_VERSION_NOT_SUPPORTED,\n  ERR_UNEXPECTED_XML_TYPE,\n  ERR_WRONG_USER_FORMAT_EXTAUTH_PROXY,\n  ERR_CONNECTION_CLOSED_CODE: `${ERR_PREFIX}-${ERR_CONNECTION_CLOSED}`,\n  WRN_COMPILATION_CREATE,\n  assert,\n  assertArgCount,\n  assertParamPropBool,\n  assertParamPropFunction,\n  assertParamPropInt,\n  assertParamPropString,\n  assertParamPropUnsignedInt,\n  assertParamPropValue,\n  assertParamValue,\n  assertPropValue,\n  getErr,\n  throwErr,\n  throwNotImplemented,\n  transformErr\n};\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA,MAAMC,UAAU,GAAG,KAAK;;AAExB;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAC1B,MAAMC,sBAAsB,GAAG,CAAC;AAChC,MAAMC,0BAA0B,GAAG,CAAC;AACpC,MAAMC,2BAA2B,GAAG,CAAC;AACrC,MAAMC,mCAAmC,GAAG,CAAC;AAC7C,MAAMC,gCAAgC,GAAG,CAAC;AAC1C,MAAMC,yBAAyB,GAAG,EAAE;AACpC,MAAMC,gCAAgC,GAAG,EAAE;AAC3C,MAAMC,0BAA0B,GAAG,EAAE;AACrC,MAAMC,0BAA0B,GAAG,EAAE;AACrC,MAAMC,0BAA0B,GAAG,EAAE;AACrC,MAAMC,iCAAiC,GAAG,EAAE;AAC5C,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,cAAc,GAAG,EAAE;AACzB,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,+BAA+B,GAAG,EAAE;AAC1C,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,uBAAuB,GAAG,EAAE;AAClC,MAAMC,+BAA+B,GAAG,EAAE;AAC1C,MAAMC,2BAA2B,GAAG,EAAE;AACtC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,gCAAgC,GAAG,EAAE;AAC3C,MAAMC,wBAAwB,GAAG,EAAE;AACnC,MAAMC,+BAA+B,GAAG,EAAE;AAC1C,MAAMC,4BAA4B,GAAG,EAAE;AACvC,MAAMC,wBAAwB,GAAG,EAAE;AACnC,MAAMC,qBAAqB,GAAG,EAAE;AAChC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,kCAAkC,GAAG,EAAE;AAC7C,MAAMC,6BAA6B,GAAG,EAAE;AACxC,MAAMC,sCAAsC,GAAG,EAAE;AACjD,MAAMC,cAAc,GAAG,EAAE;AACzB,MAAMC,2BAA2B,GAAG,EAAE;AACtC,MAAMC,4BAA4B,GAAG,EAAE;AACvC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,uBAAuB,GAAG,EAAE;AAClC,MAAMC,wBAAwB,GAAG,EAAE;AACnC,MAAMC,kBAAkB,GAAG,EAAE;AAC7B,MAAMC,2BAA2B,GAAG,EAAE;AACtC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,2BAA2B,GAAG,EAAE;AACtC,MAAMC,uBAAuB,GAAG,EAAE;AAClC,MAAMC,mBAAmB,GAAG,EAAE;AAC9B,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,iCAAiC,GAAG,EAAE;AAC5C,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,kBAAkB,GAAG,EAAE;AAC7B,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,4BAA4B,GAAG,EAAE;AACvC,MAAMC,oBAAoB,GAAG,EAAE;AAC/B,MAAMC,yBAAyB,GAAG,EAAE;AACpC,MAAMC,yBAAyB,GAAG,EAAE;AACpC,MAAMC,qBAAqB,GAAG,EAAE;AAChC,MAAMC,mBAAmB,GAAG,EAAE;AAC9B,MAAMC,2BAA2B,GAAG,EAAE;AACtC,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,iCAAiC,GAAG,EAAE;AAC5C,MAAMC,0BAA0B,GAAG,EAAE;AACrC,MAAMC,qBAAqB,GAAG,EAAE;AAChC,MAAMC,oCAAoC,GAAG,EAAE;AAC/C,MAAMC,8BAA8B,GAAG,EAAE;AACzC,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,2BAA2B,GAAG,GAAG;AACvC,MAAMC,6BAA6B,GAAG,GAAG;AACzC,MAAMC,aAAa,GAAG,GAAG;AACzB,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,sBAAsB,GAAG,GAAG;AAClC,MAAMC,cAAc,GAAG,GAAG;AAC1B,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,2BAA2B,GAAG,GAAG;AACvC,MAAMC,+BAA+B,GAAG,GAAG;AAC3C,MAAMC,qBAAqB,GAAG,GAAG;AACjC,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,8BAA8B,GAAG,GAAG;AAC1C,MAAMC,yBAAyB,GAAG,GAAG;AACrC,MAAMC,6BAA6B,GAAG,GAAG;AACzC,MAAMC,mCAAmC,GAAG,GAAG;AAC/C,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,mCAAmC,GAAG,GAAG;AAC/C,MAAMC,2BAA2B,GAAG,GAAG;AACvC,MAAMC,gCAAgC,GAAG,GAAG;AAC5C,MAAMC,yBAAyB,GAAG,GAAG;AACrC,MAAMC,wBAAwB,GAAG,GAAG;AACpC,MAAMC,8BAA8B,GAAG,GAAG;AAC1C,MAAMC,gCAAgC,GAAG,GAAG;AAC5C,MAAMC,4BAA4B,GAAG,GAAG;AACxC,MAAMC,4BAA4B,GAAG,GAAG;AACxC,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,6BAA6B,GAAG,GAAG;AACzC,MAAMC,iCAAiC,GAAG,GAAG;AAC7C,MAAMC,iCAAiC,GAAG,GAAG;AAC7C,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,sBAAsB,GAAG,GAAG;AAClC,MAAMC,gCAAgC,GAAG,GAAG;AAC5C,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,mCAAmC,GAAG,GAAG;;AAE/C;AACA,MAAMC,qBAAqB,GAAG,GAAG;AACjC,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,yBAAyB,GAAG,GAAG;AACrC,MAAMC,4BAA4B,GAAG,GAAG;AACxC,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,yBAAyB,GAAG,GAAG;AACrC,MAAMC,kBAAkB,GAAG,GAAG;AAC9B,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,sBAAsB,GAAG,GAAG;AAClC,MAAMC,qCAAqC,GAAG,GAAG;AACjD,MAAMC,qBAAqB,GAAG,GAAG;AACjC,MAAMC,iCAAiC,GAAG,GAAG;AAC7C,MAAMC,4BAA4B,GAAG,GAAG;AACxC,MAAMC,iBAAiB,GAAG,GAAG;AAC7B,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,wBAAwB,GAAG,GAAG;AACpC,MAAMC,eAAe,GAAG,GAAG;AAC3B,MAAMC,0BAA0B,GAAG,GAAG;AACtC,MAAMC,kBAAkB,GAAG,GAAG;;AAE9B;AACA,MAAMC,sBAAsB,GAAG,GAAG;;AAElC;AACA;AACA,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;AACjCD,eAAe,CAACE,GAAG,CAAC,UAAU,EAAExB,qBAAqB,CAAC;AACtDsB,eAAe,CAACE,GAAG,CAAC,UAAU,EAAE,CAACjC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACvF+B,eAAe,CAACE,GAAG,CAAC,UAAU,EAAEvD,cAAc,CAAC;AAC/CqD,eAAe,CAACE,GAAG,CAAC,UAAU,EAAEhD,yBAAyB,CAAC;AAC1D8C,eAAe,CAACE,GAAG,CAAC,UAAU,EAAE1D,aAAa,CAAC;AAC9CwD,eAAe,CAACE,GAAG,CAAC,UAAU,EAAEnE,0BAA0B,CAAC;AAC3DiE,eAAe,CAACE,GAAG,CAAC,UAAU,EAAE,CAACzC,yBAAyB,EAAE,6BAA6B,CAAC,CAAC;AAC3FuC,eAAe,CAACE,GAAG,CAAC,UAAU,EAAExB,qBAAqB,CAAC;AACtDsB,eAAe,CAACE,GAAG,CAAC,WAAW,EAAE,CAACpC,4BAA4B,EAAE,wBAAwB,CAAC,CAAC;AAC1FkC,eAAe,CAACE,GAAG,CAAC,WAAW,EAAEhC,6BAA6B,CAAC;AAC/D8B,eAAe,CAACE,GAAG,CAAC,WAAW,EAAE,CAAClC,0BAA0B,EAAE,yEAAyE,CAAC,CAAC;AACzIgC,eAAe,CAACE,GAAG,CAAC,WAAW,EAAExB,qBAAqB,CAAC;AACvDsB,eAAe,CAACE,GAAG,CAAC,WAAW,EAAExB,qBAAqB,CAAC;AACvDsB,eAAe,CAACE,GAAG,CAAC,WAAW,EAAExD,sBAAsB,CAAC;AACxDsD,eAAe,CAACE,GAAG,CAAC,WAAW,EAAExE,qBAAqB,CAAC;AACvDsE,eAAe,CAACE,GAAG,CAAC,WAAW,EAAEH,sBAAsB,CAAC;;AAExD;AACA,MAAMI,QAAQ,GAAG,IAAIF,GAAG,CAAC,CAAC;AAC1BE,QAAQ,CAACD,GAAG,CAAClI,gBAAgB;AAA2B;AACtD,cAAc,CAAC;AACjBmI,QAAQ,CAACD,GAAG,CAACjI,sBAAsB;AAAqB;AACtD,oBAAoB,CAAC;AACvBkI,QAAQ,CAACD,GAAG,CAAChI,0BAA0B;AAAiB;AACtD,iCAAiC,CAAC;AACpCiI,QAAQ,CAACD,GAAG,CAAC/H,2BAA2B;AAAgB;AACtD,gCAAgC,CAAC;AACnCgI,QAAQ,CAACD,GAAG,CAAC9H,mCAAmC;AAAQ;AACtD,wCAAwC,CAAC;AAC3C+H,QAAQ,CAACD,GAAG,CAAC7H,gCAAgC;AAAW;AACtD,8BAA8B,CAAC;AACjC;AACA8H,QAAQ,CAACD,GAAG,CAAC5H,yBAAyB;AAAkB;AACtD,uCAAuC,CAAC;AAC1C6H,QAAQ,CAACD,GAAG,CAAC3H,gCAAgC;AAAW;AACtD,0CAA0C,CAAC;AAC7C4H,QAAQ,CAACD,GAAG,CAAC1H,0BAA0B;AAAiB;AACtD,oDAAoD,CAAC;AACvD2H,QAAQ,CAACD,GAAG,CAACzH,0BAA0B;AAAiB;AACtD,wBAAwB,CAAC;AAC3B0H,QAAQ,CAACD,GAAG,CAACxH,0BAA0B;AAAiB;AACtD,uCAAuC,CAAC;AAC1C;AACAyH,QAAQ,CAACD,GAAG,CAACvH,iCAAiC;AAAU;AACtD,mCAAmC,CAAC;AACtCwH,QAAQ,CAACD,GAAG,CAACtH,WAAW;AAAgC;AACtD,oDAAoD,CAAC;AACvDuH,QAAQ,CAACD,GAAG,CAACrH,cAAc;AAA6B;AACtD,mBAAmB,CAAC;AACtBsH,QAAQ,CAACD,GAAG,CAACpH,eAAe;AAA4B;AACtD,uDAAuD,CAAC;AAC1DqH,QAAQ,CAACD,GAAG,CAACnH,+BAA+B;AAAY;AACtD,uCAAuC,CAAC;AAC1CoH,QAAQ,CAACD,GAAG,CAAClH,eAAe;AAA4B;AACtD,aAAa,CAAC;AAChBmH,QAAQ,CAACD,GAAG,CAACjH,YAAY;AAA+B;AACtD,gDAAgD,CAAC;AACnD;AACAkH,QAAQ,CAACD,GAAG,CAAChH,uBAAuB;AAAoB;AACtD,0BAA0B,CAAC;AAC7BiH,QAAQ,CAACD,GAAG,CAAC/G,+BAA+B;AAAY;AACtD,yCAAyC,CAAC;AAC5CgH,QAAQ,CAACD,GAAG,CAAC9G,2BAA2B;AAAgB;AACtD,gDAAgD,CAAC;AACnD+G,QAAQ,CAACD,GAAG,CAAC7G,sBAAsB;AAAqB;AACtD,sDAAsD,CAAC;AACzD8G,QAAQ,CAACD,GAAG,CAAC5G,gCAAgC;AAAW;AACtD,oDAAoD,CAAC;AACvD6G,QAAQ,CAACD,GAAG,CAAC3G,wBAAwB;AAAmB;AACtD,mEAAmE,CAAC;AACtE4G,QAAQ,CAACD,GAAG,CAAC1G,+BAA+B;AAAY;AACtD,gEAAgE,CAAC;AACnE2G,QAAQ,CAACD,GAAG,CAACzG,4BAA4B;AAAe;AACtD,iEAAiE,CAAC;AACpE0G,QAAQ,CAACD,GAAG,CAACxG,wBAAwB;AAAmB;AACtD,4CAA4C,CAAC;AAC/CyG,QAAQ,CAACD,GAAG,CAACvG,qBAAqB;AAAsB;AACtD,8FAA8F,CAAC;AACjGwG,QAAQ,CAACD,GAAG,CAACtG,sBAAsB;AAAqB;AACtD,2FAA2F,CAAC;AAC9FuG,QAAQ,CAACD,GAAG,CAACrG,kCAAkC;AAAS;AACtD,6DAA6D,CAAC;AAChEsG,QAAQ,CAACD,GAAG,CAACpG,6BAA6B;AAAc;AACtD,oDAAoD,CAAC;AACvDqG,QAAQ,CAACD,GAAG,CAACnG,sCAAsC;AAAK;AACtD,0DAA0D,CAAC;AAC7DoG,QAAQ,CAACD,GAAG,CAAClG,cAAc;AAA6B;AACtD,8CAA8C,CAAC;AACjDmG,QAAQ,CAACD,GAAG,CAACjG,2BAA2B;AAAgB;AACtD,yEAAyE,CAAC;AAC5EkG,QAAQ,CAACD,GAAG,CAAChG,4BAA4B;AAAe;AACtD,+DAA+D,CAAC;AAClEiG,QAAQ,CAACD,GAAG,CAAC/F,sBAAsB;AAAqB;AACtD,6DAA6D,CAAC;AAChEgG,QAAQ,CAACD,GAAG,CAAC9F,uBAAuB;AAAoB;AACtD,6CAA6C,CAAC;AAChD+F,QAAQ,CAACD,GAAG,CAAC7F,wBAAwB;AAAmB;AACtD,sCAAsC,CAAC;AACzC8F,QAAQ,CAACD,GAAG,CAAC5F,kBAAkB;AAAyB;AACtD,sBAAsB,CAAC;AACzB6F,QAAQ,CAACD,GAAG,CAAC3F,2BAA2B;AAAgB;AACtD,4CAA4C,CAAC;AAC/C4F,QAAQ,CAACD,GAAG,CAAC1F,sBAAsB;AAAqB;AACtD,uCAAuC,CAAC;AAC1C2F,QAAQ,CAACD,GAAG,CAACzF,gBAAgB;AAA2B;AACtD,4BAA4B,CAAC;AAC/B0F,QAAQ,CAACD,GAAG,CAACxF,eAAe;AAA4B;AACtD,4BAA4B,CAAC;AAC/ByF,QAAQ,CAACD,GAAG,CAACvF,2BAA2B;AAAgB;AACtD,8BAA8B,CAAC;AACjCwF,QAAQ,CAACD,GAAG,CAACtF,uBAAuB;AAAoB;AACtD,kEAAkE,CAAC;AACrEuF,QAAQ,CAACD,GAAG,CAACrF,mBAAmB;AAAwB;AACtD,kCAAkC,CAAC;AACrCsF,QAAQ,CAACD,GAAG,CAACpF,gBAAgB;AAA2B;AACtD,+CAA+C,CAAC;AAClDqF,QAAQ,CAACD,GAAG,CAACnF,sBAAsB;AAAqB;AACtD,kJAAkJ,CAAC;AACrJoF,QAAQ,CAACD,GAAG,CAAClF,sBAAsB;AAAqB;AACtD,gEAAgE,CAAC;AACnEmF,QAAQ,CAACD,GAAG,CAACjF,sBAAsB;AAAqB;AACtD,sEAAsE,CAAC;AACzE;AACAkF,QAAQ,CAACD,GAAG,CAAChF,iCAAiC;AAAU;AACtD,wCAAwC,CAAC;AAC3CiF,QAAQ,CAACD,GAAG,CAAC/E,YAAY;AAA+B;AACtD,+CAA+C,CAAC;AAClDgF,QAAQ,CAACD,GAAG,CAAC9E,kBAAkB;AAAyB;AACtD,oDAAoD,CAAC;AACvD+E,QAAQ,CAACD,GAAG,CAAC7E,sBAAsB;AAAqB;AACtD,uCAAuC,CAAC;AAC1C8E,QAAQ,CAACD,GAAG,CAAC5E,4BAA4B;AAAe;AACtD,iCAAiC,CAAC;AACpC6E,QAAQ,CAACD,GAAG,CAAC3E,oBAAoB;AAAuB;AACtD,sBAAsB,CAAC;AACzB4E,QAAQ,CAACD,GAAG,CAAC1E,yBAAyB;AAAkB;AACtD,4IAA4I,CAAC;AAC/I2E,QAAQ,CAACD,GAAG,CAACzE,yBAAyB;AAAkB;AACtD,oHAAoH,CAAC;AACvH0E,QAAQ,CAACD,GAAG,CAACxE,qBAAqB;AAAsB;AACtD,0BAA0B,CAAC;AAC7ByE,QAAQ,CAACD,GAAG,CAACvE,mBAAmB;AAAwB;AACtD,mDAAmD,CAAC;AACtDwE,QAAQ,CAACD,GAAG,CAACtE,2BAA2B;AAAgB;AACtD,gEAAgE,CAAC;AACnEuE,QAAQ,CAACD,GAAG,CAACrE,gBAAgB;AAA2B;AACtD,oBAAoB,CAAC;AACvBsE,QAAQ,CAACD,GAAG,CAACpE,iCAAiC;AAAU;AACtD,4DAA4D,CAAC;AAC/DqE,QAAQ,CAACD,GAAG,CAACnE,0BAA0B;AAAiB;AACtD,sFAAsF,CAAC;AACzFoE,QAAQ,CAACD,GAAG,CAAClE,qBAAqB;AAAsB;AACtD,iEAAiE,CAAC;AACpEmE,QAAQ,CAACD,GAAG,CAACjE,oCAAoC;AAAO;AACtD,6DAA6D,CAAC;AAChEkE,QAAQ,CAACD,GAAG,CAAChE,8BAA8B;AAAa;AACtD,mEAAmE,CAAC;AACtEiE,QAAQ,CAACD,GAAG,CAAC/D,0BAA0B;AAAiB;AACtD,6EAA6E,CAAC;AAChFgE,QAAQ,CAACD,GAAG,CAAC9D,uBAAuB;AAAoB;AACtD,0BAA0B,CAAC;AAC7B+D,QAAQ,CAACD,GAAG,CAAC7D,0BAA0B;AAAiB;AACtD,uEAAuE,CAAC;AAC1E8D,QAAQ,CAACD,GAAG,CAAC5D,2BAA2B;AAAgB;AACtD,iEAAiE,CAAC;AACpE6D,QAAQ,CAACD,GAAG,CAAC3D,6BAA6B;AAAc;AACtD,+DAA+D,CAAC;AAClE4D,QAAQ,CAACD,GAAG,CAAC1D,aAAa;AAA8B;AACtD,2EAA2E,CAAC;AAC9E2D,QAAQ,CAACD,GAAG,CAACzD,YAAY;AAA+B;AACtD,oBAAoB,CAAC;AACvB0D,QAAQ,CAACD,GAAG,CAACxD,sBAAsB;AAAqB;AACtD,gBAAgB,CAAC;AACnByD,QAAQ,CAACD,GAAG,CAACvD,cAAc;AAA6B;AACtD,wBAAwB,CAAC;AAC3BwD,QAAQ,CAACD,GAAG,CAACtD,oBAAoB;AAAuB;AACtD,wBAAwB,CAAC;AAC3BuD,QAAQ,CAACD,GAAG,CAACrD,2BAA2B;AAAgB;AACtD,2CAA2C,CAAC;AAC9CsD,QAAQ,CAACD,GAAG,CAACpD,+BAA+B;AAAY;AACtD,uGAAuG,CAAC;AAC1GqD,QAAQ,CAACD,GAAG,CAACnD,qBAAqB;AAAsB;AACtD,wHAAwH,CAAC;AAC3HoD,QAAQ,CAACD,GAAG,CAAClD,mBAAmB;AAAwB;AACtD,8BAA8B,CAAC;AACjCmD,QAAQ,CAACD,GAAG,CAACjD,8BAA8B;AAAa;AACtD,yDAAyD,CAAC;AAC5DkD,QAAQ,CAACD,GAAG,CAAChD,yBAAyB;AAAkB;AACtD,0DAA0D,CAAC;AAC7DiD,QAAQ,CAACD,GAAG,CAAC/C,6BAA6B;AAAc;AACtD,4EAA4E,CAAC;AAC/EgD,QAAQ,CAACD,GAAG,CAAC9C,mCAAmC;AAAQ;AACtD,oGAAoG,CAAC;AACvG+C,QAAQ,CAACD,GAAG,CAAC7C,0BAA0B;AAAiB;AACtD,qDAAqD,CAAC;AACxD8C,QAAQ,CAACD,GAAG,CAAC5C,mCAAmC;AAAQ;AACtD,iDAAiD,CAAC;AACpD6C,QAAQ,CAACD,GAAG,CAAC3C,2BAA2B;AAAgB;AACtD,8EAA8E,CAAC;AACjF4C,QAAQ,CAACD,GAAG,CAAC1C,gCAAgC;AAAW;AACtD,wEAAwE,CAAC;AAC3E2C,QAAQ,CAACD,GAAG,CAACzC,yBAAyB;AAAkB;AACtD,gCAAgC,CAAC;AACnC0C,QAAQ,CAACD,GAAG,CAACxC,wBAAwB;AAAmB;AACtD,mGAAmG,CAAC;AACtGyC,QAAQ,CAACD,GAAG,CAACvC,8BAA8B;AAAa;AACtD,kCAAkC,CAAC;AACrCwC,QAAQ,CAACD,GAAG,CAACtC,gCAAgC;AAAW;AACtD,yDAAyD,CAAC;AAC5DuC,QAAQ,CAACD,GAAG,CAACrC,4BAA4B;AAAe;AACtD,+CAA+C,CAAC;AAClDsC,QAAQ,CAACD,GAAG,CAACpC,4BAA4B;AAAe;AACtD,gCAAgC,CAAC;AACnCqC,QAAQ,CAACD,GAAG,CAACnC,0BAA0B;AAAiB;AACtD,0CAA0C,CAAC;AAC7CoC,QAAQ,CAACD,GAAG,CAAClC,0BAA0B;AAAiB;AACtD,iDAAiD,CAAC;AACpDmC,QAAQ,CAACD,GAAG,CAACjC,0BAA0B;AAAiB;AACtD,oCAAoC,CAAC;AACvCkC,QAAQ,CAACD,GAAG,CAAChC,6BAA6B;AAAc;AACtD,oCAAoC,CAAC;AACvCiC,QAAQ,CAACD,GAAG,CAAC/B,iCAAiC;AAAU;AACtD,sDAAsD,CAAC;AACzDgC,QAAQ,CAACD,GAAG,CAAC9B,iCAAiC;AAAU;AACtD,oDAAoD,CAAC;AACvD+B,QAAQ,CAACD,GAAG,CAAC7B,0BAA0B;AAAiB;AACtD,yEAAyE,CAAC;AAC5E8B,QAAQ,CAACD,GAAG,CAAC5B,sBAAsB;AAAqB;AACtD,0EAA0E,CAAC;AAC7E6B,QAAQ,CAACD,GAAG,CAAC3B,gCAAgC;AAAW;AACtD,6FAA6F,CAAC;AAChG4B,QAAQ,CAACD,GAAG,CAAC1B,uBAAuB;AAAoB;AACtD,kCAAkC,CAAC;AACrC2B,QAAQ,CAACD,GAAG,CAACzB,mCAAmC;AAAQ;AACtD,uFAAuF,CAAC;;AAE1F;;AAEA0B,QAAQ,CAACD,GAAG,CAACxB,qBAAqB;AAAsB;AACtD,8CAA8C,CAAC;AACjDyB,QAAQ,CAACD,GAAG,CAACvB,0BAA0B;AAAiB;AACtD,+EAA+E,CAAC;AAClFwB,QAAQ,CAACD,GAAG,CAACtB,yBAAyB;AAAkB;AACtD,gFAAgF,CAAC;AACnFuB,QAAQ,CAACD,GAAG,CAACrB,4BAA4B;AAAe;AACtD,gGAAgG,CAAC;AACnGsB,QAAQ,CAACD,GAAG,CAACpB,oBAAoB;AAAuB;AACtD,iFAAiF,CAAC;AACpFqB,QAAQ,CAACD,GAAG,CAACnB,oBAAoB;AAAuB;AACtD,yFAAyF,CAAC;AAC5FoB,QAAQ,CAACD,GAAG,CAAClB,uBAAuB;AAAoB;AACtD,+FAA+F,CAAC;AAClGmB,QAAQ,CAACD,GAAG,CAACjB,yBAAyB;AAAkB;AACtD,oEAAoE,CAAC;AACvEkB,QAAQ,CAACD,GAAG,CAAChB,kBAAkB;AAAyB;AACtD,kEAAkE,CAAC;AACrEiB,QAAQ,CAACD,GAAG,CAACf,uBAAuB;AAAoB;AACtD,kGAAkG,CAAC;AACrGgB,QAAQ,CAACD,GAAG,CAACd,sBAAsB;AAAqB;AACtD,sFAAsF,CAAC;AACzFe,QAAQ,CAACD,GAAG,CAACb,qCAAqC;AAAM;AACtD,2CAA2C,CAAC;AAC9Cc,QAAQ,CAACD,GAAG,CAACZ,qBAAqB;AAAsB;AACtD,iDAAiD,CAAC;AACpDa,QAAQ,CAACD,GAAG,CAACX,iCAAiC;AAAU;AACtD,mCAAmC,CAAC;AACtCY,QAAQ,CAACD,GAAG,CAACV,4BAA4B;AAAe;AACtD,iDAAiD,CAAC;AACpDW,QAAQ,CAACD,GAAG,CAACT,iBAAiB;AAA0B;AACtD,wEAAwE,CAAC;AAC3EU,QAAQ,CAACD,GAAG,CAACR,uBAAuB;AAAoB;AACtD,gEAAgE,CAAC;AACnES,QAAQ,CAACD,GAAG,CAACP,wBAAwB;AAAmB;AACtD,4HAA4H,CAAC;AAC/HQ,QAAQ,CAACD,GAAG,CAACN,eAAe;AAA4B;AACtD,wHAAwH,CAAC;AAC3HO,QAAQ,CAACD,GAAG,CAACL,0BAA0B;AAAiB;AACtD,sEAAsE,CAAC;AACzEM,QAAQ,CAACD,GAAG,CAACJ,kBAAkB;AAAyB;AACtD,iGAAiG,CAAC;;AAEpG;;AAEAK,QAAQ,CAACD,GAAG,CAACH,sBAAsB;AAA4B;AAC7D,4CAA4C,CAAC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,MAAMA,CAACC,SAAS,EAAE;EACzB,IAAI,CAACA,SAAS,EAAE;IACd,MAAMC,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;IACrDC,QAAQ,CAAC,GAAGN,IAAI,CAAC;EACnB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,cAAcA,CAACP,IAAI,EAAEQ,WAAW,EAAEC,WAAW,EAAE;EACtDX,MAAM,CAACE,IAAI,CAACU,MAAM,IAAIF,WAAW,IAAIR,IAAI,CAACU,MAAM,IAAID,WAAW,EAC7D1I,gCAAgC,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4I,mBAAmBA,CAACC,GAAG,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EACxD,IAAIF,GAAG,CAACE,QAAQ,CAAC,KAAKC,SAAS,EAAE;IAC/BC,oBAAoB,CAAC,OAAOJ,GAAG,CAACE,QAAQ,CAAC,KAAK,SAAS,EAAED,YAAY,EACnEC,QAAQ,CAAC;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASG,uBAAuBA,CAACL,GAAG,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EAC5D,IAAIF,GAAG,CAACE,QAAQ,CAAC,KAAKC,SAAS,EAAE;IAC/BC,oBAAoB,CAAC,OAAOJ,GAAG,CAACE,QAAQ,CAAC,KAAK,UAAU,EAAED,YAAY,EACpEC,QAAQ,CAAC;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,kBAAkBA,CAACN,GAAG,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EACvD,IAAIF,GAAG,CAACE,QAAQ,CAAC,KAAKC,SAAS,EAAE;IAC/BC,oBAAoB,CAACG,MAAM,CAACC,SAAS,CAACR,GAAG,CAACE,QAAQ,CAAC,CAAC,EAAED,YAAY,EAChEC,QAAQ,CAAC;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,0BAA0BA,CAACT,GAAG,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EAC/D,IAAIF,GAAG,CAACE,QAAQ,CAAC,KAAKC,SAAS,EAAE;IAC/BC,oBAAoB,CAACG,MAAM,CAACC,SAAS,CAACR,GAAG,CAACE,QAAQ,CAAC,CAAC,IAAIF,GAAG,CAACE,QAAQ,CAAC,IAAI,CAAC,EACxED,YAAY,EAAEC,QAAQ,CAAC;EAC3B;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASQ,qBAAqBA,CAACV,GAAG,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EAC1D,IAAIF,GAAG,CAACE,QAAQ,CAAC,KAAKC,SAAS,EAAE;IAC/BC,oBAAoB,CAAC,OAAOJ,GAAG,CAACE,QAAQ,CAAC,KAAK,QAAQ,EAAED,YAAY,EAClEC,QAAQ,CAAC;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,oBAAoBA,CAACjB,SAAS,EAAEc,YAAY,EAAEC,QAAQ,EAAE;EAC/DhB,MAAM,CAACC,SAAS,EAAEjI,mCAAmC,EAAEgJ,QAAQ,EAC7DD,YAAY,CAAC;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASU,gBAAgBA,CAACxB,SAAS,EAAEc,YAAY,EAAE;EACjDf,MAAM,CAACC,SAAS,EAAElI,2BAA2B,EAAEgJ,YAAY,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASW,eAAeA,CAACzB,SAAS,EAAEe,QAAQ,EAAE;EAC5ChB,MAAM,CAACC,SAAS,EAAEnI,0BAA0B,EAAEkJ,QAAQ,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,MAAMA,CAACC,QAAQ,EAAE;EACxB,IAAIC,QAAQ,GAAG9B,QAAQ,CAAC+B,GAAG,CAACF,QAAQ,CAAC;EACrC,IAAI1B,IAAI,GAAG,CAAC,GAAGK,SAAS,CAAC;EACzB,IAAI,CAACsB,QAAQ,EAAE;IACb3B,IAAI,GAAG,CAACe,SAAS,EAAEW,QAAQ,CAAC;IAC5BA,QAAQ,GAAGnH,mBAAmB;IAC9BoH,QAAQ,GAAG9B,QAAQ,CAAC+B,GAAG,CAACF,QAAQ,CAAC;EACnC;EACA,MAAMG,WAAW,GAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACxD,MAAMC,IAAI,GAAI,GAAEvK,UAAW,IAAGoK,WAAY,EAAC;EAC3C7B,IAAI,CAAC,CAAC,CAAC,GAAI,GAAEgC,IAAK,KAAIL,QAAS,EAAC;EAChC,MAAMM,GAAG,GAAG,IAAIC,KAAK,CAAC3K,IAAI,CAAC4K,MAAM,CAAC,GAAGnC,IAAI,CAAC,CAAC;EAC3CiC,GAAG,CAACD,IAAI,GAAGA,IAAI;EACfE,KAAK,CAACE,iBAAiB,CAACH,GAAG,EAAER,MAAM,CAAC;EACpC,OAAOQ,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS3B,QAAQA,CAAA,EAAG;EAClB,MAAOmB,MAAM,CAAC,GAAGpB,SAAS,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASgC,mBAAmBA,CAACC,OAAO,EAAE;EACpChC,QAAQ,CAACjF,mBAAmB,EAAEiH,OAAO,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACN,GAAG,EAAEO,KAAK,EAAE;EAChC,IAAI,CAACP,GAAG,CAACD,IAAI,EAAE;IACb,MAAMS,GAAG,GAAGR,GAAG,CAACS,OAAO,CAACC,OAAO,CAAC,GAAG,CAAC;IACpC,IAAIF,GAAG,GAAG,CAAC,EAAE;MACXR,GAAG,CAACD,IAAI,GAAGC,GAAG,CAACS,OAAO,CAACE,MAAM,CAAC,CAAC,EAAEH,GAAG,CAAC;MACrC;AACN;AACA;AACA;MACM,MAAMI,QAAQ,GAAGrL,OAAO,CAAC,eAAe,CAAC;MACzC,IAAIyK,GAAG,CAACP,QAAQ,IAAImB,QAAQ,CAACC,IAAI,EAAE;QACjCb,GAAG,CAACS,OAAO,IAAI,IAAI,GAAG,kDAAkD,GACrE,GAAET,GAAG,CAACP,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE;MAClD;MACA,IAAIrC,eAAe,CAACqD,GAAG,CAACd,GAAG,CAACD,IAAI,CAAC,EAAE;QACjC,IAAIhC,IAAI,GAAG,EAAE;QACb,IAAIgD,cAAc;QAClB,MAAMC,eAAe,GAAGvD,eAAe,CAACkC,GAAG,CAACK,GAAG,CAACD,IAAI,CAAC;QACrD,IAAI,OAAOiB,eAAe,KAAK,QAAQ,EAAE;UACvCD,cAAc,GAAGC,eAAe;QAClC,CAAC,MAAM;UACLD,cAAc,GAAGC,eAAe,CAAC,CAAC,CAAC;UACnC,MAAMC,OAAO,GAAGD,eAAe,CAAC,CAAC,CAAC;UAClC,MAAME,OAAO,GAAGlB,GAAG,CAACS,OAAO,CAACU,KAAK,CAACF,OAAO,CAAC;UAC1C,IAAIC,OAAO,EAAE;YACXnD,IAAI,GAAGmD,OAAO,CAAChD,KAAK,CAAC,CAAC,CAAC;UACzB;QACF;QACA,MAAMkD,MAAM,GAAG5B,MAAM,CAACuB,cAAc,EAAE,GAAGhD,IAAI,CAAC;QAC9CiC,GAAG,CAACD,IAAI,GAAGqB,MAAM,CAACrB,IAAI;QACtBC,GAAG,CAACS,OAAO,GAAGW,MAAM,CAACX,OAAO,GAAG,IAAI,GAAGT,GAAG,CAACS,OAAO;MACnD;IACF;EACF;EAEA,IAAIT,GAAG,CAACqB,oBAAoB,EAAE;IAC5B,OAAOrB,GAAG,CAACqB,oBAAoB;IAC/BpB,KAAK,CAACE,iBAAiB,CAACH,GAAG,EAAEO,KAAK,CAAC;EACrC;EACA,OAAOP,GAAG;AACZ;;AAEA;AACAsB,MAAM,CAACC,OAAO,GAAG;EACf9L,gBAAgB;EAChBC,sBAAsB;EACtBC,0BAA0B;EAC1BC,2BAA2B;EAC3BC,mCAAmC;EACnCC,gCAAgC;EAChCC,yBAAyB;EACzBC,gCAAgC;EAChCC,0BAA0B;EAC1BC,0BAA0B;EAC1BC,0BAA0B;EAC1BC,iCAAiC;EACjCC,WAAW;EACXC,cAAc;EACdC,eAAe;EACfC,+BAA+B;EAC/BC,eAAe;EACfC,YAAY;EACZC,uBAAuB;EACvBC,+BAA+B;EAC/BC,2BAA2B;EAC3BC,sBAAsB;EACtBC,gCAAgC;EAChCC,wBAAwB;EACxBC,+BAA+B;EAC/BC,4BAA4B;EAC5BC,wBAAwB;EACxBC,qBAAqB;EACrBC,sBAAsB;EACtBC,kCAAkC;EAClCC,6BAA6B;EAC7BC,sCAAsC;EACtCC,cAAc;EACdC,2BAA2B;EAC3BC,4BAA4B;EAC5BC,sBAAsB;EACtBC,uBAAuB;EACvBC,wBAAwB;EACxBC,kBAAkB;EAClBC,2BAA2B;EAC3BC,sBAAsB;EACtBC,gBAAgB;EAChBC,eAAe;EACfC,2BAA2B;EAC3BC,uBAAuB;EACvBC,mBAAmB;EACnBC,gBAAgB;EAChBC,sBAAsB;EACtBC,sBAAsB;EACtBC,sBAAsB;EACtBC,iCAAiC;EACjCC,YAAY;EACZC,kBAAkB;EAClBC,sBAAsB;EACtBC,4BAA4B;EAC5BC,oBAAoB;EACpBC,yBAAyB;EACzBC,yBAAyB;EACzBC,qBAAqB;EACrBC,mBAAmB;EACnBC,2BAA2B;EAC3BC,gBAAgB;EAChBC,iCAAiC;EACjCC,0BAA0B;EAC1B2C,qBAAqB;EACrBC,0BAA0B;EAC1BC,yBAAyB;EACzBC,4BAA4B;EAC5BC,oBAAoB;EACpBC,oBAAoB;EACpBC,uBAAuB;EACvBC,yBAAyB;EACzBC,kBAAkB;EAClBC,uBAAuB;EACvBC,sBAAsB;EACtBC,qCAAqC;EACrCC,qBAAqB;EACrBC,iCAAiC;EACjCC,4BAA4B;EAC5BC,iBAAiB;EACjBC,uBAAuB;EACvBI,kBAAkB;EAClB9D,qBAAqB;EACrBC,oCAAoC;EACpCC,8BAA8B;EAC9BC,0BAA0B;EAC1BC,uBAAuB;EACvBC,0BAA0B;EAC1BC,2BAA2B;EAC3BC,6BAA6B;EAC7BE,YAAY;EACZC,sBAAsB;EACtBS,6BAA6B;EAC7BX,aAAa;EACbG,cAAc;EACdO,yBAAyB;EACzByC,wBAAwB;EACxBC,eAAe;EACfC,0BAA0B;EAC1BjD,oBAAoB;EACpBC,2BAA2B;EAC3BC,+BAA+B;EAC/BC,qBAAqB;EACrBC,mBAAmB;EACnBC,8BAA8B;EAC9BU,8BAA8B;EAC9BP,mCAAmC;EACnCC,0BAA0B;EAC1BC,mCAAmC;EACnCC,2BAA2B;EAC3BC,gCAAgC;EAChCC,yBAAyB;EACzBC,wBAAwB;EACxBE,gCAAgC;EAChCC,4BAA4B;EAC5BC,4BAA4B;EAC5BC,0BAA0B;EAC1BC,0BAA0B;EAC1BC,0BAA0B;EAC1BC,6BAA6B;EAC7BC,iCAAiC;EACjCC,iCAAiC;EACjCC,0BAA0B;EAC1BC,sBAAsB;EACtBC,gCAAgC;EAChCC,uBAAuB;EACvBC,mCAAmC;EACnCsF,0BAA0B,EAAG,GAAEhM,UAAW,IAAG2G,qBAAsB,EAAC;EACpEqB,sBAAsB;EACtBK,MAAM;EACNS,cAAc;EACdI,mBAAmB;EACnBM,uBAAuB;EACvBC,kBAAkB;EAClBI,qBAAqB;EACrBD,0BAA0B;EAC1BL,oBAAoB;EACpBO,gBAAgB;EAChBC,eAAe;EACfC,MAAM;EACNnB,QAAQ;EACR+B,mBAAmB;EACnBE;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}