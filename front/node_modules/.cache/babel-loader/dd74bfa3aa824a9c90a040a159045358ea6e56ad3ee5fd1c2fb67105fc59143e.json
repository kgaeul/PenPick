{"ast":null,"code":"// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst crypto = require('crypto');\nconst path = require('path');\nconst constants = require(\"./constants.js\");\nconst fs = require(\"fs\");\n\n/**\n   * Generate UUID (Used for Connection ID)\n   * @returns Promise\n   */\nasync function genuuid() {\n  return await new Promise((resolve, reject) => {\n    crypto.randomBytes(16, (err, buf) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(buf);\n      }\n    });\n  });\n}\n\n/**\n * Network Session Attributes\n */\nclass SessionAtts {\n  constructor(uuid) {\n    this.largeSDU = false;\n    this.tdu = constants.NSPDFTDULN;\n    this.nt = {};\n    this.nt.tcpNoDelay = true;\n    this.uuid = uuid;\n    this.nt.sslServerDNMatch = true;\n    this.nt.sslAllowWeakDNMatch = false;\n  }\n\n  /**\n   * Update Session attributes with input Parameters\n   * @param {object} Params Input paramters\n   */\n  setFrom(params) {\n    if (params) {\n      if (params.sdu > 0) {\n        this.sdu = parseInt(params.sdu);\n      }\n      if (typeof params.walletLocation === 'string') {\n        this.nt.walletFile = path.join(params.walletLocation, constants.PEM_WALLET_FILE_NAME);\n      }\n      if (typeof params.walletPassword === 'string') {\n        this.nt.walletPassword = params.walletPassword;\n      }\n      if (params.expireTime > 0) {\n        this.nt.expireTime = params.expireTime * 1000 * 60;\n      }\n      if (params.connectTimeout > 0) {\n        this.connectTimeout = params.connectTimeout * 1000;\n      }\n      if (params.transportConnectTimeout > 0) {\n        this.transportConnectTimeout = params.transportConnectTimeout * 1000;\n      }\n      if (params.recvTimeout > 0) {\n        this.recvTimeout = params.recvTimeout * 1000;\n      }\n      if (params.sendTimeout > 0) {\n        this.sendTimeout = params.sendTimeout * 1000;\n      }\n      if (typeof params.connectionIdPrefix === 'string') {\n        this.connectionIdPrefix = params.connectionIdPrefix;\n      }\n      if (typeof params.tcpNoDelay === 'boolean') {\n        this.nt.tcpNoDelay = params.tcpNoDelay;\n      }\n      if (typeof params.sslServerDNMatch === 'boolean') {\n        this.nt.sslServerDNMatch = params.sslServerDNMatch;\n      }\n      if (typeof params.sslAllowWeakDNMatch === 'boolean') {\n        this.nt.sslAllowWeakDNMatch = params.sslAllowWeakDNMatch;\n      }\n      if (typeof params.sslServerCertDN === 'string') {\n        this.nt.sslServerCertDN = params.sslServerCertDN;\n      }\n      if (typeof params.enable === 'string' && params.enable.toUpperCase() == \"BROKEN\") {\n        this.nt.enabledDCD = true;\n      }\n      if (typeof params.httpsProxy === 'string') {\n        this.nt.httpsProxy = params.httpsProxy;\n      }\n      if (params.httpsProxyPort >= 0) {\n        this.nt.httpsProxyPort = parseInt(params.httpsProxyPort);\n      }\n    }\n  }\n\n  /**\n   * Read wallet\n   * @returns Promise\n   */\n  readWalletFile() {\n    return new Promise((resolve, reject) => {\n      fs.readFile(this.nt.walletFile, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  /**\n   * Prepare attributes for connection, Generate Connection ID and read Wallet file\n   *\n   */\n  async prepare(protocol) {\n    if (!this.uuid) {\n      this.uuid = await genuuid();\n      this.uuid = this.uuid.toString('base64');\n    }\n    if (this.connectionIdPrefix) {\n      this.connectionId = this.connectionIdPrefix + this.uuid;\n    } else {\n      this.connectionId = this.uuid;\n    }\n    this.nt.connectionId = this.connectionId;\n    if (protocol && protocol.toUpperCase() == \"TCPS\" && this.nt.walletFile) {\n      this.nt.wallet = await this.readWalletFile();\n    }\n    if (!this.connectTimeout && !this.transportConnectTimeout) this.transportConnectTimeout = 60 * 1000; /* Default to 60 secs */\n  }\n}\nmodule.exports = SessionAtts;","map":{"version":3,"names":["crypto","require","path","constants","fs","genuuid","Promise","resolve","reject","randomBytes","err","buf","SessionAtts","constructor","uuid","largeSDU","tdu","NSPDFTDULN","nt","tcpNoDelay","sslServerDNMatch","sslAllowWeakDNMatch","setFrom","params","sdu","parseInt","walletLocation","walletFile","join","PEM_WALLET_FILE_NAME","walletPassword","expireTime","connectTimeout","transportConnectTimeout","recvTimeout","sendTimeout","connectionIdPrefix","sslServerCertDN","enable","toUpperCase","enabledDCD","httpsProxy","httpsProxyPort","readWalletFile","readFile","data","prepare","protocol","toString","connectionId","wallet","module","exports"],"sources":["C:/Users/user1/Desktop/finalproject_penpick/node_modules/oracledb/lib/thin/sqlnet/sessionAtts.js"],"sourcesContent":["// Copyright (c) 2022, 2023, Oracle and/or its affiliates.\n\n//-----------------------------------------------------------------------------\n//\n// This software is dual-licensed to you under the Universal Permissive License\n// (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License\n// 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose\n// either license.\n//\n// If you elect to accept the software under the Apache License, Version 2.0,\n// the following applies:\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//-----------------------------------------------------------------------------\n\n'use strict';\n\nconst crypto = require('crypto');\nconst path = require('path');\nconst constants = require(\"./constants.js\");\nconst fs = require(\"fs\");\n\n/**\n   * Generate UUID (Used for Connection ID)\n   * @returns Promise\n   */\nasync function genuuid() {\n  return await new Promise((resolve, reject) => {\n    crypto.randomBytes(16, (err, buf) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(buf);\n      }\n    });\n  });\n}\n\n/**\n * Network Session Attributes\n */\nclass SessionAtts {\n\n  constructor(uuid) {\n    this.largeSDU = false;\n    this.tdu = constants.NSPDFTDULN;\n    this.nt = {};\n    this.nt.tcpNoDelay = true;\n    this.uuid = uuid;\n    this.nt.sslServerDNMatch = true;\n    this.nt.sslAllowWeakDNMatch = false;\n  }\n\n  /**\n   * Update Session attributes with input Parameters\n   * @param {object} Params Input paramters\n   */\n  setFrom(params) {\n    if (params) {\n      if (params.sdu > 0) {\n        this.sdu = parseInt(params.sdu);\n      }\n      if (typeof params.walletLocation === 'string') {\n        this.nt.walletFile = path.join(params.walletLocation, constants.PEM_WALLET_FILE_NAME);\n      }\n      if (typeof params.walletPassword === 'string') {\n        this.nt.walletPassword = params.walletPassword;\n      }\n      if (params.expireTime > 0) {\n        this.nt.expireTime = params.expireTime * 1000 * 60;\n      }\n      if (params.connectTimeout > 0) {\n        this.connectTimeout = params.connectTimeout * 1000;\n      }\n      if (params.transportConnectTimeout > 0) {\n        this.transportConnectTimeout = params.transportConnectTimeout * 1000;\n      }\n      if (params.recvTimeout > 0) {\n        this.recvTimeout = params.recvTimeout * 1000;\n      }\n      if (params.sendTimeout > 0) {\n        this.sendTimeout = params.sendTimeout * 1000;\n      }\n      if (typeof params.connectionIdPrefix === 'string') {\n        this.connectionIdPrefix = params.connectionIdPrefix;\n      }\n      if (typeof params.tcpNoDelay === 'boolean') {\n        this.nt.tcpNoDelay = params.tcpNoDelay;\n      }\n      if (typeof params.sslServerDNMatch === 'boolean') {\n        this.nt.sslServerDNMatch = params.sslServerDNMatch;\n      }\n      if (typeof params.sslAllowWeakDNMatch === 'boolean') {\n        this.nt.sslAllowWeakDNMatch = params.sslAllowWeakDNMatch;\n      }\n      if (typeof params.sslServerCertDN === 'string') {\n        this.nt.sslServerCertDN = params.sslServerCertDN;\n      }\n      if (typeof params.enable === 'string' && params.enable.toUpperCase() == \"BROKEN\") {\n        this.nt.enabledDCD = true;\n      }\n      if (typeof params.httpsProxy === 'string') {\n        this.nt.httpsProxy = params.httpsProxy;\n      }\n      if (params.httpsProxyPort >= 0) {\n        this.nt.httpsProxyPort = parseInt(params.httpsProxyPort);\n      }\n    }\n  }\n\n  /**\n   * Read wallet\n   * @returns Promise\n   */\n  readWalletFile() {\n    return new Promise((resolve, reject)=> {\n      fs.readFile(this.nt.walletFile, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  /**\n   * Prepare attributes for connection, Generate Connection ID and read Wallet file\n   *\n   */\n  async prepare(protocol) {\n    if (!this.uuid) {\n      this.uuid = await genuuid();\n      this.uuid = this.uuid.toString('base64');\n    }\n    if (this.connectionIdPrefix) {\n      this.connectionId = this.connectionIdPrefix + this.uuid;\n    } else {\n      this.connectionId = this.uuid;\n    }\n    this.nt.connectionId = this.connectionId;\n\n    if (protocol && (protocol.toUpperCase() == \"TCPS\" && this.nt.walletFile)) {\n      this.nt.wallet = await this.readWalletFile();\n    }\n\n    if (!this.connectTimeout && !this.transportConnectTimeout)\n      this.transportConnectTimeout = 60 * 1000; /* Default to 60 secs */\n  }\n\n}\n\nmodule.exports = SessionAtts;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}